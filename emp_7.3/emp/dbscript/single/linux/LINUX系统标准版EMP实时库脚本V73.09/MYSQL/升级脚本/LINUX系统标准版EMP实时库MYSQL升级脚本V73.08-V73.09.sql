/*****V73.07-V73.08 END*/
DELIMITER $
DROP PROCEDURE IF EXISTS `LF_PVERV0`$

CREATE  DEFINER=`root`@`%`  PROCEDURE `LF_PVERV0`(
    DBVERSIONSTR VARCHAR(32),
    NUM INT,
    TOTALSTR INT
)
BEGIN
    IF NOT EXISTS(SELECT * FROM LF_DB_SCRIPT WHERE VERSION=DBVERSIONSTR) THEN
    /*EMP产品数据库版本信息表*/ 
    INSERT INTO LF_DB_SCRIPT(VERSION,UPDATETIME,CREATETIME,CURRENT_NO,TOTAL,STATE,MEMO)
    VALUES(DBVERSIONSTR,NOW(),NOW(),NUM,TOTALSTR,1,'WEB包更改');
    END IF;
END $        
   
CALL LF_PVERV0('73.09',1,1)$
DROP PROCEDURE IF EXISTS `LF_PVERV0`$

/*WEB升级脚本 START*/
/*WEB升级脚本 END*/

/*网关升级脚本 V4.06.06-V4.06.07 START*/
DELIMITER ;;
DROP PROCEDURE IF EXISTS COLUMNADD; 
CREATE DEFINER=`root`@`%` PROCEDURE `COLUMNADD`(TBNAME VARCHAR(15),COLNAME VARCHAR(32),COLTYPE VARCHAR(64))
BEGIN
DECLARE  CURRENTDATABASE VARCHAR(100);
DECLARE  P_STR VARCHAR(300);
SELECT DATABASE() INTO CURRENTDATABASE;
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=CURRENTDATABASE AND TABLE_NAME = TBNAME AND COLUMN_NAME =COLNAME) THEN  
   SET P_STR= CONCAT('ALTER TABLE ',TBNAME,' ADD ',COLNAME ,' ',COLTYPE);
   SET @SQL = P_STR;
   PREPARE STMT FROM @SQL;
   EXECUTE STMT;
   DEALLOCATE PREPARE STMT;
END IF; 
END;;
DELIMITER ;

CALL COLUMNADD('GW_MT_TASK_BAK','SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
CALL COLUMNADD('GW_MT_TASK_BAK','LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');

CALL COLUMNADD('MT_LEVEL0_QUEUE','SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
CALL COLUMNADD('MT_LEVEL0_QUEUE','LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');

CALL COLUMNADD('MT_LEVEL1_QUEUE','SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
CALL COLUMNADD('MT_LEVEL1_QUEUE','LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');

CALL COLUMNADD('MT_LEVEL2_QUEUE','SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
CALL COLUMNADD('MT_LEVEL2_QUEUE','LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');

CALL COLUMNADD('MT_LEVEL3_QUEUE','SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
CALL COLUMNADD('MT_LEVEL3_QUEUE','LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');

CALL COLUMNADD('MT_LEVEL4_QUEUE','SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
CALL COLUMNADD('MT_LEVEL4_QUEUE','LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');

CALL COLUMNADD('MT_LEVEL5_QUEUE','SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
CALL COLUMNADD('MT_LEVEL5_QUEUE','LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');

CALL COLUMNADD('MT_LEVEL6_QUEUE','SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
CALL COLUMNADD('MT_LEVEL6_QUEUE','LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');

CALL COLUMNADD('MT_LEVEL7_QUEUE','SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
CALL COLUMNADD('MT_LEVEL7_QUEUE','LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');

CALL COLUMNADD('MT_LEVEL8_QUEUE','SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
CALL COLUMNADD('MT_LEVEL8_QUEUE','LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');

CALL COLUMNADD('MT_LEVEL9_QUEUE','SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
CALL COLUMNADD('MT_LEVEL9_QUEUE','LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');

-- 当前月份历史表添加字段
DELIMITER ;;
DROP PROCEDURE IF EXISTS PRO_ADDCOL_CUR;
CREATE DEFINER=`root`@`%` PROCEDURE PRO_ADDCOL_CUR()
BEGIN
DECLARE TABLENAME1 VARCHAR(20);
DECLARE TABLENAME2 VARCHAR(20);
DECLARE DATABASENAME1 VARCHAR(20);
DECLARE DATABASENAME2 VARCHAR(20);
DECLARE STR VARCHAR(256);
DECLARE V_SQL VARCHAR(256);
DECLARE done INT DEFAULT 0;
DECLARE CUR_TABLE  CURSOR FOR SELECT  TABLE_SCHEMA,TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE  TABLE_NAME LIKE 'MTTASK%';
DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;
SET TABLENAME1 =CONCAT('MTTASK',CAST(DATE_FORMAT(date_add(now(), interval -0 month),'%Y%m') AS SIGNED));
SELECT DATABASE() INTO DATABASENAME1;
OPEN CUR_TABLE;  
   emp_loop: LOOP  
        FETCH CUR_TABLE INTO DATABASENAME2,TABLENAME2; 
        IF done=1 THEN  
             LEAVE emp_loop;  
         END IF;  
        ##添加字段 
       IF  TABLENAME2=TABLENAME1 and DATABASENAME2=DATABASENAME1  THEN
        BEGIN
			CALL COLUMNADD(TABLENAME2,'SUID1','VARCHAR(64) ');
			CALL COLUMNADD(TABLENAME2,'LUID1','VARCHAR(64) ');
       END;
		
       END IF;
END LOOP emp_loop;  
CLOSE CUR_TABLE;    
END;;
DELIMITER ;
CALL PRO_ADDCOL_CUR();
DROP PROCEDURE IF EXISTS PRO_ADDCOL_CUR;

-- 当前月份之后的历史表添加字段
DELIMITER ;;
DROP PROCEDURE IF EXISTS PRO_ADDCOL;
CREATE DEFINER=`root`@`%` PROCEDURE PRO_ADDCOL()
BEGIN
DECLARE TABLENAME1 VARCHAR(20);
DECLARE TABLENAME2 VARCHAR(20);
DECLARE DATABASENAME1 VARCHAR(20);
DECLARE DATABASENAME2 VARCHAR(20);
DECLARE STR VARCHAR(256);
DECLARE V_SQL VARCHAR(256);
DECLARE done INT DEFAULT 0;
DECLARE CUR_TABLE  CURSOR FOR SELECT  TABLE_SCHEMA,TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE  TABLE_NAME LIKE 'MTTASK%';
DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;
SET TABLENAME1 =CONCAT('MTTASK',CAST(DATE_FORMAT(date_add(now(), interval -0 month),'%Y%m') AS SIGNED));
SELECT DATABASE() INTO DATABASENAME1;
OPEN CUR_TABLE;  
   emp_loop: LOOP  
        FETCH CUR_TABLE INTO DATABASENAME2,TABLENAME2; 
        IF done=1 THEN  
             LEAVE emp_loop;  
         END IF;  
        ##添加字段 
       IF  TABLENAME2>TABLENAME1 and DATABASENAME2=DATABASENAME1  THEN
        BEGIN
            CALL COLUMNADD(TABLENAME2,'SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
			CALL COLUMNADD(TABLENAME2,'LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
       END;
		
       END IF;
END LOOP emp_loop;  
CLOSE CUR_TABLE;    
END;;
DELIMITER ;
CALL PRO_ADDCOL();
DROP PROCEDURE IF EXISTS PRO_ADDCOL;

DELIMITER ;;
DROP PROCEDURE IF EXISTS `CREATETABLE`;
CREATE DEFINER=`root`@`%` PROCEDURE `CREATETABLE`(PITYPE INT,PIYM INT)
BEGIN
DECLARE STR VARCHAR(4000);
DECLARE TABLENAME VARCHAR(16);

IF PITYPE=1 THEN
SET TABLENAME=CONCAT('MTTASK',PIYM);
SET STR=CONCAT('CREATE TABLE `',TABLENAME,
'` (
  `ID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `MDAY` INT(11) NOT NULL DEFAULT ''0'',
  `USERID` VARCHAR(11) NOT NULL DEFAULT '''',
  `SPID` VARCHAR(32) NOT NULL DEFAULT '''',
  `SPGATE` VARCHAR(21) NOT NULL DEFAULT '''',
  `CPNO` VARCHAR(21) NOT NULL DEFAULT '''',
  `PHONE` VARCHAR(21) NOT NULL DEFAULT '''',
  `SPMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `RETFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `FEEFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `PKNUMBER` INT(11) NOT NULL DEFAULT ''0'',
  `PKTOTAL` INT(11) NOT NULL DEFAULT ''0'',
  `SENDSTATUS` INT(11) NOT NULL DEFAULT ''0'',
  `SENDFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `RECVFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `DONEDATE` VARCHAR(10) NOT NULL DEFAULT '''',
  `ERRORCODE` VARCHAR(7) NOT NULL DEFAULT '''',
  `SENDLEVEL` INT(11) NOT NULL DEFAULT ''0'',
  `SENDTYPE` INT(11) NOT NULL DEFAULT ''0'',
  `UNICOM` INT(11) NOT NULL DEFAULT ''0'',
  `MOBILEAREA` INT(11) NOT NULL DEFAULT ''0'',
  `SENDTIME` DATETIME NOT NULL DEFAULT ''0000-00-00 00:00:00'',
  `RECVTIME` DATETIME NOT NULL DEFAULT ''0000-00-00 00:00:00'',
  `MESSAGE` VARCHAR(3000) NOT NULL DEFAULT '''',
  `TASKID` INT(11) NOT NULL DEFAULT ''0'',
  `ECID` INT(11) NOT NULL DEFAULT ''0'',
  `PTMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `SVRTYPE` VARCHAR(64) NOT NULL DEFAULT '''',
  `P1` VARCHAR(64) NOT NULL DEFAULT '''',
  `P2` VARCHAR(64) NOT NULL DEFAULT '''',
  `P3` VARCHAR(64) NOT NULL DEFAULT '''',
  `P4` VARCHAR(64) NOT NULL DEFAULT '''',
  `USERMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `MODULEID` INT(11) NOT NULL DEFAULT ''0'',
  `ATTIME` BIGINT(20) NOT NULL DEFAULT ''0'',
  `VALIDTIME` BIGINT(20) NOT NULL DEFAULT ''0'',
  `BATCHID`  BIGINT(20) NOT NULL DEFAULT 0,
  `AREACODE`  INT(11) NOT NULL DEFAULT 0 ,
  `CUSTID`	VARCHAR(64)  NOT NULL DEFAULT '''',
  `EXDATA`	VARCHAR(64)  NOT NULL DEFAULT '''',
  `LONGMSG`	VARCHAR(4000)  NOT NULL DEFAULT '''',
  `TMPLID`  BIGINT NOT NULL DEFAULT 0,
  `CHGRADE`	TINYINT  NOT NULL DEFAULT 0,
  `MSGTYPE`	TINYINT  NOT NULL DEFAULT 0,
  `RMSVALIDTM`	INT  NOT NULL DEFAULT 0,
  `ERRORCODE2`	CHAR(7)  NOT NULL DEFAULT '''',
  `DOWNTM`	DATETIME  NOT NULL DEFAULT ''1990-01-01 08:00:00'',
  `RMSRPTFLAG`	TINYINT  NOT NULL DEFAULT 1,
  `PROTOCOLVER`	TINYINT NOT NULL DEFAULT 0,
  `TMPLTYPE`	TINYINT NOT NULL DEFAULT 0,
  `TITLE`	VARCHAR(40)  NOT NULL DEFAULT '''',	
  `SHOWAY`	VARCHAR(16)  NOT NULL DEFAULT '''',
  `DLDWAY`	INT NOT NULL DEFAULT 0,
  `DLDNEY`	INT NOT NULL DEFAULT 0,
  `ISFREE`	INT NOT NULL DEFAULT 0,
  `SHOWTIME`	BIGINT NOT NULL DEFAULT 0,
  `SUID1`	VARCHAR(64)  NOT NULL DEFAULT '''',
  `LUID1`	VARCHAR(64)  NOT NULL DEFAULT '''',
  UNIQUE KEY `IX_',TABLENAME,'_PTID` (`PTMSGID`),
  KEY `IX_',TABLENAME,'_P1` (`P1`),
  KEY `IX_',TABLENAME,'_SVRTYPE` (`SVRTYPE`),
  KEY `IX_',TABLENAME,'_TASKID` (`TASKID`),
  KEY `IX_',TABLENAME,'_STIME` (`SENDTIME`),
  KEY `IX_',TABLENAME,'_UID` (`USERID`),
  KEY `IX_',TABLENAME,'_BATCHID` (`BATCHID`),
  KEY `IX_',TABLENAME,'_AREACODE` (`AREACODE`),
   KEY `IX_',TABLENAME,'_PHONE` (`PHONE`)
) ENGINE=INNODB DEFAULT CHARSET=GBK;');

ELSEIF PITYPE=2 THEN
SET TABLENAME=CONCAT('MMSTASK',PIYM);
SET STR=CONCAT('CREATE TABLE `',TABLENAME,
'` (
  `ID` INT(11) NOT NULL,
  `MDAY` INT(11) NOT NULL DEFAULT ''0'',
  `USERID` VARCHAR(11) NOT NULL DEFAULT '''',
  `SPGATE` VARCHAR(21) NOT NULL DEFAULT '''',
  `CPNO` VARCHAR(21) NOT NULL DEFAULT '''',
  `PHONE` VARCHAR(21) NOT NULL DEFAULT '''',
  `SPMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `RETFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `FEEFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `PKNUMBER` INT(11) NOT NULL DEFAULT ''0'',
  `PKTOTAL` INT(11) NOT NULL DEFAULT ''0'',
  `SENDSTATUS` INT(11) NOT NULL DEFAULT ''0'',
  `SENDFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `RECVFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `DONEDATE` VARCHAR(10) NOT NULL DEFAULT '''',
  `ERRORCODE` VARCHAR(7) NOT NULL DEFAULT '''',
  `SENDLEVEL` INT(11) NOT NULL DEFAULT ''0'',
  `SENDTYPE` INT(11) NOT NULL DEFAULT ''0'',
  `UNICOM` INT(11) NOT NULL DEFAULT ''0'',
  `SENDTIME` DATETIME NOT NULL DEFAULT ''0000-00-00 00:00:00'',
  `RECVTIME` DATETIME NOT NULL DEFAULT ''0000-00-00 00:00:00'',
  `MESSAGE` VARCHAR(3000) NOT NULL DEFAULT '''',
  `TASKID` INT(11) NOT NULL DEFAULT ''0'',
  `ECID` INT(11) NOT NULL DEFAULT ''0'',
  `PTMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `SPID` VARCHAR(32) NOT NULL DEFAULT '''',
  `MOBILEAREA` INT(11) NOT NULL DEFAULT ''0'',
  `SVRTYPE` VARCHAR(64) NOT NULL DEFAULT '''',
  `P1` VARCHAR(64) NOT NULL DEFAULT '''',
  `P2` VARCHAR(64) NOT NULL DEFAULT '''',
  `P3` VARCHAR(64) NOT NULL DEFAULT '''',
  `P4` VARCHAR(64) NOT NULL DEFAULT '''',
  `USERMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `MODULEID` INT(11) NOT NULL DEFAULT ''0'',
  `ATTIME` BIGINT(20) NOT NULL DEFAULT ''0'',
  `VALIDTIME` BIGINT(20) NOT NULL DEFAULT ''0'',
  `SPMSGID2` VARCHAR(64) NOT NULL DEFAULT '''',
  `JTYPE` TINYINT(4) NOT NULL DEFAULT ''0'',
  `ORDERCPNO` VARCHAR(21) NOT NULL DEFAULT '''',
  `PASSTHROUGH` TINYINT(4) NOT NULL DEFAULT ''0'',
  `MSGTITLE` VARCHAR(720) NOT NULL DEFAULT '''',
  `TMPLID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `MSGTYPE` TINYINT(4) NOT NULL DEFAULT ''0'',
  `ERRORMSG` VARCHAR(256) NOT NULL DEFAULT '''',
  PRIMARY KEY  (`ID`),
  UNIQUE KEY `IX_',TABLENAME,'_PTMSGID` (`PTMSGID`),
  KEY `IX_',TABLENAME,'_USERID` (`USERID`),
  KEY `IX_',TABLENAME,'_SENDTIME` (`SENDTIME`),
  KEY `IX_',TABLENAME,'_TASKID` (`TASKID`),
  KEY `IX_',TABLENAME,'_SVRTYPE` (`SVRTYPE`),
  KEY `IX_',TABLENAME,'_P1` (`P1`)
) ENGINE=INNODB DEFAULT CHARSET=GBK;');

ELSEIF  PITYPE=3 THEN
SET TABLENAME=CONCAT('MOTASK',PIYM);
SET STR=CONCAT('CREATE TABLE `',TABLENAME,
'` (
  `ID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `UID` INT(11) NOT NULL DEFAULT ''0'',
  `USERID` VARCHAR(11) NOT NULL DEFAULT '''',
  `SPNUMBER` VARCHAR(21) NOT NULL DEFAULT '''',
  `SERVICEID` VARCHAR(10) NOT NULL DEFAULT '''',
  `SENDSTATUS` INT(11) NOT NULL DEFAULT ''0'',
  `DELIVERTIME` TIMESTAMP NOT NULL DEFAULT ''0000-00-00 00:00:00'',
  `PHONE` VARCHAR(21) NOT NULL DEFAULT '''',
  `MSGCONTENT` VARCHAR(3000) NOT NULL DEFAULT '''',
  `ECID` INT(11) NOT NULL DEFAULT ''0'',
  `ORGUID` INT(11) NOT NULL DEFAULT ''0'',
  `PTMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `TP_PID` INT(11) NOT NULL DEFAULT ''0'',
  `TP_UDHI` INT(11) NOT NULL DEFAULT ''0'',
  `MSGFMT` INT(11) NOT NULL DEFAULT ''0'',
  `UNICOM` INT(11) NOT NULL DEFAULT ''0'',
  PRIMARY KEY  (`ID`)
) ENGINE=INNODB DEFAULT CHARSET=GBK;');

ELSE
SET TABLENAME=CONCAT('MMSMOTASK',PIYM);
SET STR=CONCAT('CREATE TABLE `',TABLENAME,
'` (
  `ID` INT(11) NOT NULL,
  `UID` INT(11) NOT NULL DEFAULT ''0'',
  `USERID` VARCHAR(11) NOT NULL DEFAULT '''',
  `SPNUMBER` VARCHAR(11) NOT NULL DEFAULT '''',
  `SERVICEID` VARCHAR(10) NOT NULL DEFAULT '''',
  `SENDSTATUS` INT(11) NOT NULL DEFAULT ''0'',
  `DELIVERTIME` DATETIME NOT NULL DEFAULT ''0000-00-00 00:00:00'',
  `PHONE` VARCHAR(21) NOT NULL DEFAULT '''',
  `MSGCONTENT` VARCHAR(3000) NOT NULL DEFAULT '''',
  `ECID` INT(11) NOT NULL DEFAULT ''0'',
  `ORGUID` INT(11) NOT NULL DEFAULT ''0'',
  `PTMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `TP_PID` INT(11) NOT NULL DEFAULT ''0'',
  `TP_UDHI` INT(11) NOT NULL DEFAULT ''0'',
  `MSGFMT` INT(11) NOT NULL DEFAULT ''15'',
  `UNICOM` INT(11) NOT NULL DEFAULT ''0'',
  `PASSTHROUGH` TINYINT(4) NOT NULL DEFAULT ''0'',
  `MSGTYPE` TINYINT(4) NOT NULL DEFAULT ''0'',
  `MSGTITLE` VARCHAR(200) NOT NULL DEFAULT '''',
  PRIMARY KEY  (`ID`)
) ENGINE=INNODB DEFAULT CHARSET=GBK;');
END IF;

SET @SQL=STR;
PREPARE SL FROM @SQL;
EXECUTE SL;
DEALLOCATE PREPARE SL;

END;;
DELIMITER ;

DELIMITER ;;
DROP PROCEDURE IF EXISTS `GW_H_TRANSFERV1`;
CREATE DEFINER=`root`@`%` PROCEDURE `GW_H_TRANSFERV1`(P_MININDEX BIGINT,P_MAXINDEX BIGINT,P_PROCESSFLAG INT,P_LOTSIZE INT)
BEGIN

	DECLARE P_STR VARCHAR(4000);
	DECLARE P_TABLENAME VARCHAR(20);
        DECLARE   CURYM INT;
        DECLARE   MINYM INT;
        DECLARE   MAXYM INT;

        #转移
        SELECT CAST(DATE_FORMAT(MIN(SENDTIME) ,'%Y%m') AS SIGNED) ,CAST(DATE_FORMAT(MAX(SENDTIME) ,'%Y%m') AS SIGNED)  INTO MINYM,MAXYM FROM GW_MT_TASK_BAK WHERE ID BETWEEN P_MININDEX AND P_MAXINDEX;
        SET CURYM = MINYM;
        WHILE CURYM<=MAXYM DO

	SET P_TABLENAME = CONCAT('MTTASK',CURYM );
        SET P_STR = CONCAT('INSERT  INTO ',P_TABLENAME,
			 ' (ID,MDAY,USERID,SPGATE,CPNO,PHONE,SPMSGID,RETFLAG,FEEFLAG,PKNUMBER,PKTOTAL,SENDSTATUS,SENDFLAG,RECVFLAG,DONEDATE,ERRORCODE,SENDLEVEL,SENDTYPE,UNICOM,SENDTIME,RECVTIME,MESSAGE,TASKID,ECID,PTMSGID,MOBILEAREA,SPID,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,DOWNTM,SUID1,LUID1)
                          SELECT ID, DATE_FORMAT(M.SENDTIME,''%d'') AS MDAY,USERID,SPGATE,CPNO,PHONE,SPMSGID,RETFLAG,FEEFLAG,PKNUMBER,PKTOTAL,SENDSTATUS,SENDFLAG,RECVFLAG,DONEDATE,ERRORCODE,SENDLEVEL,SENDTYPE,UNICOM,SENDTIME,RECVTIME,MESSAGE,TASKID,ECID,PTMSGID,MOBILEAREA,SPID,SVRTYPE,
                          P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,DOWNTM,SUID1,LUID1
                          FROM GW_MT_TASK_BAK M WHERE CAST(DATE_FORMAT(SENDTIME,''%Y%m'') AS SIGNED)=',CURYM,' AND ID<=',P_MAXINDEX);
#SELECT P_STR;
	SET @SQL=P_STR;
         PREPARE SL FROM @SQL;
         EXECUTE SL;
         DEALLOCATE PREPARE SL;

          IF CAST(SUBSTRING(CAST(CURYM AS CHAR(6)),5,2) AS SIGNED)=12 THEN
                SET CURYM = CAST(CONCAT(CAST(CAST(SUBSTRING(CAST(CURYM AS CHAR(6)),1,4)AS SIGNED)+1 AS CHAR(4)),'01' )AS SIGNED);
          ELSE
               SET CURYM = CURYM+1  ;
          END IF;
        END WHILE;
END;;
DELIMITER ;

DELIMITER ;;
DROP PROCEDURE  IF EXISTS GW_RD_MTLVLQUEV1;
CREATE DEFINER=`root`@`%` PROCEDURE `GW_RD_MTLVLQUEV1`(P_DESTUID INT,
	P_SENDLEVEL INT,
	P_MAXREADCNT INT,
	P_STRUID VARCHAR(4000),P_CURTIME BIGINT,P_TABLENO INT)
BEGIN
    DECLARE P_SQLSTR VARCHAR(4000);
    DECLARE P_TABNAME VARCHAR(20);
    SET P_CURTIME = IFNULL(P_CURTIME, 0);
    IF  P_TABLENO>=0  AND   P_TABLENO<=9 THEN 
       SET P_TABNAME=CONCAT('MT_LEVEL',  CONVERT(P_TABLENO,CHAR(1)),'_QUEUE');
    ELSE
       SET P_TABNAME='MT_LEVEL0_QUEUE';
    END IF;
    SET P_SQLSTR = 'SELECT ID,UID,DESTUID,LOGINUID,ECID,TASKID,FEEFLAG,USERID,SPGATE,CPNO,PHONE,PTMSGID,RETFLAG,TPUDHI,PKNUMBER,PKTOTAL,SENDSTATUS,';
    SET P_SQLSTR = CONCAT(P_SQLSTR,'PHONECOUNT,SPLITFLAG,SENDLEVEL,LONGMSGSEQ,MSGFMT,MESSAGE,SENDTIME AS RECVMTTIME,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1  FROM ',P_TABNAME);
    SET P_SQLSTR = CONCAT(P_SQLSTR,' WHERE DESTUID=', P_DESTUID,' AND UID NOT IN (',P_STRUID,') AND (ATTIME<=',P_CURTIME,' OR ATTIME<0) ');
    SET P_SQLSTR = CONCAT(P_SQLSTR,' AND SENDLEVEL=',P_SENDLEVEL,' LIMIT ',P_MAXREADCNT);

    SET @SQL = P_SQLSTR;
   PREPARE SL FROM @SQL;
    
  EXECUTE SL;

    DEALLOCATE PREPARE SL;
END;;
DELIMITER ;

DELIMITER ;;
DROP PROCEDURE IF EXISTS `GW_WR_MTTASKV5`;
CREATE DEFINER=`root`@`%` PROCEDURE `GW_WR_MTTASKV5`(
P_UID INT,	
P_PTMSGID BIGINT,
	P_SENDSTATUS TINYINT UNSIGNED,
	P_RETFLAG TINYINT UNSIGNED,
	P_PKTOTAL TINYINT UNSIGNED,
	P_PHONECOUNT INT,
	P_SPLITLEN TINYINT UNSIGNED,
	P_MULTILEN1 TINYINT UNSIGNED,
	P_MULTILEN2 TINYINT UNSIGNED,
	P_SIGNLEN TINYINT UNSIGNED,
	P_ECID INT,
	P_USERID VARCHAR(11), 
P_SPGATE VARCHAR(21),
	P_CPNO VARCHAR(21),
	P_RECVMTTIME DATETIME,
	P_MESSAGE VARCHAR(3000)  CHARSET 'GBK',
	P_SHOUJI VARCHAR(3500),
	P_FEEFLAG TINYINT UNSIGNED,
	P_SENDLEVEL TINYINT UNSIGNED,
	P_TASKID INT,
	P_ERRORCODE CHAR(7),
	P_TPUDHI TINYINT UNSIGNED,
	P_LONGMSGSEQ TINYINT UNSIGNED,
	P_MSGFMT TINYINT UNSIGNED,
	P_UNICOM TINYINT UNSIGNED,
  P_MOBILEAREA INT UNSIGNED, 
  P_PKNUMBER TINYINT UNSIGNED,
  P_SVRTYPE VARCHAR(64),
  P_P1 VARCHAR(64),
  P_P2 VARCHAR(64),
  P_P3 VARCHAR(64),
  P_P4 VARCHAR(64),
  P_USERMSGID BIGINT,
  P_MODULEID INT,
  P_ATTIME BIGINT,
  P_VALIDTIME BIGINT,
  P_SENDTYPE TINYINT UNSIGNED,
  P_BATCHID BIGINT,
  P_AREACODE INT,
  P_CUSTID VARCHAR(64),
  P_EXDATA VARCHAR(64),
	P_SUID1 VARCHAR(64),
	P_LUID1 VARCHAR(64))
  TOP:BEGIN
    DECLARE P_TMPMSGID BIGINT;
	DECLARE P_LOCATION INT;
	DECLARE P_START INT;
	DECLARE P_RESULTPHONE VARCHAR(21); #存储拆分后的字符
	DECLARE P_STRSPLIT VARCHAR(2);
	DECLARE P_LEN INT;
	DECLARE P_RESULTMSG VARCHAR(3000); #存储拆分后的字符
	DECLARE P_PKNUM INT;
	DECLARE P_TMPNUM INT;

    CREATE TEMPORARY TABLE IF NOT EXISTS P_TMP_WRMTTASKV2(UID INT,USERID VARCHAR(11),SPGATE VARCHAR(21),CPNO VARCHAR(21),
						PHONE VARCHAR(21),PTMSGID BIGINT,MESSAGE VARCHAR(3000),
						SENDSTATUS TINYINT,RETFLAG TINYINT,PKNUMBER TINYINT,
						PKTOTAL TINYINT,RECVMTTIME DATETIME,ECID INT,FEEFLAG TINYINT,
						SENDLEVEL TINYINT,TASKID INT,ERRORCODE CHAR(7),TPUDHI TINYINT,
						LONGMSGSEQ TINYINT,MSGFMT TINYINT,UNICOM TINYINT,MOBILEAREA INT,
						SVRTYPE VARCHAR(64),P1 VARCHAR(64),P2 VARCHAR(64),P3 VARCHAR(64),
						P4 VARCHAR(64),USERMSGID BIGINT,MODULEID INT,ATTIME BIGINT,VALIDTIME BIGINT,SENDTYPE INT,AREACODE INT,CUSTID VARCHAR(64),EXDATA VARCHAR(64),SUID1 VARCHAR(64),LUID1 VARCHAR(64));

	TRUNCATE TABLE P_TMP_WRMTTASKV2;

    SET P_LEN = CHAR_LENGTH(P_MESSAGE)-P_SIGNLEN;
	SET P_TMPNUM = 0;
	SET P_PKNUM = 1;
	SET P_STRSPLIT = ',';

    IF P_PHONECOUNT < 1 THEN #手机个数为0
		LEAVE TOP;
    END IF;

	IF P_MSGFMT=4 OR P_MSGFMT=248 OR P_MSGFMT=246 THEN
		SET P_SPLITLEN=140;
		SET P_MULTILEN1=134;
		SET P_MULTILEN2=134;
		SET P_SIGNLEN=0;
	END IF;

	IF P_MSGFMT=25 THEN
		IF NOT EXISTS (SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID=P_PTMSGID) THEN
		   INSERT INTO GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
		   RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
		   VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_PTMSGID,P_MESSAGE,P_SENDSTATUS,P_RETFLAG, P_PKNUMBER,P_PKTOTAL,
		   P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM, P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1);
        END IF;
	END IF;

	IF P_PHONECOUNT = 1 THEN #单发
        IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_PTMSGID) THEN
            IF P_PKTOTAL = 1 THEN
        		INSERT GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
        		RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,
        		P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
        		VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_PTMSGID,P_MESSAGE,P_SENDSTATUS,
        		P_RETFLAG,P_PKTOTAL,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,
        		P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1);
            ELSE
        		SET P_PKNUM = 1;
        		SET P_TMPMSGID = P_PTMSGID;
                IF P_PKTOTAL = 2 AND P_LEN <= P_MULTILEN1 THEN
    				SET P_RESULTMSG = SUBSTRING(P_MESSAGE,1,P_SPLITLEN);#拆分后的字符
    				SET P_TMPMSGID = P_TMPMSGID;
    				IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_PTMSGID) THEN
        				INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
        				RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
        				VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,
        				P_RETFLAG,P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1);
    				END IF;

    				SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_SPLITLEN+1,P_LEN-P_SPLITLEN+P_SIGNLEN);#拆分后的字符
    				SET P_TMPMSGID = P_TMPMSGID+17179869184;
    				SET P_PKNUM = P_PKNUM+1;
    				IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_PTMSGID) THEN
        				INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
        				PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
        				VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
        				P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1);
                    END IF;
                ELSE
                    WHILE P_PKNUM <= P_PKTOTAL DO
						IF P_PKNUM = P_PKTOTAL THEN
							SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_TMPNUM+1,P_MULTILEN2+P_SIGNLEN);#拆分后的字符
							SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
							#PRINT P_RESULTMSG
						ELSEIF P_PKNUM = P_PKTOTAL-1 THEN
							IF P_LEN-(P_PKNUM-1)*P_MULTILEN1 > P_MULTILEN2 AND P_LEN-(P_PKNUM-1)*P_MULTILEN1 <= P_MULTILEN1 THEN
								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_LEN-(P_PKNUM-1)*P_MULTILEN1-1);
								SET P_TMPNUM = P_LEN-1;
							ELSE
								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);
								SET P_TMPNUM = (P_PKNUM-1)*P_MULTILEN1+P_MULTILEN1;
						    END IF;

							SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
						ELSE
							SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);#拆分后的字符
							#PRINT P_RESULTMSG
							SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
						END IF;

						IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    						INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    						PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
    						VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    						P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1);
                        END IF;

						SET P_PKNUM = P_PKNUM+1;

                    END WHILE;
                END IF;
            		INSERT INTO GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
            		PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
            		SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,
            		A.PKNUMBER,A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME,A.SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1 FROM P_TMP_WRMTTASKV2 A;
                END IF;
            
		END IF;
	ELSE #群发
		SET P_SHOUJI = CONCAT(P_STRSPLIT , P_SHOUJI , P_STRSPLIT);
		SET P_LOCATION = LOCATE(P_STRSPLIT,P_SHOUJI);

		IF P_PKTOTAL < 1 THEN #没有短信内容
			LEAVE TOP;
        END IF;

		IF P_PKTOTAL >= 1 THEN #需要拆分长短信
			WHILE P_LOCATION <> 0 DO #拆分手机号码
				SET P_START = P_LOCATION;
				SET P_LOCATION = LOCATE(P_STRSPLIT,P_SHOUJI,P_START+1);
				IF P_LOCATION > 0 THEN
					SET P_RESULTPHONE = SUBSTRING(P_SHOUJI,P_START+1,P_LOCATION-P_START-1);#拆分后的字符
					#PRINT P_RESULTPHONE
					#IF P_RESULTPHONE <> ''
					SET P_TMPMSGID = P_PTMSGID;
					IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
						IF P_PKTOTAL = 1 THEN
							INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
							PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
							VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_MESSAGE,P_SENDSTATUS,P_RETFLAG,
							P_PKTOTAL,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1);
						ELSE
							SET P_PKNUM = 1;
							#SET P_TOTALSPLITNUM = P_PKTOTAL-1
							IF P_PKTOTAL = 2 AND P_LEN <= P_MULTILEN1 THEN
								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,1,P_SPLITLEN);#拆分后的字符
								SET P_TMPMSGID = P_TMPMSGID;
								IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    								INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    								PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
    								VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    								P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1);
                                END IF;

								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_SPLITLEN+1,P_LEN-P_SPLITLEN+P_SIGNLEN);#拆分后的字符
								SET P_TMPMSGID = P_TMPMSGID+17179869184;
								SET P_PKNUM = P_PKNUM+1;
								IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    								INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    								PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
    								VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    								P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1);
								END IF;
                             ELSE
								WHILE P_PKNUM <= P_PKTOTAL DO
									IF P_PKNUM = P_PKTOTAL THEN
										SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_TMPNUM+1,P_MULTILEN2+P_SIGNLEN);#拆分后的字符
										SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
									ELSEIF P_PKNUM = P_PKTOTAL-1 THEN
										IF P_LEN-(P_PKNUM-1)*P_MULTILEN1 > P_MULTILEN2 AND P_LEN-(P_PKNUM-1)*P_MULTILEN1 <= P_MULTILEN1 THEN
											SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_LEN-(P_PKNUM-1)*P_MULTILEN1-1);
											SET P_TMPNUM = P_LEN-1;
										ELSE
											SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);
											SET P_TMPNUM = (P_PKNUM-1)*P_MULTILEN1+P_MULTILEN1;
										END IF;
										SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
									ELSE
										SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);#拆分后的字符
										#PRINT P_RESULTMSG
										SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
									END IF;
									IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    									INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    									PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
    									VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    									P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1);
									END IF;
                                    SET P_PKNUM = P_PKNUM+1;
								END WHILE;
                             END IF; #END OF P_PKTOTAL = 2
						  END IF; # END OF P_PKTOTAL = 1
					   END	IF;	#NOT EXISTS(SELECT
					   SET P_PTMSGID = P_PTMSGID+1;
                   END IF;
				END WHILE;
			END IF;

			INSERT INTO GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
			PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
			SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,
			A.PKNUMBER,A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME,A.SENDTYPE,P_BATCHID,A.AREACODE,A.CUSTID,A.EXDATA,A.SUID1,A.LUID1 FROM P_TMP_WRMTTASKV2 A;
	  END IF;
END;;
DELIMITER ;

DELIMITER ;;
DROP PROCEDURE IF EXISTS `GW_WR_MTTASKSRV5`;
CREATE DEFINER=`root`@`%` PROCEDURE `GW_WR_MTTASKSRV5`(P_UID INT,P_PTMSGID BIGINT,
	P_SENDSTATUS TINYINT UNSIGNED,
	P_RETFLAG TINYINT UNSIGNED,
	P_PKTOTAL TINYINT UNSIGNED,
	P_PHONECOUNT INT,
	P_ECID INT,
	P_USERID VARCHAR(11),
	P_SPGATE VARCHAR(21),
	P_CPNO VARCHAR(21),
	P_RECVMTTIME DATETIME,
	P_MESSAGE VARCHAR(3000)  CHARSET 'GBK',
	P_SHOUJI VARCHAR(3500),
	P_FEEFLAG TINYINT UNSIGNED,
	P_PKNUMBER TINYINT UNSIGNED,
	P_SENDLEVEL TINYINT UNSIGNED,
	P_TASKID INT,
	P_ERRORCODE CHAR(7),
	P_TPUDHI TINYINT UNSIGNED,
	P_LONGMSGSEQ TINYINT UNSIGNED,
	P_MSGFMT TINYINT UNSIGNED,
	P_UNICOM TINYINT UNSIGNED,
	P_MOBILEAREA INT,
	P_SVRTYPE VARCHAR(64),
	P_P1 VARCHAR(64),
	P_P2 VARCHAR(64),
	P_P3 VARCHAR(64),
	P_P4 VARCHAR(64),
	P_USERMSGID BIGINT,
	P_MODULEID INT,
	P_ATTIME BIGINT,
	P_VALIDTIME BIGINT,
	P_SENDTYPE INT,
	P_BATCHID BIGINT,
	P_AREACODE INT,
	P_CUSTID VARCHAR(64),
	P_EXDATA VARCHAR(64),
	P_SUID1 VARCHAR(64),
	P_LUID1 VARCHAR(64))
TOP:BEGIN
    DECLARE P_LOCATION INT;
	DECLARE P_START INT;
	DECLARE P_RESULTPHONE VARCHAR(21); #存储拆分后的字符
	DECLARE P_STRSPLIT VARCHAR(2);

    CREATE TEMPORARY TABLE IF NOT EXISTS P_TMP_MTSR(UID INT,USERID VARCHAR(11),SPGATE VARCHAR(21),CPNO VARCHAR(21),
						PHONE VARCHAR(21),PTMSGID BIGINT ,MESSAGE VARCHAR(3000),
						SENDSTATUS TINYINT UNSIGNED,RETFLAG TINYINT UNSIGNED,PKNUMBER TINYINT UNSIGNED,
						PKTOTAL TINYINT UNSIGNED,RECVMTTIME DATETIME,ECID INT,FEEFLAG TINYINT UNSIGNED,
						SENDLEVEL TINYINT UNSIGNED,TASKID INT,ERRORCODE CHAR(7),TPUDHI TINYINT UNSIGNED,
						LONGMSGSEQ TINYINT UNSIGNED,MSGFMT TINYINT UNSIGNED,UNICOM TINYINT UNSIGNED,MOBILEAREA INT,
						SVRTYPE VARCHAR(64),P1 VARCHAR(64),P2 VARCHAR(64),P3 VARCHAR(64),
						P4 VARCHAR(64),USERMSGID BIGINT,MODULEID INT,ATTIME BIGINT,VALIDTIME BIGINT,SENDTYPE INT,AREACODE INT,CUSTID VARCHAR(64),EXDATA VARCHAR(64),SUID1 VARCHAR(64),LUID1 VARCHAR(64));
    TRUNCATE TABLE P_TMP_MTSR;

    SET P_STRSPLIT = ',';

    IF P_PHONECOUNT < 1 THEN #手机个数为0
		LEAVE TOP;
    END IF;

	IF P_PHONECOUNT = 1 THEN #单发
		IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_PTMSGID) THEN
		   INSERT GW_MT_TASK_BAK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG,
		   PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG, SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,
		   P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
		   VALUES(P_UID,P_USERID, P_SPGATE, P_CPNO, P_SHOUJI, P_PTMSGID, P_MESSAGE, P_SENDSTATUS, P_RETFLAG,
		   P_PKNUMBER, P_PKTOTAL, P_RECVMTTIME, P_ECID, P_FEEFLAG, P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,
		   P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1);
		END IF;
	ELSE #群发
		SET P_SHOUJI = CONCAT(P_STRSPLIT , P_SHOUJI , P_STRSPLIT);
		SET P_LOCATION = LOCATE(P_STRSPLIT,P_SHOUJI);
		WHILE P_LOCATION <> 0 DO #拆分手机号码
			SET P_START = P_LOCATION;
			SET P_LOCATION = LOCATE(P_STRSPLIT,P_SHOUJI,P_START+1);
			IF P_LOCATION > 0 THEN
				SET P_RESULTPHONE = SUBSTRING(P_SHOUJI,P_START+1,P_LOCATION-P_START-1);#拆分后的字符
				#PRINT P_RESULTPHONE
				IF P_RESULTPHONE <> '' THEN
					IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_PTMSGID) THEN
					   INSERT P_TMP_MTSR(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG,
					   PKNUMBER, PKTOTAL, RECVMTTIME,ECID, FEEFLAG, SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
					   VALUES(P_UID,P_USERID, P_SPGATE, P_CPNO, P_RESULTPHONE, P_PTMSGID, P_MESSAGE, P_SENDSTATUS, P_RETFLAG,
					   P_PKNUMBER, P_PKTOTAL, P_RECVMTTIME, P_ECID, P_FEEFLAG, P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1);
                    END IF;
					SET P_PTMSGID = P_PTMSGID+1;
				END IF;
			END IF;
		END	WHILE;

		INSERT INTO GW_MT_TASK_BAK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG,
		PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG, SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,
		P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
		SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,
		A.PKNUMBER,A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,
		A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME ,A.SENDTYPE,P_BATCHID,P_AREACODE,A.CUSTID,A.EXDATA,A.SUID1,A.LUID1 FROM P_TMP_MTSR A;
	END IF;
/*
,P_SVRTYPE VARCHAR(64),P_P1 VARCHAR(64),P_P2 VARCHAR(64),P_P3 VARCHAR(64),P_P4 VARCHAR(64),P_USERMSGID BIGINT,P_MODULEID INT,P_ATTIME BIGINT,P_VALIDTIME BIGINT
,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME
,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME
*/
END;;
DELIMITER ;

DELIMITER ;;
DROP PROCEDURE IF EXISTS `GW_WR_MTLVLQUEV4`;
CREATE DEFINER=`root`@`%` PROCEDURE `GW_WR_MTLVLQUEV4`(P_PIUID        INT,
   P_PIPTMSGID    BIGINT,
   P_PIRETFLAG    TINYINT UNSIGNED,
   P_PIPKTOTAL    TINYINT UNSIGNED,
   P_PIPHONECOUNT INT,
   P_PISENDSTATUS TINYINT UNSIGNED,
   P_PISPLITFLAG  TINYINT UNSIGNED,
   P_PIECID       INT,
   P_PIUSERID     VARCHAR(11),
   P_PISPGATE     VARCHAR(21),
   P_PICPNO       VARCHAR(21),
   P_PIRECVMTTIME DATETIME,
   P_PIPHONE      VARCHAR(3500),
   P_PIMESSAGE    VARCHAR(3000) CHARSET 'GBK',
   P_PIFEEFLAG    TINYINT UNSIGNED,
   P_PIDESTUID    INT,
   P_PILOGINUID   INT,
   P_PIPKNUMBER   TINYINT UNSIGNED,
   P_PISENDLEVEL  TINYINT UNSIGNED,
   P_PITPUDHI     TINYINT UNSIGNED,
   P_PITASKID     INT,
   P_PILONGMSGSEQ TINYINT UNSIGNED,
   P_PIMSGFMT     TINYINT UNSIGNED,
   P_PITOTALCOUNT INT,
   P_SVRTYPE VARCHAR(64),
   P_P1 VARCHAR(64),
   P_P2 VARCHAR(64),
   P_P3 VARCHAR(64),
   P_P4 VARCHAR(64),
   P_USERMSGID BIGINT,
   P_MODULEID INT,
   P_ATTIME BIGINT,
   P_VALIDTIME BIGINT,
   P_SENDTYPE INT,
   P_BATCHID BIGINT,
   P_AREACODE INT,
   P_CUSTID VARCHAR(64),
   P_EXDATA VARCHAR(64),
   P_LONGMSG VARCHAR(4000),
   P_TMPLID BIGINT,
   P_CHGRADE TINYINT,
   P_MSGTYPE TINYINT,
   P_RMSVALIDTM INT,
   P_PROTOCOLVER TINYINT,
   P_TMPLTYPE TINYINT,
   P_TITLE VARCHAR(40),
   P_SHOWAY VARCHAR(16),
   P_DLDWAY INT,
   P_DLDNEY INT,
   P_ISFREE INT,
   P_SHOWTIME BIGINT,
   P_SUID1 VARCHAR(64),
   P_LUID1 VARCHAR(64),
   P_TABLENO INT)
BEGIN
    CASE P_TABLENO
WHEN 0 THEN
  IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL0_QUEUE WHERE PTMSGID=P_PIPTMSGID) THEN
	   INSERT INTO MT_LEVEL0_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT,
	   PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
	   VALUES(P_PIUID, P_PIUSERID, P_PISPGATE, P_PICPNO, P_PIPHONE, P_PIPTMSGID, P_PIMESSAGE, P_PIRETFLAG, P_PIPKTOTAL, P_PITOTALCOUNT,
	   P_PIPHONECOUNT,P_PIRECVMTTIME, P_PISENDSTATUS, P_PISPLITFLAG, P_PIECID, P_PIFEEFLAG, P_PIDESTUID,P_PILOGINUID,P_PIPKNUMBER,
	   P_PITPUDHI,P_PISENDLEVEL,P_PITASKID,P_PILONGMSGSEQ,P_PIMSGFMT,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
  END IF;
WHEN 1 THEN
  IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL1_QUEUE WHERE PTMSGID=P_PIPTMSGID) THEN
	   INSERT INTO MT_LEVEL1_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT,
	   PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
	   VALUES(P_PIUID, P_PIUSERID, P_PISPGATE, P_PICPNO, P_PIPHONE, P_PIPTMSGID, P_PIMESSAGE, P_PIRETFLAG, P_PIPKTOTAL, P_PITOTALCOUNT,
	   P_PIPHONECOUNT,P_PIRECVMTTIME, P_PISENDSTATUS, P_PISPLITFLAG, P_PIECID, P_PIFEEFLAG, P_PIDESTUID,P_PILOGINUID,P_PIPKNUMBER,
	   P_PITPUDHI,P_PISENDLEVEL,P_PITASKID,P_PILONGMSGSEQ,P_PIMSGFMT,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
  END IF;
WHEN 2 THEN
  IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL2_QUEUE WHERE PTMSGID=P_PIPTMSGID) THEN
	   INSERT INTO MT_LEVEL2_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT,
	   PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
	   VALUES(P_PIUID, P_PIUSERID, P_PISPGATE, P_PICPNO, P_PIPHONE, P_PIPTMSGID, P_PIMESSAGE, P_PIRETFLAG, P_PIPKTOTAL, P_PITOTALCOUNT,
	   P_PIPHONECOUNT,P_PIRECVMTTIME, P_PISENDSTATUS, P_PISPLITFLAG, P_PIECID, P_PIFEEFLAG, P_PIDESTUID,P_PILOGINUID,P_PIPKNUMBER,
	   P_PITPUDHI,P_PISENDLEVEL,P_PITASKID,P_PILONGMSGSEQ,P_PIMSGFMT,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
  END IF;
WHEN 3 THEN
  IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL3_QUEUE WHERE PTMSGID=P_PIPTMSGID) THEN
	   INSERT INTO MT_LEVEL3_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT,
	   PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
	   VALUES(P_PIUID, P_PIUSERID, P_PISPGATE, P_PICPNO, P_PIPHONE, P_PIPTMSGID, P_PIMESSAGE, P_PIRETFLAG, P_PIPKTOTAL, P_PITOTALCOUNT,
	   P_PIPHONECOUNT,P_PIRECVMTTIME, P_PISENDSTATUS, P_PISPLITFLAG, P_PIECID, P_PIFEEFLAG, P_PIDESTUID,P_PILOGINUID,P_PIPKNUMBER,
	   P_PITPUDHI,P_PISENDLEVEL,P_PITASKID,P_PILONGMSGSEQ,P_PIMSGFMT,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
  END IF;
WHEN 4 THEN
  IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL4_QUEUE WHERE PTMSGID=P_PIPTMSGID) THEN
	   INSERT INTO MT_LEVEL4_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT,
	   PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
	   VALUES(P_PIUID, P_PIUSERID, P_PISPGATE, P_PICPNO, P_PIPHONE, P_PIPTMSGID, P_PIMESSAGE, P_PIRETFLAG, P_PIPKTOTAL, P_PITOTALCOUNT,
	   P_PIPHONECOUNT,P_PIRECVMTTIME, P_PISENDSTATUS, P_PISPLITFLAG, P_PIECID, P_PIFEEFLAG, P_PIDESTUID,P_PILOGINUID,P_PIPKNUMBER,
	   P_PITPUDHI,P_PISENDLEVEL,P_PITASKID,P_PILONGMSGSEQ,P_PIMSGFMT,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
  END IF;
WHEN 5 THEN
  IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL5_QUEUE WHERE PTMSGID=P_PIPTMSGID) THEN
	   INSERT INTO MT_LEVEL5_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT,
	   PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
	   VALUES(P_PIUID, P_PIUSERID, P_PISPGATE, P_PICPNO, P_PIPHONE, P_PIPTMSGID, P_PIMESSAGE, P_PIRETFLAG, P_PIPKTOTAL, P_PITOTALCOUNT,
	   P_PIPHONECOUNT,P_PIRECVMTTIME, P_PISENDSTATUS, P_PISPLITFLAG, P_PIECID, P_PIFEEFLAG, P_PIDESTUID,P_PILOGINUID,P_PIPKNUMBER,
	   P_PITPUDHI,P_PISENDLEVEL,P_PITASKID,P_PILONGMSGSEQ,P_PIMSGFMT,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
  END IF;
WHEN 6 THEN
  IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL6_QUEUE WHERE PTMSGID=P_PIPTMSGID) THEN
	   INSERT INTO MT_LEVEL6_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT,
	   PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
	   VALUES(P_PIUID, P_PIUSERID, P_PISPGATE, P_PICPNO, P_PIPHONE, P_PIPTMSGID, P_PIMESSAGE, P_PIRETFLAG, P_PIPKTOTAL, P_PITOTALCOUNT,
	   P_PIPHONECOUNT,P_PIRECVMTTIME, P_PISENDSTATUS, P_PISPLITFLAG, P_PIECID, P_PIFEEFLAG, P_PIDESTUID,P_PILOGINUID,P_PIPKNUMBER,
	   P_PITPUDHI,P_PISENDLEVEL,P_PITASKID,P_PILONGMSGSEQ,P_PIMSGFMT,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
  END IF;
WHEN 7 THEN
  IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL7_QUEUE WHERE PTMSGID=P_PIPTMSGID) THEN
	   INSERT INTO MT_LEVEL7_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT,
	   PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
	   VALUES(P_PIUID, P_PIUSERID, P_PISPGATE, P_PICPNO, P_PIPHONE, P_PIPTMSGID, P_PIMESSAGE, P_PIRETFLAG, P_PIPKTOTAL, P_PITOTALCOUNT,
	   P_PIPHONECOUNT,P_PIRECVMTTIME, P_PISENDSTATUS, P_PISPLITFLAG, P_PIECID, P_PIFEEFLAG, P_PIDESTUID,P_PILOGINUID,P_PIPKNUMBER,
	   P_PITPUDHI,P_PISENDLEVEL,P_PITASKID,P_PILONGMSGSEQ,P_PIMSGFMT,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
  END IF;
WHEN 8 THEN
  IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL8_QUEUE WHERE PTMSGID=P_PIPTMSGID) THEN
	   INSERT INTO MT_LEVEL8_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT,
	   PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
	   VALUES(P_PIUID, P_PIUSERID, P_PISPGATE, P_PICPNO, P_PIPHONE, P_PIPTMSGID, P_PIMESSAGE, P_PIRETFLAG, P_PIPKTOTAL, P_PITOTALCOUNT,
	   P_PIPHONECOUNT,P_PIRECVMTTIME, P_PISENDSTATUS, P_PISPLITFLAG, P_PIECID, P_PIFEEFLAG, P_PIDESTUID,P_PILOGINUID,P_PIPKNUMBER,
	   P_PITPUDHI,P_PISENDLEVEL,P_PITASKID,P_PILONGMSGSEQ,P_PIMSGFMT,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
  END IF;
WHEN 9 THEN
  IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL9_QUEUE WHERE PTMSGID=P_PIPTMSGID) THEN
	   INSERT INTO MT_LEVEL9_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT,
	   PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
	   VALUES(P_PIUID, P_PIUSERID, P_PISPGATE, P_PICPNO, P_PIPHONE, P_PIPTMSGID, P_PIMESSAGE, P_PIRETFLAG, P_PIPKTOTAL, P_PITOTALCOUNT,
	   P_PIPHONECOUNT,P_PIRECVMTTIME, P_PISENDSTATUS, P_PISPLITFLAG, P_PIECID, P_PIFEEFLAG, P_PIDESTUID,P_PILOGINUID,P_PIPKNUMBER,
	   P_PITPUDHI,P_PISENDLEVEL,P_PITASKID,P_PILONGMSGSEQ,P_PIMSGFMT,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
  END IF;
END CASE;

END;;
DELIMITER ;

DELIMITER ;;
DROP PROCEDURE IF EXISTS `GW_WR_MTTASKV1`;
CREATE DEFINER=`root`@`%` PROCEDURE `GW_WR_MTTASKV1`(P_UID INT,	P_PTMSGID BIGINT,
	P_SENDSTATUS TINYINT UNSIGNED,
	P_RETFLAG TINYINT UNSIGNED,
	P_PKTOTAL TINYINT UNSIGNED,
	P_PHONECOUNT INT,
	P_SPLITLEN TINYINT UNSIGNED,
	P_MULTILEN1 TINYINT UNSIGNED,
	P_MULTILEN2 TINYINT UNSIGNED,
	P_SIGNLEN TINYINT UNSIGNED,
	P_ECID INT,
	P_USERID VARCHAR(11), P_SPGATE VARCHAR(21),
	P_CPNO VARCHAR(21),
	P_RECVMTTIME DATETIME,
	P_MESSAGE VARCHAR(3000)  CHARSET 'GBK',
	P_SHOUJI VARCHAR(3500),
	P_FEEFLAG TINYINT UNSIGNED,
	P_SENDLEVEL TINYINT UNSIGNED,
	P_TASKID INT,
	P_ERRORCODE CHAR(7),
	P_TPUDHI TINYINT UNSIGNED,
	P_LONGMSGSEQ TINYINT UNSIGNED,
	P_MSGFMT TINYINT UNSIGNED,
	P_UNICOM TINYINT UNSIGNED,
  P_MOBILEAREA INT UNSIGNED, 
  P_PKNUMBER TINYINT UNSIGNED,
  P_SVRTYPE VARCHAR(64),
  P_P1 VARCHAR(64),
  P_P2 VARCHAR(64),
  P_P3 VARCHAR(64),
  P_P4 VARCHAR(64),
  P_USERMSGID BIGINT,
  P_MODULEID INT,
  P_ATTIME BIGINT,
  P_VALIDTIME BIGINT,
  P_SENDTYPE TINYINT UNSIGNED,
  P_BATCHID BIGINT,
  P_AREACODE INT,
  P_CUSTID VARCHAR(64),
  P_EXDATA VARCHAR(64))
  TOP:BEGIN
    DECLARE P_TMPMSGID BIGINT;
	DECLARE P_LOCATION INT;
	DECLARE P_START INT;
	DECLARE P_RESULTPHONE VARCHAR(21); #存储拆分后的字符
	DECLARE P_STRSPLIT VARCHAR(2);
	DECLARE P_LEN INT;
	DECLARE P_RESULTMSG VARCHAR(3000); #存储拆分后的字符
	DECLARE P_PKNUM INT;
	DECLARE P_TMPNUM INT;

    CREATE TEMPORARY TABLE IF NOT EXISTS P_TMP_WRMTTASK(UID INT,USERID VARCHAR(11),SPGATE VARCHAR(21),CPNO VARCHAR(21),
						PHONE VARCHAR(21),PTMSGID BIGINT,MESSAGE VARCHAR(3000),
						SENDSTATUS TINYINT,RETFLAG TINYINT,PKNUMBER TINYINT,
						PKTOTAL TINYINT,RECVMTTIME DATETIME,ECID INT,FEEFLAG TINYINT,
						SENDLEVEL TINYINT,TASKID INT,ERRORCODE CHAR(7),TPUDHI TINYINT,
						LONGMSGSEQ TINYINT,MSGFMT TINYINT,UNICOM TINYINT,MOBILEAREA INT,
						SVRTYPE VARCHAR(64),P1 VARCHAR(64),P2 VARCHAR(64),P3 VARCHAR(64),
						P4 VARCHAR(64),USERMSGID BIGINT,MODULEID INT,ATTIME BIGINT,VALIDTIME BIGINT,SENDTYPE INT,AREACODE INT,CUSTID VARCHAR(64),EXDATA VARCHAR(64));

	TRUNCATE TABLE P_TMP_WRMTTASK;

    SET P_LEN = CHAR_LENGTH(P_MESSAGE)-P_SIGNLEN;
	SET P_TMPNUM = 0;
	SET P_PKNUM = 1;
	SET P_STRSPLIT = ',';

    IF P_PHONECOUNT < 1 THEN #手机个数为0
		LEAVE TOP;
    END IF;

	IF P_MSGFMT=4 OR P_MSGFMT=248 OR P_MSGFMT=246 THEN
		SET P_SPLITLEN=140;
		SET P_MULTILEN1=134;
		SET P_MULTILEN2=134;
		SET P_SIGNLEN=0;
	END IF;

	IF P_MSGFMT=25 THEN
		IF NOT EXISTS (SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID=P_PTMSGID) THEN
		   INSERT INTO GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
		   RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA)
		   VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_PTMSGID,P_MESSAGE,P_SENDSTATUS,P_RETFLAG, P_PKNUMBER,P_PKTOTAL,
		   P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM, P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA);
        END IF;
	END IF;

	IF P_PHONECOUNT = 1 THEN #单发
        IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_PTMSGID) THEN
            IF P_PKTOTAL = 1 THEN
        		INSERT GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
        		RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,
        		P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA)
        		VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_PTMSGID,P_MESSAGE,P_SENDSTATUS,
        		P_RETFLAG,P_PKTOTAL,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,
        		P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA);
            ELSE
        		SET P_PKNUM = 1;
        		SET P_TMPMSGID = P_PTMSGID;
                IF P_PKTOTAL = 2 AND P_LEN <= P_MULTILEN1 THEN
    				SET P_RESULTMSG = SUBSTRING(P_MESSAGE,1,P_SPLITLEN);#拆分后的字符
    				SET P_TMPMSGID = P_TMPMSGID;
    				IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_PTMSGID) THEN
        				INSERT P_TMP_WRMTTASK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
        				RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
        				VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,
        				P_RETFLAG,P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA);
    				END IF;

    				SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_SPLITLEN+1,P_LEN-P_SPLITLEN+P_SIGNLEN);#拆分后的字符
    				SET P_TMPMSGID = P_TMPMSGID+17179869184;
    				SET P_PKNUM = P_PKNUM+1;
    				IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_PTMSGID) THEN
        				INSERT P_TMP_WRMTTASK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
        				PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
        				VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
        				P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA);
                    END IF;
                ELSE
                    WHILE P_PKNUM <= P_PKTOTAL DO
						IF P_PKNUM = P_PKTOTAL THEN
							SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_TMPNUM+1,P_MULTILEN2+P_SIGNLEN);#拆分后的字符
							SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
							#PRINT P_RESULTMSG
						ELSEIF P_PKNUM = P_PKTOTAL-1 THEN
							IF P_LEN-(P_PKNUM-1)*P_MULTILEN1 > P_MULTILEN2 AND P_LEN-(P_PKNUM-1)*P_MULTILEN1 <= P_MULTILEN1 THEN
								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_LEN-(P_PKNUM-1)*P_MULTILEN1-1);
								SET P_TMPNUM = P_LEN-1;
							ELSE
								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);
								SET P_TMPNUM = (P_PKNUM-1)*P_MULTILEN1+P_MULTILEN1;
						    END IF;

							SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
						ELSE
							SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);#拆分后的字符
							#PRINT P_RESULTMSG
							SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
						END IF;

						IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    						INSERT P_TMP_WRMTTASK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    						PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
    						VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    						P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA);
                        END IF;

						SET P_PKNUM = P_PKNUM+1;

                    END WHILE;
                END IF;
            		INSERT INTO GW_MT_TASK_BAK (UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
            		PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA)
            		SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,
            		A.PKNUMBER,A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME,A.SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA FROM P_TMP_WRMTTASK A;
                END IF;
            
		END IF;
	ELSE #群发
		SET P_SHOUJI = CONCAT(P_STRSPLIT , P_SHOUJI , P_STRSPLIT);
		SET P_LOCATION = LOCATE(P_STRSPLIT,P_SHOUJI);

		IF P_PKTOTAL < 1 THEN #没有短信内容
			LEAVE TOP;
        END IF;

		IF P_PKTOTAL >= 1 THEN #需要拆分长短信
			WHILE P_LOCATION <> 0 DO #拆分手机号码
				SET P_START = P_LOCATION;
				SET P_LOCATION = LOCATE(P_STRSPLIT,P_SHOUJI,P_START+1);
				IF P_LOCATION > 0 THEN
					SET P_RESULTPHONE = SUBSTRING(P_SHOUJI,P_START+1,P_LOCATION-P_START-1);#拆分后的字符
					#PRINT P_RESULTPHONE
					#IF P_RESULTPHONE <> ''
					SET P_TMPMSGID = P_PTMSGID;
					IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
						IF P_PKTOTAL = 1 THEN
							INSERT P_TMP_WRMTTASK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
							PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
							VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_MESSAGE,P_SENDSTATUS,P_RETFLAG,
							P_PKTOTAL,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA);
						ELSE
							SET P_PKNUM = 1;
							#SET P_TOTALSPLITNUM = P_PKTOTAL-1
							IF P_PKTOTAL = 2 AND P_LEN <= P_MULTILEN1 THEN
								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,1,P_SPLITLEN);#拆分后的字符
								SET P_TMPMSGID = P_TMPMSGID;
								IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    								INSERT P_TMP_WRMTTASK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    								PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
    								VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    								P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA);
                                END IF;

								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_SPLITLEN+1,P_LEN-P_SPLITLEN+P_SIGNLEN);#拆分后的字符
								SET P_TMPMSGID = P_TMPMSGID+17179869184;
								SET P_PKNUM = P_PKNUM+1;
								IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    								INSERT P_TMP_WRMTTASK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    								PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
    								VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    								P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA);
								END IF;
                             ELSE
								WHILE P_PKNUM <= P_PKTOTAL DO
									IF P_PKNUM = P_PKTOTAL THEN
										SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_TMPNUM+1,P_MULTILEN2+P_SIGNLEN);#拆分后的字符
										SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
									ELSEIF P_PKNUM = P_PKTOTAL-1 THEN
										IF P_LEN-(P_PKNUM-1)*P_MULTILEN1 > P_MULTILEN2 AND P_LEN-(P_PKNUM-1)*P_MULTILEN1 <= P_MULTILEN1 THEN
											SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_LEN-(P_PKNUM-1)*P_MULTILEN1-1);
											SET P_TMPNUM = P_LEN-1;
										ELSE
											SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);
											SET P_TMPNUM = (P_PKNUM-1)*P_MULTILEN1+P_MULTILEN1;
										END IF;
										SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
									ELSE
										SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);#拆分后的字符
										#PRINT P_RESULTMSG
										SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
									END IF;
									IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    									INSERT P_TMP_WRMTTASK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    									PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
    									VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    									P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA);
									END IF;
                                    SET P_PKNUM = P_PKNUM+1;
								END WHILE;
                             END IF; #END OF P_PKTOTAL = 2
						  END IF; # END OF P_PKTOTAL = 1
					   END	IF;	#NOT EXISTS(SELECT
					   SET P_PTMSGID = P_PTMSGID+1;
                   END IF;
				END WHILE;
			END IF;

			INSERT INTO GW_MT_TASK_BAK (UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
			PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA)
			SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,
			A.PKNUMBER,A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME,A.SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA FROM P_TMP_WRMTTASK A;
	  END IF;
END;;
DELIMITER ;

DELIMITER ;;
DROP PROCEDURE  IF EXISTS GW_LOAD_ECERRCODEBIND;
CREATE DEFINER=`root`@`%` PROCEDURE GW_LOAD_ECERRCODEBIND()
BEGIN
    SELECT CORP_CODE,STATE_CODE,MAPPING_CODE,STATE_DES FROM LF_STATECODE;
END;;
DELIMITER ;

CALL S_WR_VERINFO('4.06.07');


/*网关升级脚本 V4.06.06-V4.06.07 END*/

/*网关升级脚本 V4.06.07-V4.06.08 START*/
DELIMITER ;;
DROP PROCEDURE IF EXISTS `GW_WR_MTTASKV4`;
CREATE DEFINER=`root`@`%` PROCEDURE `GW_WR_MTTASKV4`(
P_UID INT,	
P_PTMSGID BIGINT,
	P_SENDSTATUS TINYINT UNSIGNED,
	P_RETFLAG TINYINT UNSIGNED,
	P_PKTOTAL TINYINT UNSIGNED,
	P_PHONECOUNT INT,
	P_SPLITLEN TINYINT UNSIGNED,
	P_MULTILEN1 TINYINT UNSIGNED,
	P_MULTILEN2 TINYINT UNSIGNED,
	P_SIGNLEN TINYINT UNSIGNED,
	P_ECID INT,
	P_USERID VARCHAR(11), 
P_SPGATE VARCHAR(21),
	P_CPNO VARCHAR(21),
	P_RECVMTTIME DATETIME,
	P_MESSAGE VARCHAR(3000)  CHARSET 'GBK',
	P_SHOUJI VARCHAR(3500),
	P_FEEFLAG TINYINT UNSIGNED,
	P_SENDLEVEL TINYINT UNSIGNED,
	P_TASKID INT,
	P_ERRORCODE CHAR(7),
	P_TPUDHI TINYINT UNSIGNED,
	P_LONGMSGSEQ TINYINT UNSIGNED,
	P_MSGFMT TINYINT UNSIGNED,
	P_UNICOM TINYINT UNSIGNED,
  P_MOBILEAREA INT UNSIGNED, 
  P_PKNUMBER TINYINT UNSIGNED,
  P_SVRTYPE VARCHAR(64),
  P_P1 VARCHAR(64),
  P_P2 VARCHAR(64),
  P_P3 VARCHAR(64),
  P_P4 VARCHAR(64),
  P_USERMSGID BIGINT,
  P_MODULEID INT,
  P_ATTIME BIGINT,
  P_VALIDTIME BIGINT,
  P_SENDTYPE TINYINT UNSIGNED,
  P_BATCHID BIGINT,
  P_AREACODE INT,
  P_CUSTID VARCHAR(64),
  P_EXDATA VARCHAR(64),
  P_LONGMSG VARCHAR(4000),
  P_TMPLID BIGINT,
  P_CHGRADE TINYINT,
  P_MSGTYPE TINYINT,
  P_RMSVALIDTM INT,
  P_RMSRPTFLAG TINYINT,
  P_PROTOCOLVER TINYINT,
  P_TMPLTYPE TINYINT,
  P_TITLE VARCHAR(40),
  P_SHOWAY VARCHAR(16),
  P_DLDWAY INT,
  P_DLDNEY INT,
  P_ISFREE INT,
  P_SHOWTIME BIGINT,
  P_SUID1 VARCHAR(64),
  P_LUID1 VARCHAR(64)
  )
  TOP:BEGIN
    DECLARE P_TMPMSGID BIGINT;
	DECLARE P_LOCATION INT;
	DECLARE P_START INT;
	DECLARE P_RESULTPHONE VARCHAR(21); #存储拆分后的字符
	DECLARE P_STRSPLIT VARCHAR(2);
	DECLARE P_LEN INT;
	DECLARE P_RESULTMSG VARCHAR(3000); #存储拆分后的字符
	DECLARE P_PKNUM INT;
	DECLARE P_TMPNUM INT;

    CREATE TEMPORARY TABLE IF NOT EXISTS P_TMP_WRMTTASKV2(UID INT,USERID VARCHAR(11),SPGATE VARCHAR(21),CPNO VARCHAR(21),
						PHONE VARCHAR(21),PTMSGID BIGINT,MESSAGE VARCHAR(3000),
						SENDSTATUS TINYINT,RETFLAG TINYINT,PKNUMBER TINYINT,
						PKTOTAL TINYINT,RECVMTTIME DATETIME,ECID INT,FEEFLAG TINYINT,
						SENDLEVEL TINYINT,TASKID INT,ERRORCODE CHAR(7),TPUDHI TINYINT,
						LONGMSGSEQ TINYINT,MSGFMT TINYINT,UNICOM TINYINT,MOBILEAREA INT,
						SVRTYPE VARCHAR(64),P1 VARCHAR(64),P2 VARCHAR(64),P3 VARCHAR(64),
						P4 VARCHAR(64),USERMSGID BIGINT,MODULEID INT,ATTIME BIGINT,VALIDTIME BIGINT,SENDTYPE INT,AREACODE INT,CUSTID VARCHAR(64),EXDATA VARCHAR(64),
						LONGMSG VARCHAR(4000),TMPLID BIGINT,CHGRADE TINYINT,MSGTYPE TINYINT,RMSVALIDTM INT,RMSRPTFLAG TINYINT,PROTOCOLVER TINYINT,TMPLTYPE TINYINT,TITLE VARCHAR(40),SHOWAY VARCHAR(16),DLDWAY INT,DLDNEY INT,ISFREE INT,SHOWTIME BIGINT,SUID1 VARCHAR(64),LUID1 VARCHAR(64));

	TRUNCATE TABLE P_TMP_WRMTTASKV2;

    SET P_LEN = CHAR_LENGTH(P_LONGMSG)-P_SIGNLEN;
	SET P_TMPNUM = 0;
	SET P_PKNUM = 1;
	SET P_STRSPLIT = ',';

    IF P_PHONECOUNT < 1 THEN #手机个数为0
		LEAVE TOP;
    END IF;

	IF P_MSGFMT=4 OR P_MSGFMT=248 OR P_MSGFMT=246 THEN
		SET P_SPLITLEN=140;
		SET P_MULTILEN1=134;
		SET P_MULTILEN2=134;
		SET P_SIGNLEN=0;
	END IF;

	IF P_MSGFMT=25 THEN
		IF NOT EXISTS (SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID=P_PTMSGID) THEN
		   INSERT INTO GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
		   RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
		   VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_PTMSGID,P_MESSAGE,P_SENDSTATUS,P_RETFLAG, P_PKNUMBER,P_PKTOTAL,
		   P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM, P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
        END IF;
	END IF;

	IF P_PHONECOUNT = 1 THEN #单发
        IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_PTMSGID) THEN
            IF P_PKTOTAL = 1 THEN
        		INSERT GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
        		RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,
        		P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
        		VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_PTMSGID,P_MESSAGE,P_SENDSTATUS,
        		P_RETFLAG,P_PKTOTAL,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,
        		P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
            ELSE
        		SET P_PKNUM = 1;
        		SET P_TMPMSGID = P_PTMSGID;
                IF P_PKTOTAL = 2 AND P_LEN <= P_MULTILEN1 THEN
    				SET P_RESULTMSG = SUBSTRING(P_MESSAGE,1,P_SPLITLEN);#拆分后的字符
    				SET P_TMPMSGID = P_TMPMSGID;
    				IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_PTMSGID) THEN
        				INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
        				RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
        				VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,
        				P_RETFLAG,P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
    				END IF;

    				SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_SPLITLEN+1,P_LEN-P_SPLITLEN+P_SIGNLEN);#拆分后的字符
    				SET P_TMPMSGID = P_TMPMSGID+17179869184;
    				SET P_PKNUM = P_PKNUM+1;
    				IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_PTMSGID) THEN
        				INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
        				PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
        				VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
        				P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
                    END IF;
                ELSE
                    WHILE P_PKNUM <= P_PKTOTAL DO
						IF P_PKNUM = P_PKTOTAL THEN
							SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_TMPNUM+1,P_MULTILEN2+P_SIGNLEN);#拆分后的字符
							SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
							#PRINT P_RESULTMSG
						ELSEIF P_PKNUM = P_PKTOTAL-1 THEN
							IF P_LEN-(P_PKNUM-1)*P_MULTILEN1 > P_MULTILEN2 AND P_LEN-(P_PKNUM-1)*P_MULTILEN1 <= P_MULTILEN1 THEN
								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_LEN-(P_PKNUM-1)*P_MULTILEN1-1);
								SET P_TMPNUM = P_LEN-1;
							ELSE
								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);
								SET P_TMPNUM = (P_PKNUM-1)*P_MULTILEN1+P_MULTILEN1;
						    END IF;

							SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
						ELSE
							SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);#拆分后的字符
							#PRINT P_RESULTMSG
							SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
						END IF;

						IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    						INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    						PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
    						VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    						P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
                        END IF;

						SET P_PKNUM = P_PKNUM+1;

                    END WHILE;
                END IF;
            		INSERT INTO GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
            		PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
            		SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,
            		A.PKNUMBER,A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME,A.SENDTYPE,A.AREACODE,A.CUSTID,A.EXDATA,A.LONGMSG,A.TMPLID,A.CHGRADE,A.MSGTYPE,A.RMSVALIDTM,A.RMSRPTFLAG,A.PROTOCOLVER,A.TMPLTYPE,A.TITLE,A.SHOWAY,A.DLDWAY,A.DLDNEY,A.ISFREE,A.SHOWTIME,A.SUID1,A.LUID1 FROM P_TMP_WRMTTASKV2 A;
                END IF;
            
		END IF;
	ELSE #群发
		SET P_SHOUJI = CONCAT(P_STRSPLIT , P_SHOUJI , P_STRSPLIT);
		SET P_LOCATION = LOCATE(P_STRSPLIT,P_SHOUJI);

		IF P_PKTOTAL < 1 THEN #没有短信内容
			LEAVE TOP;
        END IF;

		IF P_PKTOTAL >= 1 THEN #需要拆分长短信
			WHILE P_LOCATION <> 0 DO #拆分手机号码
				SET P_START = P_LOCATION;
				SET P_LOCATION = LOCATE(P_STRSPLIT,P_SHOUJI,P_START+1);
				IF P_LOCATION > 0 THEN
					SET P_RESULTPHONE = SUBSTRING(P_SHOUJI,P_START+1,P_LOCATION-P_START-1);#拆分后的字符
					#PRINT P_RESULTPHONE
					#IF P_RESULTPHONE <> ''
					SET P_TMPMSGID = P_PTMSGID;
					IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
						IF P_PKTOTAL = 1 THEN
							INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
							PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
							VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_MESSAGE,P_SENDSTATUS,P_RETFLAG,
							P_PKTOTAL,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
						ELSE
							SET P_PKNUM = 1;
							#SET P_TOTALSPLITNUM = P_PKTOTAL-1
							IF P_PKTOTAL = 2 AND P_LEN <= P_MULTILEN1 THEN
								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,1,P_SPLITLEN);#拆分后的字符
								SET P_TMPMSGID = P_TMPMSGID;
								IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    								INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    								PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
    								VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    								P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
                                END IF;

								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_SPLITLEN+1,P_LEN-P_SPLITLEN+P_SIGNLEN);#拆分后的字符
								SET P_TMPMSGID = P_TMPMSGID+17179869184;
								SET P_PKNUM = P_PKNUM+1;
								IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    								INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    								PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
    								VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    								P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
								END IF;
                             ELSE
								WHILE P_PKNUM <= P_PKTOTAL DO
									IF P_PKNUM = P_PKTOTAL THEN
										SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_TMPNUM+1,P_MULTILEN2+P_SIGNLEN);#拆分后的字符
										SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
									ELSEIF P_PKNUM = P_PKTOTAL-1 THEN
										IF P_LEN-(P_PKNUM-1)*P_MULTILEN1 > P_MULTILEN2 AND P_LEN-(P_PKNUM-1)*P_MULTILEN1 <= P_MULTILEN1 THEN
											SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_LEN-(P_PKNUM-1)*P_MULTILEN1-1);
											SET P_TMPNUM = P_LEN-1;
										ELSE
											SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);
											SET P_TMPNUM = (P_PKNUM-1)*P_MULTILEN1+P_MULTILEN1;
										END IF;
										SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
									ELSE
										SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);#拆分后的字符
										#PRINT P_RESULTMSG
										SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
									END IF;
									IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    									INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    									PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
    									VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    									P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
									END IF;
                                    SET P_PKNUM = P_PKNUM+1;
								END WHILE;
                             END IF; #END OF P_PKTOTAL = 2
						  END IF; # END OF P_PKTOTAL = 1
					   END	IF;	#NOT EXISTS(SELECT
					   SET P_PTMSGID = P_PTMSGID+1;
                   END IF;
				END WHILE;
			END IF;

			INSERT INTO GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
			PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
			SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,
			A.PKNUMBER,A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME,A.SENDTYPE,A.AREACODE,A.CUSTID,A.EXDATA,A.LONGMSG,A.TMPLID,A.CHGRADE,A.MSGTYPE,A.RMSVALIDTM,A.RMSRPTFLAG,A.PROTOCOLVER,A.TMPLTYPE,A.TITLE,A.SHOWAY,A.DLDWAY,A.DLDNEY,A.ISFREE,A.SHOWTIME,A.SUID1,A.LUID1 FROM P_TMP_WRMTTASKV2 A;
	  END IF;
END;;
DELIMITER ;

DELIMITER ;;
DROP PROCEDURE IF EXISTS `GW_WR_MTTASKSRV4`;
CREATE DEFINER=`root`@`%` PROCEDURE `GW_WR_MTTASKSRV4`(P_UID INT,P_PTMSGID BIGINT,
	P_SENDSTATUS TINYINT UNSIGNED,
	P_RETFLAG TINYINT UNSIGNED,
	P_PKTOTAL TINYINT UNSIGNED,
	P_PHONECOUNT INT,
	P_ECID INT,
	P_USERID VARCHAR(11),
	P_SPGATE VARCHAR(21),
	P_CPNO VARCHAR(21),
	P_RECVMTTIME DATETIME,
	P_MESSAGE VARCHAR(3000)  CHARSET 'GBK',
	P_SHOUJI VARCHAR(3500),
	P_FEEFLAG TINYINT UNSIGNED,
	P_PKNUMBER TINYINT UNSIGNED,
	P_SENDLEVEL TINYINT UNSIGNED,
	P_TASKID INT,
	P_ERRORCODE CHAR(7),
	P_TPUDHI TINYINT UNSIGNED,
	P_LONGMSGSEQ TINYINT UNSIGNED,
	P_MSGFMT TINYINT UNSIGNED,
	P_UNICOM TINYINT UNSIGNED,
	P_MOBILEAREA INT,
	P_SVRTYPE VARCHAR(64),
	P_P1 VARCHAR(64),
	P_P2 VARCHAR(64),
	P_P3 VARCHAR(64),
	P_P4 VARCHAR(64),
	P_USERMSGID BIGINT,
	P_MODULEID INT,
	P_ATTIME BIGINT,
	P_VALIDTIME BIGINT,
	P_SENDTYPE INT,
	P_BATCHID BIGINT,
	P_AREACODE INT,
	P_CUSTID VARCHAR(64),
	P_EXDATA VARCHAR(64),
	P_LONGMSG VARCHAR(4000),
	P_TMPLID BIGINT,
	P_CHGRADE TINYINT,
	P_MSGTYPE TINYINT,
	P_RMSVALIDTM INT,
	P_RMSRPTFLAG TINYINT,
	P_PROTOCOLVER TINYINT,
    P_TMPLTYPE TINYINT,
    P_TITLE VARCHAR(40),
    P_SHOWAY VARCHAR(16),
    P_DLDWAY INT,
    P_DLDNEY INT,
    P_ISFREE INT,
    P_SHOWTIME BIGINT,
	P_SUID1 VARCHAR(64),
	P_LUID1 VARCHAR(64))
TOP:BEGIN
    DECLARE P_LOCATION INT;
	DECLARE P_START INT;
	DECLARE P_RESULTPHONE VARCHAR(21); #存储拆分后的字符
	DECLARE P_STRSPLIT VARCHAR(2);

    CREATE TEMPORARY TABLE IF NOT EXISTS P_TMP_MTSR(UID INT,USERID VARCHAR(11),SPGATE VARCHAR(21),CPNO VARCHAR(21),
						PHONE VARCHAR(21),PTMSGID BIGINT ,MESSAGE VARCHAR(3000),
						SENDSTATUS TINYINT UNSIGNED,RETFLAG TINYINT UNSIGNED,PKNUMBER TINYINT UNSIGNED,
						PKTOTAL TINYINT UNSIGNED,RECVMTTIME DATETIME,ECID INT,FEEFLAG TINYINT UNSIGNED,
						SENDLEVEL TINYINT UNSIGNED,TASKID INT,ERRORCODE CHAR(7),TPUDHI TINYINT UNSIGNED,
						LONGMSGSEQ TINYINT UNSIGNED,MSGFMT TINYINT UNSIGNED,UNICOM TINYINT UNSIGNED,MOBILEAREA INT,
						SVRTYPE VARCHAR(64),P1 VARCHAR(64),P2 VARCHAR(64),P3 VARCHAR(64),
						P4 VARCHAR(64),USERMSGID BIGINT,MODULEID INT,ATTIME BIGINT,VALIDTIME BIGINT,SENDTYPE INT,AREACODE INT,CUSTID VARCHAR(64),EXDATA VARCHAR(64),
						LONGMSG VARCHAR(4000),TMPLID BIGINT,CHGRADE TINYINT,MSGTYPE TINYINT,RMSVALIDTM INT,RMSRPTFLAG TINYINT,PROTOCOLVER TINYINT,TMPLTYPE TINYINT,TITLE VARCHAR(40),SHOWAY VARCHAR(16),DLDWAY INT,DLDNEY INT,ISFREE INT,SHOWTIME BIGINT,SUID1 VARCHAR(64),LUID1 VARCHAR(64));
    TRUNCATE TABLE P_TMP_MTSR;

    SET P_STRSPLIT = ',';

    IF P_PHONECOUNT < 1 THEN #手机个数为0
		LEAVE TOP;
    END IF;

	IF P_PHONECOUNT = 1 THEN #单发
		IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_PTMSGID) THEN
		   INSERT GW_MT_TASK_BAK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG,
		   PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG, SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,
		   P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
		   VALUES(P_UID,P_USERID, P_SPGATE, P_CPNO, P_SHOUJI, P_PTMSGID, P_MESSAGE, P_SENDSTATUS, P_RETFLAG,
		   P_PKNUMBER, P_PKTOTAL, P_RECVMTTIME, P_ECID, P_FEEFLAG, P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,
		   P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
		END IF;
	ELSE #群发
		SET P_SHOUJI = CONCAT(P_STRSPLIT , P_SHOUJI , P_STRSPLIT);
		SET P_LOCATION = LOCATE(P_STRSPLIT,P_SHOUJI);
		WHILE P_LOCATION <> 0 DO #拆分手机号码
			SET P_START = P_LOCATION;
			SET P_LOCATION = LOCATE(P_STRSPLIT,P_SHOUJI,P_START+1);
			IF P_LOCATION > 0 THEN
				SET P_RESULTPHONE = SUBSTRING(P_SHOUJI,P_START+1,P_LOCATION-P_START-1);#拆分后的字符
				#PRINT P_RESULTPHONE
				IF P_RESULTPHONE <> '' THEN
					IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_PTMSGID) THEN
					   INSERT P_TMP_MTSR(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG,
					   PKNUMBER, PKTOTAL, RECVMTTIME,ECID, FEEFLAG, SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
					   VALUES(P_UID,P_USERID, P_SPGATE, P_CPNO, P_RESULTPHONE, P_PTMSGID, P_MESSAGE, P_SENDSTATUS, P_RETFLAG,
					   P_PKNUMBER, P_PKTOTAL, P_RECVMTTIME, P_ECID, P_FEEFLAG, P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
                    END IF;
					SET P_PTMSGID = P_PTMSGID+1;
				END IF;
			END IF;
		END	WHILE;

		INSERT INTO GW_MT_TASK_BAK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG,
		PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG, SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,
		P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
		SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,
		A.PKNUMBER,A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,
		A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME ,A.SENDTYPE,P_BATCHID,P_AREACODE,A.CUSTID,A.EXDATA,A.LONGMSG,A.TMPLID,A.CHGRADE,A.MSGTYPE,A.RMSVALIDTM,A.RMSRPTFLAG,A.PROTOCOLVER,A.TMPLTYPE,A.TITLE,A.SHOWAY,A.DLDWAY,A.DLDNEY,A.ISFREE,A.SHOWTIME,A.SUID1,A.LUID1 FROM P_TMP_MTSR A;
	END IF;
/*
,P_SVRTYPE VARCHAR(64),P_P1 VARCHAR(64),P_P2 VARCHAR(64),P_P3 VARCHAR(64),P_P4 VARCHAR(64),P_USERMSGID BIGINT,P_MODULEID INT,P_ATTIME BIGINT,P_VALIDTIME BIGINT
,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME
,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME
*/
END;;
DELIMITER ;

CALL S_WR_VERINFO('4.06.08');


/*网关升级脚本 V4.06.07-V4.06.08 END*/

/*网关升级脚本 V4.06.08-V4.06.09 START*/
-- ----------------------------
-- PROCEDURE STRUCTURE FOR GW_WR_MTTASKBAKV3
-- ---------------------------- 
DROP PROCEDURE IF EXISTS `GW_WR_MTTASKBAKV3`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `GW_WR_MTTASKBAKV3`
 (
    PIUID         INT(11),
    PIPTMSGID     BIGINT(20),
    PIECID        INT(11),
    PISENDSTATUS  SMALLINT,
    PIRETFLAG     TINYINT UNSIGNED,
    PIPKNUMBER    TINYINT UNSIGNED,
    PIPKTOTAL     TINYINT UNSIGNED,
    PIFEEFLAG     TINYINT UNSIGNED,
    PISENDLEVEL   TINYINT UNSIGNED,
    PIRECVMTTIME  DATETIME,
    PIUSERID      VARCHAR(11),
    PISPGATE      VARCHAR(21),
    PICPNO        VARCHAR(21),
    PIPHONE       VARCHAR(21),
    PIMESSAGE     VARCHAR(3000),
    PITASKID      INT(11),
    PIERRORCODE   VARCHAR(7),
    PITPUDHI      TINYINT UNSIGNED,
    PILONGMSGSEQ  TINYINT UNSIGNED,
    PIMSGFMT      TINYINT UNSIGNED,
    PIUNICOM      TINYINT UNSIGNED,
    PIMOBILEAREA  INT(11),
    PISVRTYPE     VARCHAR(64),
    PIP1          VARCHAR(64),
    PIP2          VARCHAR(64),
    PIP3          VARCHAR(64),
    PIP4          VARCHAR(64),
    PIUSERMSGID   BIGINT(20),
    PIMODULEID    INT(11),
    PIATTIME      BIGINT(20),
    PIVALIDTIME   BIGINT(20),
    PISENDTYPE    TINYINT UNSIGNED,
    PIBATCHID     BIGINT(20),
    PIAREACODE    INT(11),
    P_CUSTID VARCHAR(64),
	P_EXDATA VARCHAR(64),
	P_SUID1 VARCHAR(64),
	P_LUID1 VARCHAR(64),
    P_LONGMSG VARCHAR(4000),
    P_TMPLID BIGINT,
    P_CHGRADE TINYINT,
    P_MSGTYPE TINYINT,
    P_RMSVALIDTM INT,
    P_RMSRPTFLAG TINYINT,
    P_PROTOCOLVER TINYINT,
    P_TMPLTYPE TINYINT,
    P_TITLE VARCHAR(40),
    P_SHOWAY VARCHAR(16),
    P_DLDWAY INT,
    P_DLDNEY INT,
    P_ISFREE INT,
    P_SHOWTIME BIGINT
 )
BEGIN
    DECLARE PICNT INT(11);
    SELECT COUNT(ID) INTO PICNT FROM GW_MT_TASK_BAK WHERE PTMSGID=PIPTMSGID;
  IF PICNT=0 THEN	#write GW_MT_TASK_BAK
    INSERT INTO GW_MT_TASK_BAK(UID,PTMSGID,ECID,SENDSTATUS,RETFLAG,PKNUMBER,PKTOTAL,FEEFLAG,SENDLEVEL,
    RECVMTTIME,USERID,SPGATE,CPNO,PHONE,MESSAGE,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,
    MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1,
	LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME)
    VALUES(PIUID,PIPTMSGID,PIECID,PISENDSTATUS,PIRETFLAG,PIPKNUMBER,PIPKTOTAL,PIFEEFLAG,PISENDLEVEL,PIRECVMTTIME,
    PIUSERID,PISPGATE,PICPNO,PIPHONE,PIMESSAGE,PITASKID,PIERRORCODE,PITPUDHI,PILONGMSGSEQ,PIMSGFMT,PIUNICOM,
    PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1,
	P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME);
  END IF;
END;;
DELIMITER ;

CALL S_WR_VERINFO('4.06.09');


/*网关升级脚本 V4.06.08-V4.06.09 END*/
DELIMITER $
DROP PROCEDURE IF EXISTS `LF_PVERV0`$

CREATE  DEFINER=`root`@`%` PROCEDURE `LF_PVERV0`(
    VERSIONSTR VARCHAR(32),
    DBVERSIONSTR VARCHAR(32),
    WBSVERSION VARCHAR(32),
    SPGATEVERSION VARCHAR(32),
    NUM INT,
    TOTALSTR INT
)
BEGIN
	/*EMP产品版本记录*/
	/*EMP-WEB*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=1000) THEN
		INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
		VALUES(1000,1000,VERSIONSTR,NOW(),NOW(),'EMP-WEB');
	ELSE
		UPDATE LF_VERSION SET UPDATETIME=NOW(),VERSION=VERSIONSTR WHERE PRODUCT_ID=1000 AND PROCESS_ID=1000;
	END IF;
	/*EMP_GATEWAY*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=2000) THEN
		INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
		VALUES(1000,2000,WBSVERSION,NOW(),NOW(),'EMP_GATEWAY');
	ELSE
		UPDATE LF_VERSION SET UPDATETIME=NOW(),VERSION=WBSVERSION WHERE  PRODUCT_ID=1000 AND PROCESS_ID=2000;
	END IF;
	/*SMT_SPGATE*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=3000) THEN
		INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
		VALUES(1000,3000,SPGATEVERSION,NOW(),NOW(),'SMT_SPGATE');
	ELSE
		UPDATE LF_VERSION SET UPDATETIME=NOW(),VERSION=SPGATEVERSION WHERE  PRODUCT_ID=1000 AND PROCESS_ID=3000;
	END IF;
	/*EMP产品版本历史记录*/
	/*EMP-WEB*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION_HIS WHERE VERSION=VERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=1000) THEN
			INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO,ISRELEASE,VERSIONINFO)
			VALUES(1000,1000,VERSIONSTR,NOW(),NOW(),'EMP-WEB',1,'1.修复由于百分号转义产生的内容错误问题;<br>2.修复 客服短信-》客户群组群发-》：发送内容输入半角单引号，提交发送之后在群发任务查看内容没有单引号 的问题;<br>3.修复 移动客服-》客户群组群发-》：发送特殊字符，会缺失或替换 的问题；<br>4.修复 参数内容包含中文，在群发任务查看发出的内容是乱码 的问题；<br>5.修复fastjson漏洞；<br>6.修复 操作员在绑定接入账号后，在SP账号统计报表查询不到接入账号数据 的问题；<br>7.解决客户群组群发\'\'\\\'字符串转成\的问题；<br>8.解决发送人民币符号变问号的问题。');
	ELSE
			UPDATE LF_VERSION_HIS SET UPDATETIME=NOW(),ISRELEASE=1,VERSIONINFO='1.修复由于百分号转义产生的内容错误问题;<br>2.修复 客服短信-》客户群组群发-》：发送内容输入半角单引号，提交发送之后在群发任务查看内容没有单引号 的问题;<br>3.修复 移动客服-》客户群组群发-》：发送特殊字符，会缺失或替换 的问题；<br>4.修复 参数内容包含中文，在群发任务查看发出的内容是乱码 的问题；<br>5.修复fastjson漏洞；<br>6.修复 操作员在绑定接入账号后，在SP账号统计报表查询不到接入账号数据 的问题；<br>7.解决客户群组群发\'\'\\\'字符串转成\的问题；<br>8.解决发送人民币符号变问号的问题。' WHERE PRODUCT_ID=1000 AND PROCESS_ID=1000;
	END IF;
	/*EMP_GATEWAY*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION_HIS WHERE VERSION=WBSVERSION AND PRODUCT_ID=1000 AND PROCESS_ID=2000) THEN
		INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
		VALUES(1000,2000,WBSVERSION,NOW(),NOW(),'EMP_GATEWAY');
	ELSE
		UPDATE LF_VERSION_HIS SET UPDATETIME=NOW() WHERE  PRODUCT_ID=1000 AND PROCESS_ID=2000;
	END IF;
	/*SMT_SPGATE*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION_HIS WHERE VERSION=SPGATEVERSION AND PRODUCT_ID=1000 AND PROCESS_ID=3000) THEN
		INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
		VALUES(1000,3000,SPGATEVERSION,NOW(),NOW(),'SMT_SPGATE');
	ELSE
		UPDATE LF_VERSION_HIS SET UPDATETIME=NOW() WHERE  PRODUCT_ID=1000 AND PROCESS_ID=3000;
	END IF;
	IF NOT EXISTS(SELECT * FROM LF_DB_SCRIPT WHERE VERSION=DBVERSIONSTR AND CURRENT_NO=NUM AND TOTAL=TOTALSTR) THEN
		/*EMP产品数据库版本信息表*/ 
		INSERT INTO LF_DB_SCRIPT(VERSION,UPDATETIME,CREATETIME,CURRENT_NO,TOTAL,STATE,MEMO)
		VALUES(DBVERSIONSTR,NOW(),NOW(),NUM,TOTALSTR,2,'1号脚本');
	ELSE
		UPDATE LF_DB_SCRIPT SET STATE=2,UPDATETIME=NOW() WHERE  CURRENT_NO=NUM AND TOTAL=TOTALSTR;
	END IF;
END     $
CALL LF_PVERV0('7.3.9.645.SP9','73.09','8.6.5.220','6.1.53.345',1,1) $
DROP PROCEDURE IF EXISTS `LF_PVERV0` $
