--------------------V73.07-V73.08 START------------------
BEGIN ATOMIC
DECLARE DBVERSIONSTR VARCHAR(32);
DECLARE NUMSTR INT;
DECLARE TOTALSTR INT;
SET DBVERSIONSTR = '73.09';
SET NUMSTR=1;
SET TOTALSTR=1;
IF NOT EXISTS (SELECT * FROM LF_DB_SCRIPT WHERE VERSION=DBVERSIONSTR) THEN
--EMP产品数据库版本信息表 
INSERT INTO LF_DB_SCRIPT(VERSION,UPDATETIME,CREATETIME,CURRENT_NO,TOTAL,STATE,MEMO)
VALUES(DBVERSIONSTR,CURRENT TIMESTAMP,CURRENT TIMESTAMP,NUMSTR,TOTALSTR,1,'WEB包更改');
END IF;
END &&


/*WEB升级脚本 START*/
/*WEB升级脚本 END*/


/*网关升级脚本 V4.06.07-V4.06.08 START*/
CREATE PROCEDURE "DELPROC"(IN "PROCNAME1" VARCHAR(30)) 
  begin
DECLARE STR VARCHAR (256);
DECLARE STR1 VARCHAR (256);
SELECT PROCNAME INTO STR1 FROM SYSCAT.PROCEDURES WHERE  PROCNAME=PROCNAME1;
if  STR1 is not null THEN
  SET STR ='DROP PROCEDURE '||PROCNAME1; 
  execute immediate str ; 
end if; 
end&&

CALL DELPROC('DELTABLE')&&
CREATE PROCEDURE "DELTABLE"(IN "TABLENAME1" VARCHAR(20)) 
  begin
DECLARE STR VARCHAR (256);
DECLARE STR1 VARCHAR (256);
IF EXISTS (select * from sysibm.systables where TID <> 0 and name = TABLENAME1 ) THEN  
  set STR ='drop table '|| TABLENAME1;
  execute immediate str ; 
end if; 
end&&

CALL DELPROC('ADDCOLUMN')&&
CREATE PROCEDURE ADDCOLUMN (TABLENAME VARCHAR(20),COLUMNNAME VARCHAR(20),COLUMNTYPE VARCHAR(256 ))
BEGIN
DECLARE STR VARCHAR (256);
IF NOT EXISTS ( SELECT * FROM SYSIBM.SYSCOLUMNS WHERE NAME=COLUMNNAME AND TBNAME=TABLENAME ) THEN
  SET STR ='ALTER TABLE ' ||TABLENAME||' ADD COLUMN ' ||COLUMNNAME||'  '|| COLUMNTYPE; 
  EXECUTE IMMEDIATE STR ;
  SET STR = 'REORG TABLE '||TABLENAME ;
  CALL SYSPROC .ADMIN_CMD(STR);
END IF; 
END&& 

CALL ADDCOLUMN('GW_MT_TASK_BAK' ,'SUID1','VARCHAR(64) NOT NULL DEFAULT ''''' )&&
CALL ADDCOLUMN('GW_MT_TASK_BAK' ,'LUID1','VARCHAR(64) NOT NULL DEFAULT ''''' )&&

CALL ADDCOLUMN('MT_LEVEL0_QUEUE' ,'SUID1','VARCHAR(64) NOT NULL DEFAULT ''''' )&&
CALL ADDCOLUMN('MT_LEVEL0_QUEUE' ,'LUID1','VARCHAR(64) NOT NULL DEFAULT ''''' )&&

CALL ADDCOLUMN('MT_LEVEL1_QUEUE' ,'SUID1','VARCHAR(64) NOT NULL DEFAULT ''''' )&&
CALL ADDCOLUMN('MT_LEVEL1_QUEUE' ,'LUID1','VARCHAR(64) NOT NULL DEFAULT ''''' )&&

CALL ADDCOLUMN('MT_LEVEL2_QUEUE' ,'SUID1','VARCHAR(64) NOT NULL DEFAULT ''''' )&&
CALL ADDCOLUMN('MT_LEVEL2_QUEUE' ,'LUID1','VARCHAR(64) NOT NULL DEFAULT ''''' )&&

CALL ADDCOLUMN('MT_LEVEL3_QUEUE' ,'SUID1','VARCHAR(64) NOT NULL DEFAULT ''''' )&&
CALL ADDCOLUMN('MT_LEVEL3_QUEUE' ,'LUID1','VARCHAR(64) NOT NULL DEFAULT ''''' )&&

CALL ADDCOLUMN('MT_LEVEL4_QUEUE' ,'SUID1','VARCHAR(64) NOT NULL DEFAULT ''''' )&&
CALL ADDCOLUMN('MT_LEVEL4_QUEUE' ,'LUID1','VARCHAR(64) NOT NULL DEFAULT ''''' )&&

CALL ADDCOLUMN('MT_LEVEL5_QUEUE' ,'SUID1','VARCHAR(64) NOT NULL DEFAULT ''''' )&&
CALL ADDCOLUMN('MT_LEVEL5_QUEUE' ,'LUID1','VARCHAR(64) NOT NULL DEFAULT ''''' )&&

CALL ADDCOLUMN('MT_LEVEL6_QUEUE' ,'SUID1','VARCHAR(64) NOT NULL DEFAULT ''''' )&&
CALL ADDCOLUMN('MT_LEVEL6_QUEUE' ,'LUID1','VARCHAR(64) NOT NULL DEFAULT ''''' )&&

CALL ADDCOLUMN('MT_LEVEL7_QUEUE' ,'SUID1','VARCHAR(64) NOT NULL DEFAULT ''''' )&&
CALL ADDCOLUMN('MT_LEVEL7_QUEUE' ,'LUID1','VARCHAR(64) NOT NULL DEFAULT ''''' )&&

CALL ADDCOLUMN('MT_LEVEL8_QUEUE' ,'SUID1','VARCHAR(64) NOT NULL DEFAULT ''''' )&&
CALL ADDCOLUMN('MT_LEVEL8_QUEUE' ,'LUID1','VARCHAR(64) NOT NULL DEFAULT ''''' )&&

CALL ADDCOLUMN('MT_LEVEL9_QUEUE' ,'SUID1','VARCHAR(64) NOT NULL DEFAULT ''''' )&&
CALL ADDCOLUMN('MT_LEVEL9_QUEUE' ,'LUID1','VARCHAR(64) NOT NULL DEFAULT ''''' )&&


--(1)当月历史表添加字段，无默认值
CALL DELPROC('ADDCOL_MTTASK_CUR')&&
CREATE PROCEDURE "ADDCOL_MTTASK_CUR" ( ) 
BEGIN
DECLARE TABLENAME1 VARCHAR(20);
DECLARE TABLENAME2 VARCHAR(20);
DECLARE STR VARCHAR(256);
DECLARE V_SQL VARCHAR(256);
DECLARE　PICNT　INT　DEFAULT　0; 
DECLARE　PICNT2　INT　DEFAULT　0; 
DECLARE　AT_END　INT　DEFAULT　0; 
DECLARE  NOT_FOUND  CONDITION  FOR  SQLSTATE  '02000';  
DECLARE V_STMT statement;
DECLARE CUR_TABLE  cursor with hold for V_STMT ;
DECLARE　CONTINUE　HANDLER　FOR　NOT_FOUND 
set AT_END=1; 

SET V_SQL ='SELECT TABNAME FROM SYSCAT.TABLES WHERE TABSCHEMA = CURRENT SCHEMA AND  TABNAME=''MTTASK'||CAST((SUBSTR(CHAR(CURRENT TIMESTAMP),1,4)||SUBSTR(CHAR(CURRENT TIMESTAMP),6,2))AS INT)||'''';
prepare V_STMT from V_SQL;

OPEN CUR_TABLE;  
set AT_END=0;
FETCH CUR_TABLE INTO TABLENAME2;  
WHILE AT_END=0 DO
  BEGIN
  --添加字段 
   SELECT COUNT(TABNAME) INTO PICNT FROM SYSCAT.COLUMNS WHERE COLNAME='SUID1' AND TABNAME=TABLENAME2 AND tabschema=CURRENT SCHEMA;
   IF PICNT<1 THEN
      SET STR ='ALTER TABLE '||TABLENAME2||' ADD COLUMN SUID1 VARCHAR(64) ';  
      execute immediate str;
    end IF;
   SELECT COUNT(TABNAME) INTO PICNT FROM SYSCAT.COLUMNS WHERE COLNAME='LUID1' AND TABNAME=TABLENAME2 AND tabschema=CURRENT SCHEMA;
   IF PICNT<1 THEN
      SET STR ='ALTER TABLE '||TABLENAME2||' ADD COLUMN LUID1 VARCHAR(64) ';  
      execute immediate str;
    end IF;
  END; 
  FETCH CUR_TABLE INTO TABLENAME2;  
   END WHILE; 
CLOSE CUR_TABLE; 
END&&
CALL "ADDCOL_MTTASK_CUR"&&
CALL DELPROC('ADDCOL_MTTASK_CUR')&&


--(2)当前月份以后的历史表添加字段有默认值
CALL DELPROC('ADDCOL_MTTASK')&&
CREATE PROCEDURE "ADDCOL_MTTASK" ( ) 
BEGIN
DECLARE TABLENAME1 VARCHAR(20);
DECLARE TABLENAME2 VARCHAR(20);
DECLARE STR VARCHAR(256);
DECLARE V_SQL VARCHAR(256);
DECLARE　PICNT　INT　DEFAULT　0; 
DECLARE　PICNT2　INT　DEFAULT　0; 
DECLARE　AT_END　INT　DEFAULT　0; 
DECLARE  NOT_FOUND  CONDITION  FOR  SQLSTATE  '02000';  
DECLARE V_STMT statement;
DECLARE CUR_TABLE  cursor with hold for V_STMT ;
DECLARE　CONTINUE　HANDLER　FOR　NOT_FOUND 
set AT_END=1; 

SET V_SQL ='SELECT TABNAME FROM SYSCAT.TABLES WHERE TABSCHEMA = CURRENT SCHEMA AND  TABNAME LIKE ''MTTASK%'' AND TABNAME>''MTTASK'||CAST((SUBSTR(CHAR(CURRENT TIMESTAMP),1,4)||SUBSTR(CHAR(CURRENT TIMESTAMP),6,2))AS INT)||'''';
prepare V_STMT from V_SQL;

OPEN CUR_TABLE;  
set AT_END=0;
FETCH CUR_TABLE INTO TABLENAME2;  
WHILE AT_END=0 DO
  BEGIN
  --添加字段 
  SELECT COUNT(TABNAME) INTO PICNT FROM SYSCAT.COLUMNS WHERE COLNAME='SUID1' AND TABNAME=TABLENAME2 AND tabschema=CURRENT SCHEMA;
   IF PICNT<1 THEN
      SET STR ='ALTER TABLE '||TABLENAME2||' ADD COLUMN SUID1 VARCHAR(64) NOT NULL DEFAULT ''''';  
      execute immediate str;
    end IF;
   SELECT COUNT(TABNAME) INTO PICNT FROM SYSCAT.COLUMNS WHERE COLNAME='LUID1' AND TABNAME=TABLENAME2 AND tabschema=CURRENT SCHEMA;
   IF PICNT<1 THEN
      SET STR ='ALTER TABLE '||TABLENAME2||' ADD COLUMN LUID1 VARCHAR(64) NOT NULL DEFAULT ''''';  
      execute immediate str;
    end IF;
  END; 
  FETCH CUR_TABLE INTO TABLENAME2;  
   END WHILE; 
CLOSE CUR_TABLE; 
END&&
CALL "ADDCOL_MTTASK"&&
CALL DELPROC('ADDCOL_MTTASK')&&


CALL DELPROC('GW_RD_MTLVLQUEV1')&&
CREATE PROCEDURE "GW_RD_MTLVLQUEV1"
 (IN "PIDESTUID" INTEGER, 
  IN "PISENDLEVEL" INTEGER, 
  IN "PIMAXREADCNT" INTEGER, 
  IN "PISTRUID" VARCHAR(4000), 
  IN "PICURTIME" BIGINT,
  IN P_TABLENO INTEGER
 ) 
  SPECIFIC "GW_RD_MTLVLQUEV1"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  READS SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN  
	DECLARE PISQLSTR VARCHAR(6000);
	DECLARE P_TABNAME VARCHAR(6000);
	DECLARE RS1 CURSOR WITH RETURN FOR S1; 
	
	 IF  P_TABLENO>=0  AND   P_TABLENO<=9 THEN 
	   SET P_TABNAME='MT_LEVEL'||CAST(P_TABLENO AS CHAR(1))||'_QUEUE';
	 ELSE
	   SET P_TABNAME='MT_LEVEL0_QUEUE';
	 END IF;
	 
	SET PISQLSTR = 'SELECT ID,UID,DESTUID,LOGINUID,ECID,TASKID,FEEFLAG,USERID,SPGATE,CPNO,PHONE,PTMSGID,RETFLAG,TPUDHI,PKNUMBER,PKTOTAL,SENDSTATUS,PHONECOUNT,SPLITFLAG,SENDLEVEL,LONGMSGSEQ,MSGFMT,MESSAGE,SENDTIME AS RECVMTTIME,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1 FROM '||P_TABNAME||' WHERE DESTUID='||
		CAST(PIDESTUID AS CHAR(12))||' AND UID NOT IN ('||PISTRUID||')AND SENDLEVEL='||CAST(PISENDLEVEL AS CHAR(12))||' AND (ATTIME<='||CAST(PICURTIME AS CHAR(20))||' OR ATTIME<0) FETCH FIRST '||CAST(PIMAXREADCNT AS CHAR(12))||' ROW ONLY';   
	PREPARE S1 FROM PISQLSTR;
	OPEN RS1;	
END&&

CALL DELPROC('GW_WR_MTLVLQUEV4')&&
CREATE PROCEDURE "GW_WR_MTLVLQUEV4"
 (IN "PIUID" INTEGER, 
  IN "PIPTMSGID" BIGINT, 
  IN "PIRETFLAG" SMALLINT, 
  IN "PIPKTOTAL" SMALLINT, 
  IN "PIPHONECOUNT" INTEGER, 
  IN "PISENDSTATUS" SMALLINT, 
  IN "PISPLITFLAG" SMALLINT, 
  IN "PIECID" INTEGER, 
  IN "PIUSERID" VARCHAR(11), 
  IN "PISPGATE" VARCHAR(21), 
  IN "PICPNO" VARCHAR(21), 
  IN "PIRECVMTTIME" TIMESTAMP, 
  IN "PIPHONE" VARCHAR(3500), 
  IN "PIMESSAGE" VARCHAR(3000), 
  IN "PIFEEFLAG" SMALLINT, 
  IN "PIDESTUID" INTEGER, 
  IN "PILOGINUID" INTEGER, 
  IN "PIPKNUMBER" SMALLINT, 
  IN "PISENDLEVEL" SMALLINT, 
  IN "PITPUDHI" SMALLINT, 
  IN "PITASKID" INTEGER, 
  IN "PILONGMSGSEQ" SMALLINT, 
  IN "PIMSGFMT" SMALLINT, 
  IN "PITOTALCOUNT" INTEGER, 
  IN "PISVRTYPE" VARCHAR(64), 
  IN "PIP1" VARCHAR(64), 
  IN "PIP2" VARCHAR(64), 
  IN "PIP3" VARCHAR(64), 
  IN "PIP4" VARCHAR(64), 
  IN "PIUSERMSGID" BIGINT, 
  IN "PIMODULEID" INTEGER, 
  IN "PIATTIME" BIGINT, 
  IN "PIVALIDTIME" BIGINT,
  IN "PISENDTYPE" INTEGER,
  IN "PIBATCHID" BIGINT,
  IN "PIAREACODE" INTEGER,
  IN "PICUSTID" VARCHAR(64), 
  IN "PIEXDATA" VARCHAR(64),
  IN "PILONGMSG" VARCHAR(4000),
  IN "PITMPLID" BIGINT,
  IN "PICHGRADE" SMALLINT,
  IN "PIMSGTYPE" SMALLINT,
  IN "PIRMSVALIDTM" SMALLINT,
  IN "PIPROTOCOLVER" SMALLINT,
  IN "PITMPLTYPE" SMALLINT,
  IN "PITITLE" VARCHAR(40),
  IN "PISHOWAY" VARCHAR(16),
  IN "PIDLDWAY" INTEGER,
  IN "PIDLDNEY" INTEGER,
  IN "PIISFREE" INTEGER,
  IN "PISHOWTIME" BIGINT,
  IN "PISUID1" VARCHAR(64),
  IN "PILUID1" VARCHAR(64),
  IN P_TABLENO INTEGER
 ) 
  SPECIFIC "GW_WR_MTLVLQUEV4"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN 
	IF P_TABLENO =0 THEN
   IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL0_QUEUE WHERE PTMSGID=PIPTMSGID) THEN
      INSERT INTO MT_LEVEL0_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT, 
      PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,
      TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
      VALUES(PIUID, PIUSERID, PISPGATE, PICPNO, PIPHONE, PIPTMSGID, PIMESSAGE, PIRETFLAG, PIPKTOTAL, PITOTALCOUNT, 
      PIPHONECOUNT,PIRECVMTTIME, PISENDSTATUS, PISPLITFLAG, PIECID, PIFEEFLAG, PIDESTUID,PILOGINUID,PIPKNUMBER,
      PITPUDHI,PISENDLEVEL,PITASKID,PILONGMSGSEQ,PIMSGFMT,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA,PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME,PISUID1,PILUID1); 
   END IF;
ELSEIF P_TABLENO =1 THEN  
   IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL1_QUEUE WHERE PTMSGID=PIPTMSGID) THEN
      INSERT INTO MT_LEVEL1_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT, 
      PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,
      TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
      VALUES(PIUID, PIUSERID, PISPGATE, PICPNO, PIPHONE, PIPTMSGID, PIMESSAGE, PIRETFLAG, PIPKTOTAL, PITOTALCOUNT, 
      PIPHONECOUNT,PIRECVMTTIME, PISENDSTATUS, PISPLITFLAG, PIECID, PIFEEFLAG, PIDESTUID,PILOGINUID,PIPKNUMBER,
      PITPUDHI,PISENDLEVEL,PITASKID,PILONGMSGSEQ,PIMSGFMT,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA,PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME,PISUID1,PILUID1); 
   END IF;
ELSEIF P_TABLENO =2 THEN
   IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL2_QUEUE WHERE PTMSGID=PIPTMSGID) THEN
      INSERT INTO MT_LEVEL2_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT, 
      PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,
      TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
      VALUES(PIUID, PIUSERID, PISPGATE, PICPNO, PIPHONE, PIPTMSGID, PIMESSAGE, PIRETFLAG, PIPKTOTAL, PITOTALCOUNT, 
      PIPHONECOUNT,PIRECVMTTIME, PISENDSTATUS, PISPLITFLAG, PIECID, PIFEEFLAG, PIDESTUID,PILOGINUID,PIPKNUMBER,
      PITPUDHI,PISENDLEVEL,PITASKID,PILONGMSGSEQ,PIMSGFMT,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA,PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME,PISUID1,PILUID1); 
   END IF;
ELSEIF P_TABLENO =3 THEN 
   IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL3_QUEUE WHERE PTMSGID=PIPTMSGID) THEN
      INSERT INTO MT_LEVEL3_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT, 
      PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,
      TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
      VALUES(PIUID, PIUSERID, PISPGATE, PICPNO, PIPHONE, PIPTMSGID, PIMESSAGE, PIRETFLAG, PIPKTOTAL, PITOTALCOUNT, 
      PIPHONECOUNT,PIRECVMTTIME, PISENDSTATUS, PISPLITFLAG, PIECID, PIFEEFLAG, PIDESTUID,PILOGINUID,PIPKNUMBER,
      PITPUDHI,PISENDLEVEL,PITASKID,PILONGMSGSEQ,PIMSGFMT,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA,PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME,PISUID1,PILUID1); 
   END IF;
ELSEIF P_TABLENO =4 THEN
   IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL4_QUEUE WHERE PTMSGID=PIPTMSGID) THEN
      INSERT INTO MT_LEVEL4_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT, 
      PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,
      TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
      VALUES(PIUID, PIUSERID, PISPGATE, PICPNO, PIPHONE, PIPTMSGID, PIMESSAGE, PIRETFLAG, PIPKTOTAL, PITOTALCOUNT, 
      PIPHONECOUNT,PIRECVMTTIME, PISENDSTATUS, PISPLITFLAG, PIECID, PIFEEFLAG, PIDESTUID,PILOGINUID,PIPKNUMBER,
      PITPUDHI,PISENDLEVEL,PITASKID,PILONGMSGSEQ,PIMSGFMT,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA,PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME,PISUID1,PILUID1); 
   END IF;
ELSEIF P_TABLENO =5 THEN
   IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL5_QUEUE WHERE PTMSGID=PIPTMSGID) THEN
      INSERT INTO MT_LEVEL5_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT, 
      PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,
      TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
      VALUES(PIUID, PIUSERID, PISPGATE, PICPNO, PIPHONE, PIPTMSGID, PIMESSAGE, PIRETFLAG, PIPKTOTAL, PITOTALCOUNT, 
      PIPHONECOUNT,PIRECVMTTIME, PISENDSTATUS, PISPLITFLAG, PIECID, PIFEEFLAG, PIDESTUID,PILOGINUID,PIPKNUMBER,
      PITPUDHI,PISENDLEVEL,PITASKID,PILONGMSGSEQ,PIMSGFMT,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA,PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME,PISUID1,PILUID1); 
   END IF;
ELSEIF P_TABLENO =6 THEN
   IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL6_QUEUE WHERE PTMSGID=PIPTMSGID) THEN
      INSERT INTO MT_LEVEL6_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT, 
      PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,
      TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
      VALUES(PIUID, PIUSERID, PISPGATE, PICPNO, PIPHONE, PIPTMSGID, PIMESSAGE, PIRETFLAG, PIPKTOTAL, PITOTALCOUNT, 
      PIPHONECOUNT,PIRECVMTTIME, PISENDSTATUS, PISPLITFLAG, PIECID, PIFEEFLAG, PIDESTUID,PILOGINUID,PIPKNUMBER,
      PITPUDHI,PISENDLEVEL,PITASKID,PILONGMSGSEQ,PIMSGFMT,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA,PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME,PISUID1,PILUID1); 
   END IF;
ELSEIF P_TABLENO =7 THEN
   IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL7_QUEUE WHERE PTMSGID=PIPTMSGID) THEN
      INSERT INTO MT_LEVEL7_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT, 
      PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,
      TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
      VALUES(PIUID, PIUSERID, PISPGATE, PICPNO, PIPHONE, PIPTMSGID, PIMESSAGE, PIRETFLAG, PIPKTOTAL, PITOTALCOUNT, 
      PIPHONECOUNT,PIRECVMTTIME, PISENDSTATUS, PISPLITFLAG, PIECID, PIFEEFLAG, PIDESTUID,PILOGINUID,PIPKNUMBER,
      PITPUDHI,PISENDLEVEL,PITASKID,PILONGMSGSEQ,PIMSGFMT,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA,PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME,PISUID1,PILUID1); 
   END IF;
ELSEIF P_TABLENO =8 THEN
   IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL8_QUEUE WHERE PTMSGID=PIPTMSGID) THEN
      INSERT INTO MT_LEVEL8_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT, 
      PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,
      TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
      VALUES(PIUID, PIUSERID, PISPGATE, PICPNO, PIPHONE, PIPTMSGID, PIMESSAGE, PIRETFLAG, PIPKTOTAL, PITOTALCOUNT, 
      PIPHONECOUNT,PIRECVMTTIME, PISENDSTATUS, PISPLITFLAG, PIECID, PIFEEFLAG, PIDESTUID,PILOGINUID,PIPKNUMBER,
      PITPUDHI,PISENDLEVEL,PITASKID,PILONGMSGSEQ,PIMSGFMT,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA,PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME,PISUID1,PILUID1); 
   END IF;
ELSEIF P_TABLENO =9 THEN
   IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL9_QUEUE WHERE PTMSGID=PIPTMSGID) THEN
      INSERT INTO MT_LEVEL9_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT, 
      PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,
      TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
      VALUES(PIUID, PIUSERID, PISPGATE, PICPNO, PIPHONE, PIPTMSGID, PIMESSAGE, PIRETFLAG, PIPKTOTAL, PITOTALCOUNT, 
      PIPHONECOUNT,PIRECVMTTIME, PISENDSTATUS, PISPLITFLAG, PIECID, PIFEEFLAG, PIDESTUID,PILOGINUID,PIPKNUMBER,
      PITPUDHI,PISENDLEVEL,PITASKID,PILONGMSGSEQ,PIMSGFMT,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA,PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME,PISUID1,PILUID1); 
   END IF;
END IF;
END&&

CALL DELPROC('GW_WR_MTTASKV4')&&
CREATE PROCEDURE "GW_WR_MTTASKV4"
 (IN "PIUID" INTEGER,    
  IN "PIPTMSGID" BIGINT, 
  IN "PISENDSTATUS" SMALLINT, 
  IN "PIRETFLAG" SMALLINT,
  IN "PIPKTOTAL" SMALLINT,
  IN "PIPHONECOUNT" INTEGER, 
  IN "PISPLITLEN" SMALLINT,
  IN "PIMULTILEN1" SMALLINT, 
  IN "PIMULTILEN2" SMALLINT,
  IN "PISIGNLEN" SMALLINT, 
  IN "PIECID" INTEGER,
  IN "PIUSERID" VARCHAR(11),
  IN "PISPGATE" VARCHAR(21),
  IN "PICPNO" VARCHAR(21),
  IN "PIRECVMTTIME" TIMESTAMP, 
  IN "PIMESSAGE" VARCHAR(3000), 
  IN "PISHOUJI" VARCHAR(3500), 
  IN "PIFEEFLAG" SMALLINT,  
  IN "PISENDLEVEL" SMALLINT, 
  IN "PITASKID" INTEGER,  
  IN "PIERCODE" CHARACTER(7), 
  IN "PITPUDHI" SMALLINT, 
  IN "PILONGMSGSEQ" SMALLINT,
  IN "PIMSGFMT" SMALLINT, 
  IN "PIUNICOM" SMALLINT,  
  IN "PIMOBILEAREA" INTEGER, 
  IN "PIPKNUMBER" SMALLINT,
  IN "PISVRTYPE" VARCHAR(64), 
  IN "PIP1" VARCHAR(64), 
  IN "PIP2" VARCHAR(64), 
  IN "PIP3" VARCHAR(64), 
  IN "PIP4" VARCHAR(64), 
  IN "PIUSERMSGID" BIGINT, 
  IN "PIMODULEID" INTEGER, 
  IN "PIATTIME" BIGINT, 
  IN "PIVALIDTIME" BIGINT,
  IN "PISENDTYPE" INTEGER,
  IN "PIBATCHID" BIGINT,
  IN "PIAREACODE" INTEGER,
  IN "PICUSTID" VARCHAR(64), 
  IN "PIEXDATA" VARCHAR(64),
  IN "PILONGMSG" VARCHAR(4000),
  IN "PITMPLID" BIGINT,
  IN "PICHGRADE" SMALLINT,
  IN "PIMSGTYPE" SMALLINT,
  IN "PIRMSVALIDTM" SMALLINT,
  IN "PIRMSRPTFLAG" SMALLINT,
  IN "PIPROTOCOLVER" SMALLINT,
  IN "PITMPLTYPE" SMALLINT,
  IN "PITITLE" VARCHAR(40),
  IN "PISHOWAY" VARCHAR(16),
  IN "PIDLDWAY" INTEGER,
  IN "PIDLDNEY" INTEGER,
  IN "PIISFREE" INTEGER,
  IN "PISHOWTIME" BIGINT,
  IN "PISUID1" VARCHAR(64),
  IN "PILUID1" VARCHAR(64)
 ) 
  SPECIFIC "GW_WR_MTTASKV4"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN

DECLARE PITMPMSGID BIGINT; 
DECLARE PILOCATION INT;
DECLARE PISTART INT;
DECLARE PIRESULTPHONE VARCHAR(21);
DECLARE PISTRSPLIT VARCHAR(2);
DECLARE PILEN INT;      
DECLARE PIRESULTMSG VARCHAR(3000); 
DECLARE PIPKNUM INT; 
DECLARE PITMPNUM INT; 
DECLARE GLOBAL TEMPORARY TABLE SESSION.TMPMTTASK(UID INT,
USERID VARCHAR(11),SPGATE VARCHAR(21),CPNO VARCHAR(21), 
PHONE VARCHAR(21),PTMSGID BIGINT ,MESSAGE VARCHAR(3000),
SENDSTATUS SMALLINT,RETFLAG SMALLINT,PKNUMBER SMALLINT,
PKTOTAL SMALLINT,RECVMTTIME TIMESTAMP,ECID INT,
FEEFLAG SMALLINT,SENDLEVEL SMALLINT,TASKID INT,ERRORCODE CHAR(7),
TPUDHI SMALLINT,LONGMSGSEQ SMALLINT,MSGFMT SMALLINT,UNICOM SMALLINT,MOBILEAREA INT,
SVRTYPE VARCHAR(64),P1 VARCHAR(64),P2 VARCHAR(64),P3 VARCHAR(64),
P4 VARCHAR(64),USERMSGID BIGINT,MODULEID INT,ATTIME BIGINT,VALIDTIME BIGINT,SENDTYPE INTEGER,AREACODE INTEGER,CUSTID VARCHAR(64),EXDATA VARCHAR(64),LONGMSG VARCHAR(4000),TMPLID BIGINT,CHGRADE SMALLINT,MSGTYPE SMALLINT,RMSVALIDTM SMALLINT,RMSRPTFLAG SMALLINT,PROTOCOLVER SMALLINT,TMPLTYPE SMALLINT,TITLE VARCHAR(40),SHOWAY VARCHAR(16),DLDWAY INTEGER,DLDNEY INTEGER,ISFREE INTEGER,SHOWTIME BIGINT,SUID1 VARCHAR(64),LUID1 VARCHAR(64)) ON COMMIT DELETE ROWS NOT LOGGED WITH REPLACE;  

SET PILEN = LENGTH(PILONGMSG, CODEUNITS32)-PISIGNLEN;  
SET PITMPNUM = 0; 
SET PIPKNUM = 1; 
SET PISTRSPLIT = ',';

IF PIPHONECOUNT < 1 THEN
	RETURN;
END IF; 

IF PIMSGFMT=4 OR PIMSGFMT=248 OR PIMSGFMT=246 THEN
	SET PISPLITLEN=140;
	SET PIMULTILEN1=134;
	SET PIMULTILEN2=134;
	SET PISIGNLEN=0;
END IF;

IF PIMSGFMT=25  THEN
		IF NOT EXISTS (SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID=PIPTMSGID) THEN
		   INSERT INTO GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
		   RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,
		   TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
		   VALUES(PIUID,PIUSERID,PISPGATE,PICPNO,PISHOUJI,PIPTMSGID,PIMESSAGE,PISENDSTATUS,PIRETFLAG,PIPKNUMBER,PIPKTOTAL,
		   PIRECVMTTIME,PIECID,PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,
		   PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA,PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIRMSRPTFLAG,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME,PISUID1,PILUID1);
		END IF;
		RETURN;
END IF;

IF PIPHONECOUNT = 1 
THEN
	IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PIPTMSGID)
	THEN
		IF PIPKTOTAL = 1
		THEN
			INSERT INTO GW_MT_TASK_BAK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, 
			SENDSTATUS, RETFLAG, PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,
			TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,
			SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
			VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PISHOUJI, PIPTMSGID, PIMESSAGE, 
			PISENDSTATUS, PIRETFLAG, PIPKNUMBER, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,
			PITASKID,PIERCODE,PITPUDHI,PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,
			PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA,PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIRMSRPTFLAG,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME,PISUID1,PILUID1);
		ELSE
			SET PIPKNUM = 1;
			SET PITMPMSGID = PIPTMSGID;
			IF PIPKTOTAL = 2 AND PILEN <= PIMULTILEN1
			THEN
				SET PIRESULTMSG = SUBSTRING(PIMESSAGE,1,PISPLITLEN, CODEUNITS32);
				SET PITMPMSGID = PITMPMSGID;
				IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PIPTMSGID)
				THEN
					INSERT INTO SESSION.TMPMTTASK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, 
					RETFLAG, PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,
					MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
					VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PISHOUJI, PITMPMSGID, PIRESULTMSG, PISENDSTATUS, 
					PIRETFLAG, PIPKNUM, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,
					PITPUDHI,PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIAREACODE,PICUSTID,PIEXDATA,PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIRMSRPTFLAG,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME,PISUID1,PILUID1);
				END IF;--END OF IF NOT EXISTS(SELECT PTMSGID FROM MT_TASK WHERE PTMSGID = PIPTMSGID)
				IF  PILEN-PISPLITLEN+PISIGNLEN>=0 
				  THEN
				    SET PIRESULTMSG = SUBSTRING(PIMESSAGE,PISPLITLEN+1, PILEN-PISPLITLEN+PISIGNLEN, CODEUNITS32);
				  ELSE
				    SET PIRESULTMSG = SUBSTRING(PIMESSAGE,PISPLITLEN+1, 0, CODEUNITS32);
				END IF;
				SET PITMPMSGID = PITMPMSGID+17179869184;
				SET PIPKNUM = PIPKNUM+1;
				IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PIPTMSGID)
				THEN
					INSERT INTO SESSION.TMPMTTASK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, 
					RETFLAG, PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,
					MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
					VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PISHOUJI, PITMPMSGID, PIRESULTMSG, PISENDSTATUS, 
					PIRETFLAG, PIPKNUM, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,
					PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIAREACODE,PICUSTID,PIEXDATA,PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIRMSRPTFLAG,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME,PISUID1,PILUID1);
				END IF;--END OF IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PIPTMSGID)
			ELSE
				WHILE PIPKNUM <= PIPKTOTAL
				DO
					IF PIPKNUM = PIPKTOTAL
					THEN
						SET PIRESULTMSG = SUBSTRING(PIMESSAGE,PITMPNUM+1, PIMULTILEN2+PISIGNLEN, CODEUNITS32);
						SET PITMPMSGID = PIPTMSGID+(PIPKNUM-1)*17179869184;
					ELSEIF PIPKNUM = PIPKTOTAL-1
					THEN
						IF PILEN-(PIPKNUM-1)*PIMULTILEN1 > PIMULTILEN2 AND PILEN-(PIPKNUM-1)*PIMULTILEN1 <= PIMULTILEN1
						THEN
						    IF  PILEN-(PIPKNUM-1)*PIMULTILEN1-1 >=0 THEN
							   SET PIRESULTMSG = SUBSTRING(PIMESSAGE,(PIPKNUM-1)*PIMULTILEN1+1, PILEN-(PIPKNUM-1)*PIMULTILEN1-1, CODEUNITS32);
							ELSE
							   SET PIRESULTMSG = SUBSTRING(PIMESSAGE,(PIPKNUM-1)*PIMULTILEN1+1, 0, CODEUNITS32);
							END IF;
							SET PITMPNUM = PILEN-1;
						ELSE
							SET PIRESULTMSG = SUBSTRING(PIMESSAGE,(PIPKNUM-1)*PIMULTILEN1+1, PIMULTILEN1, CODEUNITS32);
							SET PITMPNUM = (PIPKNUM-1)*PIMULTILEN1+PIMULTILEN1;
						END IF;--END IF OF IF PILEN-(PIPKNUM-1)*PIMULTILEN1 > PIMULTILEN2 AND PILEN-(PIPKNUM-1)*PIMULTILEN1 <= PIMULTILEN1;
						SET PITMPMSGID = PIPTMSGID+(PIPKNUM-1)*17179869184;
					ELSE
						SET PIRESULTMSG = SUBSTRING(PIMESSAGE,(PIPKNUM-1)*PIMULTILEN1+1, PIMULTILEN1, CODEUNITS32);
						SET PITMPMSGID = PIPTMSGID+(PIPKNUM-1)*17179869184;
					END IF;--END IF OF IF PIPKNUM = PIPKTOTAL
					IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PITMPMSGID)
					THEN
						INSERT INTO SESSION.TMPMTTASK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, 
						RETFLAG, PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,
						MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
						VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PISHOUJI, PITMPMSGID, PIRESULTMSG, PISENDSTATUS, 
						PIRETFLAG, PIPKNUM, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,
						PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIAREACODE,PICUSTID,PIEXDATA,PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIRMSRPTFLAG,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME,PISUID1,PILUID1);
					END IF;--END IF OF IF NOT EXISTS(SELECT PTMSGID FROM MT_TASK WHERE PTMSGID = PITMPMSGID)
					SET PIPKNUM = PIPKNUM+1;
				END WHILE;--END WHILE OF WHILE PIPKNUM <= PIPKTOTAL
			END IF;--END IF OF IF PIPKTOTAL = 2 AND PILEN <= PIMULTILEN1;

			INSERT INTO GW_MT_TASK_BAK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, 
			RETFLAG, PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,
			LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1) 
			SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,
			A.PKNUMBER,A.PKTOTAL,A.RECVMTTIME, A.ECID, A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,
			A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME,A.SENDTYPE,PIBATCHID,A.AREACODE,A.CUSTID,A.EXDATA,A.LONGMSG,A.TMPLID,A.CHGRADE,A.MSGTYPE,A.RMSVALIDTM,A.RMSRPTFLAG,A.PROTOCOLVER,A.TMPLTYPE,A.TITLE,A.SHOWAY,A.DLDWAY,A.DLDNEY,A.ISFREE,A.SHOWTIME,A.SUID1,A.LUID1 FROM SESSION.TMPMTTASK A;
		END IF;--END IF OF IF PIPKTOTAL = 1
	END IF; --END IF OF IF NOT EXISTS(SELECT PTMSGID FROM MT_TASK WHERE PTMSGID = PIPTMSGID)
ELSE --
	SET PISHOUJI = PISTRSPLIT||PISHOUJI||PISTRSPLIT;
	SET PILOCATION = LOCATE(PISTRSPLIT,PISHOUJI, CODEUNITS32);

	IF PIPKTOTAL < 1 --
	THEN	
		RETURN;
	END IF;

	IF PIPKTOTAL >= 1 --
	THEN
		WHILE PILOCATION <> 0 --
		DO
			SET PISTART = PILOCATION;
			SET PILOCATION = LOCATE(PISTRSPLIT,PISHOUJI,PISTART+1, CODEUNITS32);
			IF PILOCATION > 0
			THEN
				SET PIRESULTPHONE = SUBSTRING(PISHOUJI,PISTART+1,PILOCATION-PISTART-1, CODEUNITS32);--
				IF PIRESULTPHONE <> ''
				THEN
					SET PITMPMSGID = PIPTMSGID;
					IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PITMPMSGID)
					THEN
						IF PIPKTOTAL = 1
						THEN
							INSERT INTO SESSION.TMPMTTASK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS,
							RETFLAG, PKNUMBER, PKTOTAL, RECVMTTIME,ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,
							MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
							VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PIRESULTPHONE, PITMPMSGID, PIMESSAGE, PISENDSTATUS, 
							PIRETFLAG, PIPKTOTAL, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,
							PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIAREACODE,PICUSTID,PIEXDATA,PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIRMSRPTFLAG,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME,PISUID1,PILUID1);
						ELSE
							SET PIPKNUM = 1;
							IF PIPKTOTAL = 2 AND PILEN <= PIMULTILEN1
							THEN
								SET PIRESULTMSG = SUBSTRING(PIMESSAGE,1, PISPLITLEN, CODEUNITS32);--
								SET PITMPMSGID = PITMPMSGID;
								IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PITMPMSGID)
								THEN 
									INSERT INTO SESSION.TMPMTTASK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG,
									PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,
									UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
									VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PIRESULTPHONE, PITMPMSGID, PIRESULTMSG, PISENDSTATUS, 
									PIRETFLAG, PIPKNUM, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,
									PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIAREACODE,PICUSTID,PIEXDATA,PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIRMSRPTFLAG,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME,PISUID1,PILUID1);
								END IF; --END IF OF IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PITMPMSGID)
								IF PILEN-PISPLITLEN+PISIGNLEN>=0 THEN
								  SET PIRESULTMSG = SUBSTRING(PIMESSAGE,PISPLITLEN+1, PILEN-PISPLITLEN+PISIGNLEN, CODEUNITS32);
								ELSE
								  SET PIRESULTMSG = SUBSTRING(PIMESSAGE,PISPLITLEN+1, 0, CODEUNITS32);
								END IF;
								SET PITMPMSGID = PITMPMSGID+17179869184;
								SET PIPKNUM = PIPKNUM+1;
								IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PITMPMSGID)
								THEN
									INSERT INTO SESSION.TMPMTTASK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG,
									PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,
									UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
									VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PIRESULTPHONE, PITMPMSGID, PIRESULTMSG, PISENDSTATUS, PIRETFLAG,
									PIPKNUM, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,PILONGMSGSEQ,
									PIMSGFMT,PIUNICOM,PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIAREACODE,PICUSTID,PIEXDATA,PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIRMSRPTFLAG,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME,PISUID1,PILUID1);
								END IF; --END IF OF IF NOT EXISTS(SELECT PTMSGID FROM MT_TASK WHERE PTMSGID = PITMPMSGID)
							ELSE
								WHILE PIPKNUM <= PIPKTOTAL
								DO 
									IF PIPKNUM = PIPKTOTAL
									THEN
										SET PIRESULTMSG = SUBSTRING(PIMESSAGE,PITMPNUM+1, PIMULTILEN2+PISIGNLEN, CODEUNITS32);
										SET PITMPMSGID = PIPTMSGID+(PIPKNUM-1)*17179869184;
									ELSEIF PIPKNUM = PIPKTOTAL-1 
									THEN
										IF PILEN-(PIPKNUM-1)*PIMULTILEN1 > PIMULTILEN2 AND PILEN-(PIPKNUM-1)*PIMULTILEN1 <= PIMULTILEN1
										THEN
											SET PIRESULTMSG = SUBSTRING(PIMESSAGE,(PIPKNUM-1)*PIMULTILEN1+1, PILEN-(PIPKNUM-1)*PIMULTILEN1-1, CODEUNITS32);
											SET PITMPNUM = PILEN-1;
										ELSE
											SET PIRESULTMSG = SUBSTRING(PIMESSAGE,(PIPKNUM-1)*PIMULTILEN1+1, PIMULTILEN1, CODEUNITS32);
											SET PITMPNUM = (PIPKNUM-1)*PIMULTILEN1+PIMULTILEN1;
										END IF; --END IF OF PILEN-(PIPKNUM-1)*PIMULTILEN1 > PIMULTILEN2 AND PILEN-(PIPKNUM-1)*PIMULTILEN1 <= PIMULTILEN1
										SET PITMPMSGID = PIPTMSGID+(PIPKNUM-1)*17179869184;
									ELSE
										SET PIRESULTMSG = SUBSTRING(PIMESSAGE,(PIPKNUM-1)*PIMULTILEN1+1, PIMULTILEN1, CODEUNITS32);
										SET PITMPMSGID = PIPTMSGID+(PIPKNUM-1)*17179869184;
									END IF; --END IF OF IF PIPKNUM = PIPKTOTAL
									IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PITMPMSGID)
									THEN
										INSERT INTO SESSION.TMPMTTASK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG, 
										PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,
										UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
										VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PIRESULTPHONE, PITMPMSGID, PIRESULTMSG, PISENDSTATUS, PIRETFLAG, 
										PIPKNUM, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,PILONGMSGSEQ,
										PIMSGFMT,PIUNICOM,PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIAREACODE,PICUSTID,PIEXDATA,PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIRMSRPTFLAG,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME,PISUID1,PILUID1);
									END IF;--END IF OF IF NOT EXISTS(SELECT PTMSGID FROM MT_TASK WHERE PTMSGID = PITMPMSGID)
									SET PIPKNUM = PIPKNUM+1;
								END WHILE;-- END WHILE OF WHILE PIPKNUM <= PIPKTOTAL
							END IF;--END IF OF IF PIPKTOTAL = 2 AND PILEN <= PIMULTILEN1
						END	IF;--END IF OF IF PIPKTOTAL = 1								
					END IF; --END IF OF IF NOT EXISTS(SELECT PTMSGID FROM MT_TASK WHERE PTMSGID = PITMPMSGID)
				END IF; --END IF OF IF PIRESULTPHONE <> ''
				SET PIPTMSGID = PIPTMSGID+1;
			END	IF; --END IF OF IF PILOCATION > 0			
		END WHILE; --END WHILE OF WHILE PILOCATION <> 0
		
		INSERT INTO GW_MT_TASK_BAK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG, 
		PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,
		UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
		SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,A.PKNUMBER,
		A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,
		A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME,A.SENDTYPE,PIBATCHID,A.AREACODE,A.CUSTID,A.EXDATA,A.LONGMSG,A.TMPLID,A.CHGRADE,A.MSGTYPE,A.RMSVALIDTM,A.RMSRPTFLAG,A.PROTOCOLVER,A.TMPLTYPE,A.TITLE,A.SHOWAY,A.DLDWAY,A.DLDNEY,A.ISFREE,A.SHOWTIME,A.SUID1,A.LUID1 FROM SESSION.TMPMTTASK A;
	END IF; --END IF OF IF PIPKTOTAL >= 1
END IF; --END IF OF IF PIPHONECOUNT = 1 --
END&&

CALL DELPROC('GW_WR_MTTASKV5')&&
CREATE PROCEDURE "GW_WR_MTTASKV5"
 (IN "PIUID" INTEGER,    
  IN "PIPTMSGID" BIGINT, 
  IN "PISENDSTATUS" SMALLINT, 
  IN "PIRETFLAG" SMALLINT,
  IN "PIPKTOTAL" SMALLINT,
  IN "PIPHONECOUNT" INTEGER, 
  IN "PISPLITLEN" SMALLINT,
  IN "PIMULTILEN1" SMALLINT, 
  IN "PIMULTILEN2" SMALLINT,
  IN "PISIGNLEN" SMALLINT, 
  IN "PIECID" INTEGER,
  IN "PIUSERID" VARCHAR(11),
  IN "PISPGATE" VARCHAR(21),
  IN "PICPNO" VARCHAR(21),
  IN "PIRECVMTTIME" TIMESTAMP, 
  IN "PIMESSAGE" VARCHAR(3000), 
  IN "PISHOUJI" VARCHAR(3500), 
  IN "PIFEEFLAG" SMALLINT,  
  IN "PISENDLEVEL" SMALLINT, 
  IN "PITASKID" INTEGER,  
  IN "PIERCODE" CHARACTER(7), 
  IN "PITPUDHI" SMALLINT, 
  IN "PILONGMSGSEQ" SMALLINT,
  IN "PIMSGFMT" SMALLINT, 
  IN "PIUNICOM" SMALLINT,  
  IN "PIMOBILEAREA" INTEGER, 
  IN "PIPKNUMBER" SMALLINT,
  IN "PISVRTYPE" VARCHAR(64), 
  IN "PIP1" VARCHAR(64), 
  IN "PIP2" VARCHAR(64), 
  IN "PIP3" VARCHAR(64), 
  IN "PIP4" VARCHAR(64), 
  IN "PIUSERMSGID" BIGINT, 
  IN "PIMODULEID" INTEGER, 
  IN "PIATTIME" BIGINT, 
  IN "PIVALIDTIME" BIGINT,
  IN "PISENDTYPE" INTEGER,
  IN "PIBATCHID" BIGINT,
  IN "PIAREACODE" INTEGER,
  IN "PICUSTID" VARCHAR(64), 
  IN "PIEXDATA" VARCHAR(64),
  IN "PISUID1" VARCHAR(64),
  IN "PILUID1" VARCHAR(64)
 ) 
  SPECIFIC "GW_WR_MTTASKV5"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN

DECLARE PITMPMSGID BIGINT; 
DECLARE PILOCATION INT;
DECLARE PISTART INT;
DECLARE PIRESULTPHONE VARCHAR(21);
DECLARE PISTRSPLIT VARCHAR(2);
DECLARE PILEN INT;      
DECLARE PIRESULTMSG VARCHAR(3000); 
DECLARE PIPKNUM INT; 
DECLARE PITMPNUM INT; 
DECLARE GLOBAL TEMPORARY TABLE SESSION.TMPMTTASK(UID INT,
USERID VARCHAR(11),SPGATE VARCHAR(21),CPNO VARCHAR(21), 
PHONE VARCHAR(21),PTMSGID BIGINT ,MESSAGE VARCHAR(3000),
SENDSTATUS SMALLINT,RETFLAG SMALLINT,PKNUMBER SMALLINT,
PKTOTAL SMALLINT,RECVMTTIME TIMESTAMP,ECID INT,
FEEFLAG SMALLINT,SENDLEVEL SMALLINT,TASKID INT,ERRORCODE CHAR(7),
TPUDHI SMALLINT,LONGMSGSEQ SMALLINT,MSGFMT SMALLINT,UNICOM SMALLINT,MOBILEAREA INT,
SVRTYPE VARCHAR(64),P1 VARCHAR(64),P2 VARCHAR(64),P3 VARCHAR(64),
P4 VARCHAR(64),USERMSGID BIGINT,MODULEID INT,ATTIME BIGINT,VALIDTIME BIGINT,SENDTYPE INTEGER,AREACODE INTEGER,CUSTID VARCHAR(64),EXDATA VARCHAR(64),SUID1 VARCHAR(64),LUID1 VARCHAR(64)) ON COMMIT DELETE ROWS NOT LOGGED WITH REPLACE;  

SET PILEN = LENGTH(PIMESSAGE, CODEUNITS32)-PISIGNLEN;  
SET PITMPNUM = 0; 
SET PIPKNUM = 1; 
SET PISTRSPLIT = ',';

IF PIPHONECOUNT < 1 THEN
	RETURN;
END IF; 

IF PIMSGFMT=4 OR PIMSGFMT=248 OR PIMSGFMT=246 THEN
	SET PISPLITLEN=140;
	SET PIMULTILEN1=134;
	SET PIMULTILEN2=134;
	SET PISIGNLEN=0;
END IF;

IF PIMSGFMT=25  THEN
		IF NOT EXISTS (SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID=PIPTMSGID) THEN
		   INSERT INTO GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
		   RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,
		   TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
		   VALUES(PIUID,PIUSERID,PISPGATE,PICPNO,PISHOUJI,PIPTMSGID,PIMESSAGE,PISENDSTATUS,PIRETFLAG,PIPKNUMBER,PIPKTOTAL,
		   PIRECVMTTIME,PIECID,PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,
		   PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA,PISUID1,PILUID1);
		END IF;
		RETURN;
END IF;

IF PIPHONECOUNT = 1 
THEN
	IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PIPTMSGID)
	THEN
		IF PIPKTOTAL = 1
		THEN
			INSERT INTO GW_MT_TASK_BAK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, 
			SENDSTATUS, RETFLAG, PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,
			TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,
			SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
			VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PISHOUJI, PIPTMSGID, PIMESSAGE, 
			PISENDSTATUS, PIRETFLAG, PIPKNUMBER, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,
			PITASKID,PIERCODE,PITPUDHI,PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,
			PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA,PISUID1,PILUID1);
		ELSE
			SET PIPKNUM = 1;
			SET PITMPMSGID = PIPTMSGID;
			IF PIPKTOTAL = 2 AND PILEN <= PIMULTILEN1
			THEN
				SET PIRESULTMSG = SUBSTRING(PIMESSAGE,1,PISPLITLEN, CODEUNITS32);
				SET PITMPMSGID = PITMPMSGID;
				IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PIPTMSGID)
				THEN
					INSERT INTO SESSION.TMPMTTASK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, 
					RETFLAG, PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,
					MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
					VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PISHOUJI, PITMPMSGID, PIRESULTMSG, PISENDSTATUS, 
					PIRETFLAG, PIPKNUM, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,
					PITPUDHI,PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIAREACODE,PICUSTID,PIEXDATA,PISUID1,PILUID1);
				END IF;--END OF IF NOT EXISTS(SELECT PTMSGID FROM MT_TASK WHERE PTMSGID = PIPTMSGID)
				IF  PILEN-PISPLITLEN+PISIGNLEN>=0 
				  THEN
				    SET PIRESULTMSG = SUBSTRING(PIMESSAGE,PISPLITLEN+1, PILEN-PISPLITLEN+PISIGNLEN, CODEUNITS32);
				  ELSE
				    SET PIRESULTMSG = SUBSTRING(PIMESSAGE,PISPLITLEN+1, 0, CODEUNITS32);
				END IF;
				SET PITMPMSGID = PITMPMSGID+17179869184;
				SET PIPKNUM = PIPKNUM+1;
				IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PIPTMSGID)
				THEN
					INSERT INTO SESSION.TMPMTTASK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, 
					RETFLAG, PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,
					MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
					VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PISHOUJI, PITMPMSGID, PIRESULTMSG, PISENDSTATUS, 
					PIRETFLAG, PIPKNUM, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,
					PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIAREACODE,PICUSTID,PIEXDATA,PISUID1,PILUID1);
				END IF;--END OF IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PIPTMSGID)
			ELSE
				WHILE PIPKNUM <= PIPKTOTAL
				DO
					IF PIPKNUM = PIPKTOTAL
					THEN
						SET PIRESULTMSG = SUBSTRING(PIMESSAGE,PITMPNUM+1, PIMULTILEN2+PISIGNLEN, CODEUNITS32);
						SET PITMPMSGID = PIPTMSGID+(PIPKNUM-1)*17179869184;
					ELSEIF PIPKNUM = PIPKTOTAL-1
					THEN
						IF PILEN-(PIPKNUM-1)*PIMULTILEN1 > PIMULTILEN2 AND PILEN-(PIPKNUM-1)*PIMULTILEN1 <= PIMULTILEN1
						THEN
						    IF  PILEN-(PIPKNUM-1)*PIMULTILEN1-1 >=0 THEN
							   SET PIRESULTMSG = SUBSTRING(PIMESSAGE,(PIPKNUM-1)*PIMULTILEN1+1, PILEN-(PIPKNUM-1)*PIMULTILEN1-1, CODEUNITS32);
							ELSE
							   SET PIRESULTMSG = SUBSTRING(PIMESSAGE,(PIPKNUM-1)*PIMULTILEN1+1, 0, CODEUNITS32);
							END IF;
							SET PITMPNUM = PILEN-1;
						ELSE
							SET PIRESULTMSG = SUBSTRING(PIMESSAGE,(PIPKNUM-1)*PIMULTILEN1+1, PIMULTILEN1, CODEUNITS32);
							SET PITMPNUM = (PIPKNUM-1)*PIMULTILEN1+PIMULTILEN1;
						END IF;--END IF OF IF PILEN-(PIPKNUM-1)*PIMULTILEN1 > PIMULTILEN2 AND PILEN-(PIPKNUM-1)*PIMULTILEN1 <= PIMULTILEN1;
						SET PITMPMSGID = PIPTMSGID+(PIPKNUM-1)*17179869184;
					ELSE
						SET PIRESULTMSG = SUBSTRING(PIMESSAGE,(PIPKNUM-1)*PIMULTILEN1+1, PIMULTILEN1, CODEUNITS32);
						SET PITMPMSGID = PIPTMSGID+(PIPKNUM-1)*17179869184;
					END IF;--END IF OF IF PIPKNUM = PIPKTOTAL
					IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PITMPMSGID)
					THEN
						INSERT INTO SESSION.TMPMTTASK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, 
						RETFLAG, PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,
						MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
						VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PISHOUJI, PITMPMSGID, PIRESULTMSG, PISENDSTATUS, 
						PIRETFLAG, PIPKNUM, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,
						PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIAREACODE,PICUSTID,PIEXDATA,PISUID1,PILUID1);
					END IF;--END IF OF IF NOT EXISTS(SELECT PTMSGID FROM MT_TASK WHERE PTMSGID = PITMPMSGID)
					SET PIPKNUM = PIPKNUM+1;
				END WHILE;--END WHILE OF WHILE PIPKNUM <= PIPKTOTAL
			END IF;--END IF OF IF PIPKTOTAL = 2 AND PILEN <= PIMULTILEN1;

			INSERT INTO GW_MT_TASK_BAK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, 
			RETFLAG, PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,
			LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1) 
			SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,
			A.PKNUMBER,A.PKTOTAL,A.RECVMTTIME, A.ECID, A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,
			A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME,A.SENDTYPE,PIBATCHID,A.AREACODE,A.CUSTID,A.EXDATA,A.SUID1,A.LUID1 FROM SESSION.TMPMTTASK A;
		END IF;--END IF OF IF PIPKTOTAL = 1
	END IF; --END IF OF IF NOT EXISTS(SELECT PTMSGID FROM MT_TASK WHERE PTMSGID = PIPTMSGID)
ELSE --
	SET PISHOUJI = PISTRSPLIT||PISHOUJI||PISTRSPLIT;
	SET PILOCATION = LOCATE(PISTRSPLIT,PISHOUJI, CODEUNITS32);

	IF PIPKTOTAL < 1 --
	THEN	
		RETURN;
	END IF;

	IF PIPKTOTAL >= 1 --
	THEN
		WHILE PILOCATION <> 0 --
		DO
			SET PISTART = PILOCATION;
			SET PILOCATION = LOCATE(PISTRSPLIT,PISHOUJI,PISTART+1, CODEUNITS32);
			IF PILOCATION > 0
			THEN
				SET PIRESULTPHONE = SUBSTRING(PISHOUJI,PISTART+1,PILOCATION-PISTART-1, CODEUNITS32);--
				IF PIRESULTPHONE <> ''
				THEN
					SET PITMPMSGID = PIPTMSGID;
					IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PITMPMSGID)
					THEN
						IF PIPKTOTAL = 1
						THEN
							INSERT INTO SESSION.TMPMTTASK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS,
							RETFLAG, PKNUMBER, PKTOTAL, RECVMTTIME,ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,
							MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
							VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PIRESULTPHONE, PITMPMSGID, PIMESSAGE, PISENDSTATUS, 
							PIRETFLAG, PIPKTOTAL, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,
							PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIAREACODE,PICUSTID,PIEXDATA,PISUID1,PILUID1);
						ELSE
							SET PIPKNUM = 1;
							IF PIPKTOTAL = 2 AND PILEN <= PIMULTILEN1
							THEN
								SET PIRESULTMSG = SUBSTRING(PIMESSAGE,1, PISPLITLEN, CODEUNITS32);--
								SET PITMPMSGID = PITMPMSGID;
								IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PITMPMSGID)
								THEN 
									INSERT INTO SESSION.TMPMTTASK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG,
									PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,
									UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
									VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PIRESULTPHONE, PITMPMSGID, PIRESULTMSG, PISENDSTATUS, 
									PIRETFLAG, PIPKNUM, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,
									PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIAREACODE,PICUSTID,PIEXDATA,PISUID1,PILUID1);
								END IF; --END IF OF IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PITMPMSGID)
								IF PILEN-PISPLITLEN+PISIGNLEN>=0 THEN
								  SET PIRESULTMSG = SUBSTRING(PIMESSAGE,PISPLITLEN+1, PILEN-PISPLITLEN+PISIGNLEN, CODEUNITS32);
								ELSE
								  SET PIRESULTMSG = SUBSTRING(PIMESSAGE,PISPLITLEN+1, 0, CODEUNITS32);
								END IF;
								SET PITMPMSGID = PITMPMSGID+17179869184;
								SET PIPKNUM = PIPKNUM+1;
								IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PITMPMSGID)
								THEN
									INSERT INTO SESSION.TMPMTTASK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG,
									PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,
									UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
									VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PIRESULTPHONE, PITMPMSGID, PIRESULTMSG, PISENDSTATUS, PIRETFLAG,
									PIPKNUM, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,PILONGMSGSEQ,
									PIMSGFMT,PIUNICOM,PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIAREACODE,PICUSTID,PIEXDATA,PISUID1,PILUID1);
								END IF; --END IF OF IF NOT EXISTS(SELECT PTMSGID FROM MT_TASK WHERE PTMSGID = PITMPMSGID)
							ELSE
								WHILE PIPKNUM <= PIPKTOTAL
								DO 
									IF PIPKNUM = PIPKTOTAL
									THEN
										SET PIRESULTMSG = SUBSTRING(PIMESSAGE,PITMPNUM+1, PIMULTILEN2+PISIGNLEN, CODEUNITS32);
										SET PITMPMSGID = PIPTMSGID+(PIPKNUM-1)*17179869184;
									ELSEIF PIPKNUM = PIPKTOTAL-1 
									THEN
										IF PILEN-(PIPKNUM-1)*PIMULTILEN1 > PIMULTILEN2 AND PILEN-(PIPKNUM-1)*PIMULTILEN1 <= PIMULTILEN1
										THEN
											SET PIRESULTMSG = SUBSTRING(PIMESSAGE,(PIPKNUM-1)*PIMULTILEN1+1, PILEN-(PIPKNUM-1)*PIMULTILEN1-1, CODEUNITS32);
											SET PITMPNUM = PILEN-1;
										ELSE
											SET PIRESULTMSG = SUBSTRING(PIMESSAGE,(PIPKNUM-1)*PIMULTILEN1+1, PIMULTILEN1, CODEUNITS32);
											SET PITMPNUM = (PIPKNUM-1)*PIMULTILEN1+PIMULTILEN1;
										END IF; --END IF OF PILEN-(PIPKNUM-1)*PIMULTILEN1 > PIMULTILEN2 AND PILEN-(PIPKNUM-1)*PIMULTILEN1 <= PIMULTILEN1
										SET PITMPMSGID = PIPTMSGID+(PIPKNUM-1)*17179869184;
									ELSE
										SET PIRESULTMSG = SUBSTRING(PIMESSAGE,(PIPKNUM-1)*PIMULTILEN1+1, PIMULTILEN1, CODEUNITS32);
										SET PITMPMSGID = PIPTMSGID+(PIPKNUM-1)*17179869184;
									END IF; --END IF OF IF PIPKNUM = PIPKTOTAL
									IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PITMPMSGID)
									THEN
										INSERT INTO SESSION.TMPMTTASK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG, 
										PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,
										UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
										VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PIRESULTPHONE, PITMPMSGID, PIRESULTMSG, PISENDSTATUS, PIRETFLAG, 
										PIPKNUM, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,PILONGMSGSEQ,
										PIMSGFMT,PIUNICOM,PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIAREACODE,PICUSTID,PIEXDATA,PISUID1,PILUID1);
									END IF;--END IF OF IF NOT EXISTS(SELECT PTMSGID FROM MT_TASK WHERE PTMSGID = PITMPMSGID)
									SET PIPKNUM = PIPKNUM+1;
								END WHILE;-- END WHILE OF WHILE PIPKNUM <= PIPKTOTAL
							END IF;--END IF OF IF PIPKTOTAL = 2 AND PILEN <= PIMULTILEN1
						END	IF;--END IF OF IF PIPKTOTAL = 1								
					END IF; --END IF OF IF NOT EXISTS(SELECT PTMSGID FROM MT_TASK WHERE PTMSGID = PITMPMSGID)
				END IF; --END IF OF IF PIRESULTPHONE <> ''
				SET PIPTMSGID = PIPTMSGID+1;
			END	IF; --END IF OF IF PILOCATION > 0			
		END WHILE; --END WHILE OF WHILE PILOCATION <> 0
		
		INSERT INTO GW_MT_TASK_BAK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG, 
		PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,
		UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
		SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,A.PKNUMBER,
		A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,
		A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME,A.SENDTYPE,PIBATCHID,A.AREACODE,A.CUSTID,A.EXDATA,A.SUID1,A.LUID1 FROM SESSION.TMPMTTASK A;
	END IF; --END IF OF IF PIPKTOTAL >= 1
END IF; --END IF OF IF PIPHONECOUNT = 1 --
END&&


CALL DELPROC('GW_WR_MTTASKSRV4')&&
CREATE PROCEDURE "GW_WR_MTTASKSRV4"
 (IN "PIUID" INTEGER, 
  IN "PIPTMSGID" BIGINT, 
  IN "PISENDSTATUS" SMALLINT, 
  IN "PIRETFLAG" SMALLINT, 
  IN "PIPKTOTAL" SMALLINT, 
  IN "PIPHONECOUNT" INTEGER, 
  IN "PIECID" INTEGER, 
  IN "PIUSERID" VARCHAR(11), 
  IN "PISPGATE" VARCHAR(21), 
  IN "PICPNO" VARCHAR(21), 
  IN "PIRECVMTTIME" TIMESTAMP, 
  IN "PIMESSAGE" VARCHAR(3000), 
  IN "PISHOUJI" VARCHAR(3500), 
  IN "PIFEEFLAG" SMALLINT, 
  IN "PIPKNUMBER" SMALLINT, 
  IN "PISENDLEVEL" SMALLINT, 
  IN "PITASKID" INTEGER, 
  IN "PIERCODE" CHARACTER(7), 
  IN "PITPUDHI" SMALLINT, 
  IN "PILONGMSGSEQ" SMALLINT, 
  IN "PIMSGFMT" SMALLINT, 
  IN "PIUNICOM" SMALLINT, 
  IN "PIMOBILEAREA" INTEGER, 
  IN "PISVRTYPE" VARCHAR(64), 
  IN "PIP1" VARCHAR(64), 
  IN "PIP2" VARCHAR(64), 
  IN "PIP3" VARCHAR(64), 
  IN "PIP4" VARCHAR(64), 
  IN "PIUSERMSGID" BIGINT, 
  IN "PIMODULEID" INTEGER, 
  IN "PIATTIME" BIGINT, 
  IN "PIVALIDTIME" BIGINT,
  IN "PISENDTYPE" INTEGER,
  IN "PIBATCHID" BIGINT,
  IN "PIAREACODE" INTEGER,
  IN "PICUSTID" VARCHAR(64), 
  IN "PIEXDATA" VARCHAR(64),
  IN "PILONGMSG" VARCHAR(4000),
  IN "PITMPLID" BIGINT,
  IN "PICHGRADE" SMALLINT,
  IN "PIMSGTYPE" SMALLINT,
  IN "PIRMSVALIDTM" SMALLINT,
  IN "PIRMSRPTFLAG" SMALLINT,
  IN "PIPROTOCOLVER" SMALLINT,
  IN "PITMPLTYPE" SMALLINT,
  IN "PITITLE" VARCHAR(40),
  IN "PISHOWAY" VARCHAR(16),
  IN "PIDLDWAY" INTEGER,
  IN "PIDLDNEY" INTEGER,
  IN "PIISFREE" INTEGER,
  IN "PISHOWTIME" BIGINT,
  IN "PISUID1" VARCHAR(64), 
  IN "PILUID1" VARCHAR(64)
 ) 
  SPECIFIC "GW_WR_MTTASKSRV4"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN

DECLARE PILOCATION INT;
DECLARE PISTART INT;
DECLARE PIRESULTPHONE VARCHAR(21);
DECLARE PISTRSPLIT VARCHAR(2);
SET PISTRSPLIT = ','; 
--SET PIRECVMTTIME =CURRENT TIMESTAMP;
DECLARE GLOBAL TEMPORARY TABLE SESSION.PITMP(UID INT,USERID VARCHAR(11),SPGATE VARCHAR(21),CPNO VARCHAR(21),PHONE VARCHAR(21),
PTMSGID BIGINT ,MESSAGE VARCHAR(3000),SENDSTATUS SMALLINT,RETFLAG SMALLINT,PKNUMBER SMALLINT, 
PKTOTAL SMALLINT,RECVMTTIME TIMESTAMP,ECID INT,FEEFLAG SMALLINT,SENDLEVEL SMALLINT,TASKID INT,ERRORCODE CHAR(7),
TPUDHI SMALLINT,LONGMSGSEQ SMALLINT,MSGFMT SMALLINT,UNICOM SMALLINT,MOBILEAREA INT,
SVRTYPE VARCHAR(64),P1 VARCHAR(64),P2 VARCHAR(64),P3 VARCHAR(64),
P4 VARCHAR(64),USERMSGID BIGINT,MODULEID INT,ATTIME BIGINT,VALIDTIME BIGINT,SENDTYPE INTEGER)ON COMMIT DELETE ROWS NOT LOGGED WITH REPLACE; 
 
IF PIPHONECOUNT < 1 THEN--
	RETURN;  
END IF;
 
IF PIPHONECOUNT = 1 THEN--
	IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PIPTMSGID) THEN
		INSERT INTO GW_MT_TASK_BAK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG, PKNUMBER, 
		PKTOTAL, RECVMTTIME, ECID, FEEFLAG, SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,
		SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
		VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PISHOUJI, PIPTMSGID, PIMESSAGE, PISENDSTATUS, PIRETFLAG, PIPKNUMBER, 
		PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG, PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,
		PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA,PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIRMSRPTFLAG,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME,PISUID1,PILUID1);
	END IF;
ELSE --
	SET PISHOUJI = PISTRSPLIT||PISHOUJI||PISTRSPLIT; 
	SET PILOCATION = LOCATE(PISTRSPLIT,PISHOUJI, CODEUNITS32);
	WHILE PILOCATION <> 0 --
	DO
	  SET PISTART = PILOCATION;
	  SET PILOCATION = LOCATE(PISTRSPLIT,PISHOUJI,PISTART+1, CODEUNITS32);
	  IF PILOCATION > 0
	  THEN 
		  IF PILOCATION-PISTART-1 >=0 THEN
		    SET PIRESULTPHONE = SUBSTRING(PISHOUJI,PISTART+1,PILOCATION-PISTART-1, CODEUNITS32);
		  ELSE
		    SET PIRESULTPHONE = SUBSTRING(PISHOUJI,PISTART+1,0, CODEUNITS32);
		  END IF;
		  IF PIRESULTPHONE <> ''
		  THEN
			  IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PIPTMSGID) THEN
				  INSERT INTO SESSION.PITMP(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG, PKNUMBER, 
				  PKTOTAL, RECVMTTIME,ECID, FEEFLAG, SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,
				  SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE)
				  VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PIRESULTPHONE, PIPTMSGID, PIMESSAGE, PISENDSTATUS, PIRETFLAG, PIPKNUMBER, 
				  PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG, PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,
				  PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE); 
			  END IF;
			  SET PIPTMSGID = PIPTMSGID+1;
		  END IF;
	    END IF;	
	 END WHILE; 

	 INSERT INTO GW_MT_TASK_BAK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG, PKNUMBER, 
	 PKTOTAL, RECVMTTIME, ECID, FEEFLAG, SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,
	 SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
	 SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,A.PKNUMBER,
	 A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,A.MSGFMT,A.UNICOM,
	 A.MOBILEAREA,A.SVRTYPE,A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME,A.SENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA,PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIRMSRPTFLAG,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME,PISUID1,PILUID1 FROM SESSION.PITMP A;
END IF;
END&&

CALL DELPROC('GW_WR_MTTASKSRV5')&&
CREATE PROCEDURE "GW_WR_MTTASKSRV5"
 (IN "PIUID" INTEGER, 
  IN "PIPTMSGID" BIGINT, 
  IN "PISENDSTATUS" SMALLINT, 
  IN "PIRETFLAG" SMALLINT, 
  IN "PIPKTOTAL" SMALLINT, 
  IN "PIPHONECOUNT" INTEGER, 
  IN "PIECID" INTEGER, 
  IN "PIUSERID" VARCHAR(11), 
  IN "PISPGATE" VARCHAR(21), 
  IN "PICPNO" VARCHAR(21), 
  IN "PIRECVMTTIME" TIMESTAMP, 
  IN "PIMESSAGE" VARCHAR(3000), 
  IN "PISHOUJI" VARCHAR(3500), 
  IN "PIFEEFLAG" SMALLINT, 
  IN "PIPKNUMBER" SMALLINT, 
  IN "PISENDLEVEL" SMALLINT, 
  IN "PITASKID" INTEGER, 
  IN "PIERCODE" CHARACTER(7), 
  IN "PITPUDHI" SMALLINT, 
  IN "PILONGMSGSEQ" SMALLINT, 
  IN "PIMSGFMT" SMALLINT, 
  IN "PIUNICOM" SMALLINT, 
  IN "PIMOBILEAREA" INTEGER, 
  IN "PISVRTYPE" VARCHAR(64), 
  IN "PIP1" VARCHAR(64), 
  IN "PIP2" VARCHAR(64), 
  IN "PIP3" VARCHAR(64), 
  IN "PIP4" VARCHAR(64), 
  IN "PIUSERMSGID" BIGINT, 
  IN "PIMODULEID" INTEGER, 
  IN "PIATTIME" BIGINT, 
  IN "PIVALIDTIME" BIGINT,
  IN "PISENDTYPE" INTEGER,
  IN "PIBATCHID" BIGINT,
  IN "PIAREACODE" INTEGER,
  IN "PICUSTID" VARCHAR(64), 
  IN "PIEXDATA" VARCHAR(64),
  IN "PISUID1" VARCHAR(64), 
  IN "PILUID1" VARCHAR(64)
 ) 
  SPECIFIC "GW_WR_MTTASKSRV5"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN

DECLARE PILOCATION INT;
DECLARE PISTART INT;
DECLARE PIRESULTPHONE VARCHAR(21);
DECLARE PISTRSPLIT VARCHAR(2);
SET PISTRSPLIT = ','; 
--SET PIRECVMTTIME =CURRENT TIMESTAMP;
DECLARE GLOBAL TEMPORARY TABLE SESSION.PITMP(UID INT,USERID VARCHAR(11),SPGATE VARCHAR(21),CPNO VARCHAR(21),PHONE VARCHAR(21),
PTMSGID BIGINT ,MESSAGE VARCHAR(3000),SENDSTATUS SMALLINT,RETFLAG SMALLINT,PKNUMBER SMALLINT, 
PKTOTAL SMALLINT,RECVMTTIME TIMESTAMP,ECID INT,FEEFLAG SMALLINT,SENDLEVEL SMALLINT,TASKID INT,ERRORCODE CHAR(7),
TPUDHI SMALLINT,LONGMSGSEQ SMALLINT,MSGFMT SMALLINT,UNICOM SMALLINT,MOBILEAREA INT,
SVRTYPE VARCHAR(64),P1 VARCHAR(64),P2 VARCHAR(64),P3 VARCHAR(64),
P4 VARCHAR(64),USERMSGID BIGINT,MODULEID INT,ATTIME BIGINT,VALIDTIME BIGINT,SENDTYPE INTEGER)ON COMMIT DELETE ROWS NOT LOGGED WITH REPLACE; 
 
IF PIPHONECOUNT < 1 THEN--
	RETURN;  
END IF;
 
IF PIPHONECOUNT = 1 THEN--
	IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PIPTMSGID) THEN
		INSERT INTO GW_MT_TASK_BAK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG, PKNUMBER, 
		PKTOTAL, RECVMTTIME, ECID, FEEFLAG, SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,
		SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
		VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PISHOUJI, PIPTMSGID, PIMESSAGE, PISENDSTATUS, PIRETFLAG, PIPKNUMBER, 
		PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG, PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,
		PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA,PISUID1,PILUID1);
	END IF;
ELSE --
	SET PISHOUJI = PISTRSPLIT||PISHOUJI||PISTRSPLIT; 
	SET PILOCATION = LOCATE(PISTRSPLIT,PISHOUJI, CODEUNITS32);
	WHILE PILOCATION <> 0 --
	DO
	  SET PISTART = PILOCATION;
	  SET PILOCATION = LOCATE(PISTRSPLIT,PISHOUJI,PISTART+1, CODEUNITS32);
	  IF PILOCATION > 0
	  THEN 
		  IF PILOCATION-PISTART-1 >=0 THEN
		    SET PIRESULTPHONE = SUBSTRING(PISHOUJI,PISTART+1,PILOCATION-PISTART-1, CODEUNITS32);
		  ELSE
		    SET PIRESULTPHONE = SUBSTRING(PISHOUJI,PISTART+1,0, CODEUNITS32);
		  END IF;
		  IF PIRESULTPHONE <> ''
		  THEN
			  IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PIPTMSGID) THEN
				  INSERT INTO SESSION.PITMP(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG, PKNUMBER, 
				  PKTOTAL, RECVMTTIME,ECID, FEEFLAG, SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,
				  SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE)
				  VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PIRESULTPHONE, PIPTMSGID, PIMESSAGE, PISENDSTATUS, PIRETFLAG, PIPKNUMBER, 
				  PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG, PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,
				  PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE); 
			  END IF;
			  SET PIPTMSGID = PIPTMSGID+1;
		  END IF;
	    END IF;	
	 END WHILE; 

	 INSERT INTO GW_MT_TASK_BAK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG, PKNUMBER, 
	 PKTOTAL, RECVMTTIME, ECID, FEEFLAG, SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,
	 SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
	 SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,A.PKNUMBER,
	 A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,A.MSGFMT,A.UNICOM,
	 A.MOBILEAREA,A.SVRTYPE,A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME,A.SENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA,PISUID1,PILUID1 FROM SESSION.PITMP A;
END IF;
END&&

CALL DELPROC('GW_WR_MTTASKBAKV2')&&
CREATE PROCEDURE GW_WR_MTTASKBAKV2
 (
    IN PIUID         INTEGER,
    IN PIPTMSGID     BIGINT,
    IN PIECID        INTEGER,
    IN PISENDSTATUS  INTEGER,
    IN PIRETFLAG     SMALLINT,
    IN PIPKNUMBER    SMALLINT,
    IN PIPKTOTAL     SMALLINT,
    IN PIFEEFLAG     SMALLINT,
    IN PISENDLEVEL   SMALLINT,
    IN PIRECVMTTIME  TIMESTAMP,
    IN PIUSERID      VARCHAR(11),
    IN PISPGATE      VARCHAR(21),
    IN PICPNO        VARCHAR(21),
    IN PIPHONE       VARCHAR(21),
    IN PIMESSAGE     VARCHAR(3000),
    IN PITASKID      INTEGER,
    IN PIERRORCODE   CHARACTER(7),
    IN PITPUDHI      SMALLINT,
    IN PILONGMSGSEQ  SMALLINT,
    IN PIMSGFMT      SMALLINT,
    IN PIUNICOM      SMALLINT,
    IN PIMOBILEAREA  INTEGER,
    IN PISVRTYPE     VARCHAR(64),
    IN PIP1          VARCHAR(64),
    IN PIP2          VARCHAR(64),
    IN PIP3          VARCHAR(64),
    IN PIP4          VARCHAR(64),
    IN PIUSERMSGID   BIGINT,
    IN PIMODULEID    INTEGER,
    IN PIATTIME      BIGINT,
    IN PIVALIDTIME   BIGINT,
    IN PISENDTYPE    SMALLINT,
    IN PIBATCHID     BIGINT,
    IN PIAREACODE    INTEGER,
    IN PICUSTID VARCHAR(64), 
    IN PIEXDATA VARCHAR(64),
	IN PISUID1 VARCHAR(64),
	IN PILUID1 VARCHAR(64)
 )
BEGIN
    DECLARE PICNT INTEGER;
    SELECT COUNT(ID) INTO PICNT FROM GW_MT_TASK_BAK WHERE PTMSGID=PIPTMSGID;
  IF PICNT=0 THEN
    INSERT INTO GW_MT_TASK_BAK(UID,PTMSGID,ECID,SENDSTATUS,RETFLAG,PKNUMBER,PKTOTAL,FEEFLAG,SENDLEVEL,
    RECVMTTIME,USERID,SPGATE,CPNO,PHONE,MESSAGE,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,
    MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
    VALUES(PIUID,PIPTMSGID,PIECID,PISENDSTATUS,PIRETFLAG,PIPKNUMBER,PIPKTOTAL,PIFEEFLAG,PISENDLEVEL,PIRECVMTTIME,
    PIUSERID,PISPGATE,PICPNO,PIPHONE,PIMESSAGE,PITASKID,PIERRORCODE,PITPUDHI,PILONGMSGSEQ,PIMSGFMT,PIUNICOM,
    PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA,PISUID1,PILUID1);
  END IF;
END&&


CALL DELPROC('GW_H_TRANSFERV1')&&
CREATE PROCEDURE "GW_H_TRANSFERV1"
 (IN "PIMININDEX" BIGINT, 
  IN "PIMAXINDEX" BIGINT
 ) 
  SPECIFIC "GW_H_TRANSFERV1"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN

	DECLARE	PISTR VARCHAR(4000);
	DECLARE	PITABLENAME VARCHAR(20);
	DECLARE	MINYM INTEGER;
	DECLARE	MAXYM INTEGER;
	DECLARE	CURYM INTEGER;	
  DECLARE MAXTIME VARCHAR(32);
  DECLARE MINTIME VARCHAR(32);
	DECLARE BEGTIME VARCHAR(32);
  DECLARE ENDTIME VARCHAR(32);
  --------------------VER 3.1-------------------------------------
  SELECT MIN(SENDTIME),MAX(SENDTIME) INTO MINTIME,MAXTIME FROM GW_MT_TASK_BAK  WHERE ID BETWEEN PIMININDEX AND PIMAXINDEX;
  
  SET MINYM=CAST((SUBSTR(CHAR(MINTIME),1,4)||SUBSTR(CHAR(MINTIME),6,2))AS INT);
  SET MAXYM=CAST((SUBSTR(CHAR(MAXTIME),1,4)||SUBSTR(CHAR(MAXTIME),6,2))AS INT);
   
  --转移
  SET CURYM = MINYM;
  WHILE CURYM<=MAXYM DO
  
  IF CAST(SUBSTR(CAST(CURYM AS CHAR(6)),5,2) AS INT)<>12 THEN
	    SET BEGTIME = SUBSTR(CHAR(CURYM),1,4)||'-'||SUBSTR(CHAR(CURYM),5,2)||'-'||'01 00:00:00.000000';
	    IF CAST(SUBSTR(CAST(CURYM AS CHAR(6)),5,2) AS INT)<9 THEN
	      SET ENDTIME = SUBSTR(CHAR(CURYM),1,4)||'-0'||TRIM(CHAR(INT(SUBSTR(CHAR(CURYM),5,2))+1))||'-'||'01 00:00:00.000000';
		ELSE
		  SET ENDTIME = SUBSTR(CHAR(CURYM),1,4)||'-'||TRIM(CHAR(INT(SUBSTR(CHAR(CURYM),5,2))+1))||'-'||'01 00:00:00.000000';
		END IF;
	  ELSE
	      SET BEGTIME = SUBSTR(CHAR(CURYM),1,4)||'-'||SUBSTR(CHAR(CURYM),5,2)||'-'||'01 00:00:00.000000';
	      SET ENDTIME = TRIM(CHAR(INT(SUBSTR(CHAR(CURYM),1,4))+1))||'-'||'01'||'-'||'01 00:00:00.000000';
	  END IF;
	  
      SET PITABLENAME = 'MTTASK'||CAST(CURYM AS CHAR(6));

      SET PISTR= 'INSERT INTO '||PITABLENAME||' (ID,MDAY,USERID,SPGATE,CPNO,PHONE,SPMSGID,RETFLAG,FEEFLAG,PKNUMBER,PKTOTAL,SENDSTATUS,SENDFLAG,RECVFLAG,DONEDATE,ERRORCODE,SENDLEVEL,SENDTYPE,UNICOM,SENDTIME,RECVTIME,MESSAGE,TASKID,ECID,PTMSGID,MOBILEAREA,SPID,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,DOWNTM,SUID1,LUID1)
                SELECT ID,INT(DAY(M.SENDTIME)),USERID,SPGATE,CPNO,PHONE,SPMSGID,RETFLAG,FEEFLAG,PKNUMBER,PKTOTAL,SENDSTATUS,SENDFLAG,RECVFLAG,DONEDATE,ERRORCODE,SENDLEVEL,SENDTYPE,UNICOM,SENDTIME,RECVTIME,MESSAGE,TASKID,ECID,PTMSGID,MOBILEAREA,SPID,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,DOWNTM,SUID1,LUID1  
                FROM GW_MT_TASK_BAK  M
                WHERE SENDTIME>='''||BEGTIME||''' AND SENDTIME<'''||ENDTIME||''' AND (M.ID <='||CHAR(PIMAXINDEX)||')  ';
      EXECUTE IMMEDIATE PISTR;

      IF CAST(SUBSTR(CAST(CURYM AS CHAR(6)),5,2) AS INT)=12 THEN
        SET CURYM = CAST(CAST(CAST(SUBSTR(CAST(CURYM AS CHAR(6)),1,4)AS INT)+1 AS CHAR(4))||'01' AS INT);
      ELSE
        SET CURYM = CURYM+1;
      END IF;
  END WHILE;
END&&

CALL DELPROC('GW_WR_MTTASKV1')&&
CREATE PROCEDURE "GW_WR_MTTASKV1"
 (IN "PIUID" INTEGER,    
  IN "PIPTMSGID" BIGINT, 
  IN "PISENDSTATUS" SMALLINT, 
  IN "PIRETFLAG" SMALLINT,
  IN "PIPKTOTAL" SMALLINT,
  IN "PIPHONECOUNT" INTEGER, 
  IN "PISPLITLEN" SMALLINT,
  IN "PIMULTILEN1" SMALLINT, 
  IN "PIMULTILEN2" SMALLINT,
  IN "PISIGNLEN" SMALLINT, 
  IN "PIECID" INTEGER,
  IN "PIUSERID" VARCHAR(11),
  IN "PISPGATE" VARCHAR(21),
  IN "PICPNO" VARCHAR(21),
  IN "PIRECVMTTIME" TIMESTAMP, 
  IN "PIMESSAGE" VARCHAR(3000), 
  IN "PISHOUJI" VARCHAR(3500), 
  IN "PIFEEFLAG" SMALLINT,  
  IN "PISENDLEVEL" SMALLINT, 
  IN "PITASKID" INTEGER,  
  IN "PIERCODE" CHARACTER(7), 
  IN "PITPUDHI" SMALLINT, 
  IN "PILONGMSGSEQ" SMALLINT,
  IN "PIMSGFMT" SMALLINT, 
  IN "PIUNICOM" SMALLINT,  
  IN "PIMOBILEAREA" INTEGER, 
  IN "PIPKNUMBER" SMALLINT,
  IN "PISVRTYPE" VARCHAR(64), 
  IN "PIP1" VARCHAR(64), 
  IN "PIP2" VARCHAR(64), 
  IN "PIP3" VARCHAR(64), 
  IN "PIP4" VARCHAR(64), 
  IN "PIUSERMSGID" BIGINT, 
  IN "PIMODULEID" INTEGER, 
  IN "PIATTIME" BIGINT, 
  IN "PIVALIDTIME" BIGINT,
  IN "PISENDTYPE" INTEGER,
  IN "PIBATCHID" BIGINT,
  IN "PIAREACODE" INTEGER,
  IN "PICUSTID" VARCHAR(64),
  IN "PIEXDATA" VARCHAR(64)
 ) 
  SPECIFIC "GW_WR_MTTASKV1"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN

DECLARE PITMPMSGID BIGINT; 
DECLARE PILOCATION INT;
DECLARE PISTART INT;
DECLARE PIRESULTPHONE VARCHAR(21);
DECLARE PISTRSPLIT VARCHAR(2);
DECLARE PILEN INT;      
DECLARE PIRESULTMSG VARCHAR(3000); 
DECLARE PIPKNUM INT; 
DECLARE PITMPNUM INT; 
DECLARE GLOBAL TEMPORARY TABLE SESSION.TMPMTTASK(UID INT,
USERID VARCHAR(11),SPGATE VARCHAR(21),CPNO VARCHAR(21), 
PHONE VARCHAR(21),PTMSGID BIGINT ,MESSAGE VARCHAR(3000),
SENDSTATUS SMALLINT,RETFLAG SMALLINT,PKNUMBER SMALLINT,
PKTOTAL SMALLINT,RECVMTTIME TIMESTAMP,ECID INT,
FEEFLAG SMALLINT,SENDLEVEL SMALLINT,TASKID INT,ERRORCODE CHAR(7),
TPUDHI SMALLINT,LONGMSGSEQ SMALLINT,MSGFMT SMALLINT,UNICOM SMALLINT,MOBILEAREA INT,
SVRTYPE VARCHAR(64),P1 VARCHAR(64),P2 VARCHAR(64),P3 VARCHAR(64),
P4 VARCHAR(64),USERMSGID BIGINT,MODULEID INT,ATTIME BIGINT,VALIDTIME BIGINT,SENDTYPE INTEGER,AREACODE INTEGER,CUSTID VARCHAR(64),EXDATA VARCHAR(64)) ON COMMIT DELETE ROWS NOT LOGGED WITH REPLACE;  

SET PILEN = LENGTH(PIMESSAGE, CODEUNITS32)-PISIGNLEN;  
SET PITMPNUM = 0; 
SET PIPKNUM = 1; 
SET PISTRSPLIT = ',';

IF PIPHONECOUNT < 1 THEN
	RETURN;
END IF; 

IF PIMSGFMT=4 OR PIMSGFMT=248 OR PIMSGFMT=246 THEN
	SET PISPLITLEN=140;
	SET PIMULTILEN1=134;
	SET PIMULTILEN2=134;
	SET PISIGNLEN=0;
END IF;

IF PIMSGFMT=25  THEN
		IF NOT EXISTS (SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID=PIPTMSGID) THEN
		   INSERT INTO GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
		   RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,
		   TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA)
		   VALUES(PIUID,PIUSERID,PISPGATE,PICPNO,PISHOUJI,PIPTMSGID,PIMESSAGE,PISENDSTATUS,PIRETFLAG,PIPKNUMBER,PIPKTOTAL,
		   PIRECVMTTIME,PIECID,PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,
		   PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA);
		END IF;
		RETURN;
END IF;

IF PIPHONECOUNT = 1 
THEN
	IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PIPTMSGID)
	THEN
		IF PIPKTOTAL = 1
		THEN
			INSERT INTO GW_MT_TASK_BAK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, 
			SENDSTATUS, RETFLAG, PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,
			TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,
			SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA)
			VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PISHOUJI, PIPTMSGID, PIMESSAGE, 
			PISENDSTATUS, PIRETFLAG, PIPKNUMBER, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,
			PITASKID,PIERCODE,PITPUDHI,PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,
			PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA);
		ELSE
			SET PIPKNUM = 1;
			SET PITMPMSGID = PIPTMSGID;
			IF PIPKTOTAL = 2 AND PILEN <= PIMULTILEN1
			THEN
				SET PIRESULTMSG = SUBSTRING(PIMESSAGE,1,PISPLITLEN, CODEUNITS32);
				SET PITMPMSGID = PITMPMSGID;
				IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PIPTMSGID)
				THEN
					INSERT INTO SESSION.TMPMTTASK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, 
					RETFLAG, PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,
					MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
					VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PISHOUJI, PITMPMSGID, PIRESULTMSG, PISENDSTATUS, 
					PIRETFLAG, PIPKNUM, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,
					PITPUDHI,PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIAREACODE,PICUSTID,PIEXDATA);
				END IF;--END OF IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PIPTMSGID)
				IF  PILEN-PISPLITLEN+PISIGNLEN>=0 
				  THEN
				    SET PIRESULTMSG = SUBSTRING(PIMESSAGE,PISPLITLEN+1, PILEN-PISPLITLEN+PISIGNLEN, CODEUNITS32);
				  ELSE
				    SET PIRESULTMSG = SUBSTRING(PIMESSAGE,PISPLITLEN+1, 0, CODEUNITS32);
				END IF;
				SET PITMPMSGID = PITMPMSGID+17179869184;
				SET PIPKNUM = PIPKNUM+1;
				IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PIPTMSGID)
				THEN
					INSERT INTO SESSION.TMPMTTASK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, 
					RETFLAG, PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,
					MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
					VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PISHOUJI, PITMPMSGID, PIRESULTMSG, PISENDSTATUS, 
					PIRETFLAG, PIPKNUM, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,
					PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIAREACODE,PICUSTID,PIEXDATA);
				END IF;--END OF IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PIPTMSGID)
			ELSE
				WHILE PIPKNUM <= PIPKTOTAL
				DO
					IF PIPKNUM = PIPKTOTAL
					THEN
						SET PIRESULTMSG = SUBSTRING(PIMESSAGE,PITMPNUM+1, PIMULTILEN2+PISIGNLEN, CODEUNITS32);
						SET PITMPMSGID = PIPTMSGID+(PIPKNUM-1)*17179869184;
					ELSEIF PIPKNUM = PIPKTOTAL-1
					THEN
						IF PILEN-(PIPKNUM-1)*PIMULTILEN1 > PIMULTILEN2 AND PILEN-(PIPKNUM-1)*PIMULTILEN1 <= PIMULTILEN1
						THEN
						    IF  PILEN-(PIPKNUM-1)*PIMULTILEN1-1 >=0 THEN
							   SET PIRESULTMSG = SUBSTRING(PIMESSAGE,(PIPKNUM-1)*PIMULTILEN1+1, PILEN-(PIPKNUM-1)*PIMULTILEN1-1, CODEUNITS32);
							ELSE
							   SET PIRESULTMSG = SUBSTRING(PIMESSAGE,(PIPKNUM-1)*PIMULTILEN1+1, 0, CODEUNITS32);
							END IF;
							SET PITMPNUM = PILEN-1;
						ELSE
							SET PIRESULTMSG = SUBSTRING(PIMESSAGE,(PIPKNUM-1)*PIMULTILEN1+1, PIMULTILEN1, CODEUNITS32);
							SET PITMPNUM = (PIPKNUM-1)*PIMULTILEN1+PIMULTILEN1;
						END IF;--END IF OF IF PILEN-(PIPKNUM-1)*PIMULTILEN1 > PIMULTILEN2 AND PILEN-(PIPKNUM-1)*PIMULTILEN1 <= PIMULTILEN1;
						SET PITMPMSGID = PIPTMSGID+(PIPKNUM-1)*17179869184;
					ELSE
						SET PIRESULTMSG = SUBSTRING(PIMESSAGE,(PIPKNUM-1)*PIMULTILEN1+1, PIMULTILEN1, CODEUNITS32);
						SET PITMPMSGID = PIPTMSGID+(PIPKNUM-1)*17179869184;
					END IF;--END IF OF IF PIPKNUM = PIPKTOTAL
					IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PITMPMSGID)
					THEN
						INSERT INTO SESSION.TMPMTTASK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, 
						RETFLAG, PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,
						MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
						VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PISHOUJI, PITMPMSGID, PIRESULTMSG, PISENDSTATUS, 
						PIRETFLAG, PIPKNUM, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,
						PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIAREACODE,PICUSTID,PIEXDATA);
					END IF;--END IF OF IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PITMPMSGID)
					SET PIPKNUM = PIPKNUM+1;
				END WHILE;--END WHILE OF WHILE PIPKNUM <= PIPKTOTAL
			END IF;--END IF OF IF PIPKTOTAL = 2 AND PILEN <= PIMULTILEN1;

			INSERT INTO GW_MT_TASK_BAK (UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, 
			RETFLAG, PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,
			LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA) 
			SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,
			A.PKNUMBER,A.PKTOTAL,A.RECVMTTIME, A.ECID, A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,
			A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME,A.SENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA FROM SESSION.TMPMTTASK A;
		END IF;--END IF OF IF PIPKTOTAL = 1
	END IF; --END IF OF IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PIPTMSGID)
ELSE --
	SET PISHOUJI = PISTRSPLIT||PISHOUJI||PISTRSPLIT;
	SET PILOCATION = LOCATE(PISTRSPLIT,PISHOUJI, CODEUNITS32);

	IF PIPKTOTAL < 1 --
	THEN	
		RETURN;
	END IF;

	IF PIPKTOTAL >= 1 --
	THEN
		WHILE PILOCATION <> 0 --
		DO
			SET PISTART = PILOCATION;
			SET PILOCATION = LOCATE(PISTRSPLIT,PISHOUJI,PISTART+1, CODEUNITS32);
			IF PILOCATION > 0
			THEN
				SET PIRESULTPHONE = SUBSTRING(PISHOUJI,PISTART+1,PILOCATION-PISTART-1, CODEUNITS32);--
				IF PIRESULTPHONE <> ''
				THEN
					SET PITMPMSGID = PIPTMSGID;
					IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PITMPMSGID)
					THEN
						IF PIPKTOTAL = 1
						THEN
							INSERT INTO SESSION.TMPMTTASK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS,
							RETFLAG, PKNUMBER, PKTOTAL, RECVMTTIME,ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,
							MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
							VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PIRESULTPHONE, PITMPMSGID, PIMESSAGE, PISENDSTATUS, 
							PIRETFLAG, PIPKTOTAL, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,
							PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIAREACODE,PICUSTID,PIEXDATA);
						ELSE
							SET PIPKNUM = 1;
							IF PIPKTOTAL = 2 AND PILEN <= PIMULTILEN1
							THEN
								SET PIRESULTMSG = SUBSTRING(PIMESSAGE,1, PISPLITLEN, CODEUNITS32);--
								SET PITMPMSGID = PITMPMSGID;
								IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PITMPMSGID)
								THEN 
									INSERT INTO SESSION.TMPMTTASK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG,
									PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,
									UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
									VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PIRESULTPHONE, PITMPMSGID, PIRESULTMSG, PISENDSTATUS, 
									PIRETFLAG, PIPKNUM, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,
									PILONGMSGSEQ,PIMSGFMT,PIUNICOM,PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIAREACODE,PICUSTID,PIEXDATA);
								END IF; --END IF OF IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PITMPMSGID)
								IF PILEN-PISPLITLEN+PISIGNLEN>=0 THEN
								  SET PIRESULTMSG = SUBSTRING(PIMESSAGE,PISPLITLEN+1, PILEN-PISPLITLEN+PISIGNLEN, CODEUNITS32);
								ELSE
								  SET PIRESULTMSG = SUBSTRING(PIMESSAGE,PISPLITLEN+1, 0, CODEUNITS32);
								END IF;
								SET PITMPMSGID = PITMPMSGID+17179869184;
								SET PIPKNUM = PIPKNUM+1;
								IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PITMPMSGID)
								THEN
									INSERT INTO SESSION.TMPMTTASK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG,
									PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,
									UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
									VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PIRESULTPHONE, PITMPMSGID, PIRESULTMSG, PISENDSTATUS, PIRETFLAG,
									PIPKNUM, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,PILONGMSGSEQ,
									PIMSGFMT,PIUNICOM,PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIAREACODE,PICUSTID,PIEXDATA);
								END IF; --END IF OF IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PITMPMSGID)
							ELSE
								WHILE PIPKNUM <= PIPKTOTAL
								DO 
									IF PIPKNUM = PIPKTOTAL
									THEN
										SET PIRESULTMSG = SUBSTRING(PIMESSAGE,PITMPNUM+1, PIMULTILEN2+PISIGNLEN, CODEUNITS32);
										SET PITMPMSGID = PIPTMSGID+(PIPKNUM-1)*17179869184;
									ELSEIF PIPKNUM = PIPKTOTAL-1 
									THEN
										IF PILEN-(PIPKNUM-1)*PIMULTILEN1 > PIMULTILEN2 AND PILEN-(PIPKNUM-1)*PIMULTILEN1 <= PIMULTILEN1
										THEN
											SET PIRESULTMSG = SUBSTRING(PIMESSAGE,(PIPKNUM-1)*PIMULTILEN1+1, PILEN-(PIPKNUM-1)*PIMULTILEN1-1, CODEUNITS32);
											SET PITMPNUM = PILEN-1;
										ELSE
											SET PIRESULTMSG = SUBSTRING(PIMESSAGE,(PIPKNUM-1)*PIMULTILEN1+1, PIMULTILEN1, CODEUNITS32);
											SET PITMPNUM = (PIPKNUM-1)*PIMULTILEN1+PIMULTILEN1;
										END IF; --END IF OF PILEN-(PIPKNUM-1)*PIMULTILEN1 > PIMULTILEN2 AND PILEN-(PIPKNUM-1)*PIMULTILEN1 <= PIMULTILEN1
										SET PITMPMSGID = PIPTMSGID+(PIPKNUM-1)*17179869184;
									ELSE
										SET PIRESULTMSG = SUBSTRING(PIMESSAGE,(PIPKNUM-1)*PIMULTILEN1+1, PIMULTILEN1, CODEUNITS32);
										SET PITMPMSGID = PIPTMSGID+(PIPKNUM-1)*17179869184;
									END IF; --END IF OF IF PIPKNUM = PIPKTOTAL
									IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PITMPMSGID)
									THEN
										INSERT INTO SESSION.TMPMTTASK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG, 
										PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,
										UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
										VALUES(PIUID,PIUSERID, PISPGATE, PICPNO, PIRESULTPHONE, PITMPMSGID, PIRESULTMSG, PISENDSTATUS, PIRETFLAG, 
										PIPKNUM, PIPKTOTAL, PIRECVMTTIME, PIECID, PIFEEFLAG,PISENDLEVEL,PITASKID,PIERCODE,PITPUDHI,PILONGMSGSEQ,
										PIMSGFMT,PIUNICOM,PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIAREACODE,PICUSTID,PIEXDATA);
									END IF;--END IF OF IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PITMPMSGID)
									SET PIPKNUM = PIPKNUM+1;
								END WHILE;-- END WHILE OF WHILE PIPKNUM <= PIPKTOTAL
							END IF;--END IF OF IF PIPKTOTAL = 2 AND PILEN <= PIMULTILEN1
						END	IF;--END IF OF IF PIPKTOTAL = 1								
					END IF; --END IF OF IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = PITMPMSGID)
				END IF; --END IF OF IF PIRESULTPHONE <> ''
				SET PIPTMSGID = PIPTMSGID+1;
			END	IF; --END IF OF IF PILOCATION > 0			
		END WHILE; --END WHILE OF WHILE PILOCATION <> 0
		
		INSERT INTO GW_MT_TASK_BAK (UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG, 
		PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,
		UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA)
		SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,A.PKNUMBER,
		A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,
		A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME,A.SENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA FROM SESSION.TMPMTTASK A;
	END IF; --END IF OF IF PIPKTOTAL >= 1
END IF; --END IF OF IF PIPHONECOUNT = 1 --
END&&

MERGE INTO  A_GWPARAMCONF A USING (SELECT 'PUSHCONFIG' AS "PARAMITEM",4000 AS "GWTYPE" FROM  SYSIBM.DUAL) B ON (A.PARAMITEM=B.PARAMITEM AND A.GWTYPE=B.GWTYPE)
WHEN NOT MATCHED THEN 
INSERT(PARAMITEM, PARAMNAME,  PARAMMEMO,PARAMATTRIBUTE, VALUERANGE,
DEFAULTVALUE,  CONTROLTYPE, GWTYPE, HKPARAMNAME, HKPARAMMEMO, ENPARAMNAME, ENPARAMMEMO)
VALUES('PUSHCONFIG', '推送字段是否为JSON数组',  '推送字段是否为JSON数组(0:字符串,1:JSON数组)',
1, '0,1','0',1,4000,'推送字段是否為JSON數組','推送字段是否為JSON數組(0:字符串,1:JSON數組)','Whether the push field is a JSON array','Whether the push field is a JSON array (0: string, 1: JSON array)')
ELSE IGNORE&&

INSERT INTO A_GWPARAMVALUE(GWNO, GWTYPE, PARAMITEM, PARAMVALUE)
SELECT DISTINCT GWNO,4000,'PUSHCONFIG','0' FROM A_GWPARAMVALUE 
WHERE  NOT EXISTS(SELECT * FROM A_GWPARAMVALUE WHERE PARAMITEM='PUSHCONFIG' AND  GWTYPE=4000) AND  GWTYPE=4000&&

CALL DELPROC('GW_LOAD_ECERRCODEBIND')&&
CREATE PROCEDURE GW_LOAD_ECERRCODEBIND()
SPECIFIC "GW_LOAD_ECERRCODEBIND"
  DYNAMIC RESULT SETS 1
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  READS SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN
        DECLARE PISQLSTR VARCHAR(1000);
   	DECLARE RS1 CURSOR WITH RETURN FOR S1; 
	SET PISQLSTR = 'SELECT CORP_CODE,STATE_CODE,MAPPING_CODE,STATE_DES  FROM LF_STATECODE';
	PREPARE S1 FROM PISQLSTR;
	OPEN RS1;

END&&

DROP PROCEDURE "DELPROC"&&

BEGIN ATOMIC 
DECLARE PIVERSION VARCHAR(32);
SET PIVERSION = '4.06.08';
IF NOT EXISTS (SELECT VERSION FROM VERSION_CMPP WHERE VERSION = PIVERSION) THEN
INSERT INTO VERSION_CMPP (VERSION,VERSIONDATE,UPGRADETIME)
VALUES (PIVERSION,CURRENT DATE,(TRIM(CHAR(YEAR(CURRENT TIMESTAMP)))||'-'|| (CASE MONTH(CURRENT TIMESTAMP) WHEN 
1 THEN '01' WHEN 2 THEN '02' WHEN 3 THEN '03' WHEN 4 THEN '04' WHEN 5 THEN '05' WHEN 6 THEN '06'WHEN 7 THEN '07' WHEN 8 THEN '08' WHEN 9 THEN '09'   ELSE   
TRIM(CHAR(MONTH(CURRENT TIMESTAMP))) END)||'-'||TRIM(CHAR(DAY(CURRENT TIMESTAMP)))||' '||TRIM(CHAR(HOUR(CURRENT TIMESTAMP)))||':'||TRIM(CHAR(MINUTE(CURRENT TIMESTAMP)))||':'||TRIM(CHAR(SECOND(CURRENT TIMESTAMP)))));
END IF;
END &&
/*网关升级脚本 V4.06.07-V4.06.08  END*/

/*网关升级脚本 V4.06.08-V4.06.09 START*/
CREATE PROCEDURE "DELPROC"(IN "PROCNAME1" VARCHAR(30))   
  begin
DECLARE STR VARCHAR (256);
DECLARE STR1 VARCHAR (256);
SELECT PROCNAME INTO STR1 FROM SYSCAT.PROCEDURES WHERE  PROCNAME=PROCNAME1;
if  STR1 is not null THEN
  SET STR ='DROP PROCEDURE '||PROCNAME1; 
  execute immediate str ; 
end if; 
end&&

CALL DELPROC('GW_WR_MTTASKBAKV3')&&
CREATE PROCEDURE GW_WR_MTTASKBAKV3
 (
    IN PIUID         INTEGER,
    IN PIPTMSGID     BIGINT,
    IN PIECID        INTEGER,
    IN PISENDSTATUS  INTEGER,
    IN PIRETFLAG     SMALLINT,
    IN PIPKNUMBER    SMALLINT,
    IN PIPKTOTAL     SMALLINT,
    IN PIFEEFLAG     SMALLINT,
    IN PISENDLEVEL   SMALLINT,
    IN PIRECVMTTIME  TIMESTAMP,
    IN PIUSERID      VARCHAR(11),
    IN PISPGATE      VARCHAR(21),
    IN PICPNO        VARCHAR(21),
    IN PIPHONE       VARCHAR(21),
    IN PIMESSAGE     VARCHAR(3000),
    IN PITASKID      INTEGER,
    IN PIERRORCODE   CHARACTER(7),
    IN PITPUDHI      SMALLINT,
    IN PILONGMSGSEQ  SMALLINT,
    IN PIMSGFMT      SMALLINT,
    IN PIUNICOM      SMALLINT,
    IN PIMOBILEAREA  INTEGER,
    IN PISVRTYPE     VARCHAR(64),
    IN PIP1          VARCHAR(64),
    IN PIP2          VARCHAR(64),
    IN PIP3          VARCHAR(64),
    IN PIP4          VARCHAR(64),
    IN PIUSERMSGID   BIGINT,
    IN PIMODULEID    INTEGER,
    IN PIATTIME      BIGINT,
    IN PIVALIDTIME   BIGINT,
    IN PISENDTYPE    SMALLINT,
    IN PIBATCHID     BIGINT,
    IN PIAREACODE    INTEGER,
    IN PICUSTID VARCHAR(64), 
    IN PIEXDATA VARCHAR(64),
	IN PISUID1 VARCHAR(64),
	IN PILUID1 VARCHAR(64),
	IN PILONGMSG	 VARCHAR(4000),
    IN PITMPLID 	   BIGINT,
    IN PICHGRADE    SMALLINT,
    IN PIMSGTYPE    SMALLINT,
    IN PIRMSVALIDTM SMALLINT,
    IN PIRMSRPTFLAG SMALLINT,
    IN PIPROTOCOLVER SMALLINT,
    IN PITMPLTYPE SMALLINT,
    IN PITITLE	 VARCHAR(40),
    IN PISHOWAY	 VARCHAR(16),
    IN PIDLDWAY     INTEGER,	
    IN PIDLDNEY     INTEGER,	
    IN PIISFREE     INTEGER,	
    IN PISHOWTIME   BIGINT
 )
BEGIN
    DECLARE PICNT INTEGER;
    SELECT COUNT(ID) INTO PICNT FROM GW_MT_TASK_BAK WHERE PTMSGID=PIPTMSGID;
  IF PICNT=0 THEN	--不存在则往GW_MT_TASK_BAK里插入数据 
    INSERT INTO GW_MT_TASK_BAK(UID,PTMSGID,ECID,SENDSTATUS,RETFLAG,PKNUMBER,PKTOTAL,FEEFLAG,SENDLEVEL,
    RECVMTTIME,USERID,SPGATE,CPNO,PHONE,MESSAGE,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,
    MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1,
	LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME)
    VALUES(PIUID,PIPTMSGID,PIECID,PISENDSTATUS,PIRETFLAG,PIPKNUMBER,PIPKTOTAL,PIFEEFLAG,PISENDLEVEL,PIRECVMTTIME,
    PIUSERID,PISPGATE,PICPNO,PIPHONE,PIMESSAGE,PITASKID,PIERRORCODE,PITPUDHI,PILONGMSGSEQ,PIMSGFMT,PIUNICOM,
    PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA,PISUID1,PILUID1,
	PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIRMSRPTFLAG,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME);
  END IF;
END&&

DROP PROCEDURE "DELPROC"&&

BEGIN ATOMIC 
DECLARE PIVERSION VARCHAR(32);
SET PIVERSION = '4.06.09';
IF NOT EXISTS (SELECT VERSION FROM VERSION_CMPP WHERE VERSION = PIVERSION) THEN
INSERT INTO VERSION_CMPP (VERSION,VERSIONDATE,UPGRADETIME)
VALUES (PIVERSION,CURRENT DATE,(TRIM(CHAR(YEAR(CURRENT TIMESTAMP)))||'-'|| (CASE MONTH(CURRENT TIMESTAMP) WHEN 
1 THEN '01' WHEN 2 THEN '02' WHEN 3 THEN '03' WHEN 4 THEN '04' WHEN 5 THEN '05' WHEN 6 THEN '06'WHEN 7 THEN '07' WHEN 8 THEN '08' WHEN 9 THEN '09'   ELSE   
TRIM(CHAR(MONTH(CURRENT TIMESTAMP))) END)||'-'||TRIM(CHAR(DAY(CURRENT TIMESTAMP)))||' '||TRIM(CHAR(HOUR(CURRENT TIMESTAMP)))||':'||TRIM(CHAR(MINUTE(CURRENT TIMESTAMP)))||':'||TRIM(CHAR(SECOND(CURRENT TIMESTAMP)))));
END IF;
END &&
/*网关升级脚本 V4.06.08-V4.06.09  END*/


CREATE OR REPLACE PROCEDURE "ADDVERSIONEXISTS"
  BEGIN ATOMIC
    DECLARE VERSIONSTR VARCHAR(32);
    DECLARE DBVERSION VARCHAR(32);
    DECLARE WBSVERSION VARCHAR(32);
    DECLARE SPGATEVERSION VARCHAR(32);
    DECLARE NUM INT;
    DECLARE TOTAL INT;
    SET VERSIONSTR = '7.3.9.645.SP9';
    SET DBVERSION = '73.09';
	SET WBSVERSION = '8.6.5.220';
	SET SPGATEVERSION = '6.1.53.345';
    SET NUM =1;
    SET TOTAL=1;
    --EMP产品版本记录
    --EMP-WEB
    IF NOT EXISTS(SELECT * FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=1000)
    THEN
      INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
      VALUES(1000,1000,VERSIONSTR,CURRENT TIMESTAMP,CURRENT TIMESTAMP,'EMP-WEB');
    ELSE
      UPDATE LF_VERSION SET UPDATETIME=CURRENT TIMESTAMP,VERSION=VERSIONSTR WHERE PRODUCT_ID=1000 AND PROCESS_ID=1000;
    END IF;
    --EMP_GATEWAY
    IF NOT EXISTS(SELECT * FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=2000)
    THEN
      INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
      VALUES(1000,2000,WBSVERSION,CURRENT TIMESTAMP,CURRENT TIMESTAMP,'EMP_GATEWAY');
    ELSE
      UPDATE LF_VERSION SET UPDATETIME=CURRENT TIMESTAMP,VERSION=WBSVERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=2000;
    END IF;
    --SMT_SPGATE
    IF NOT EXISTS(SELECT * FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=3000)
    THEN
      INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
      VALUES(1000,3000,SPGATEVERSION,CURRENT TIMESTAMP,CURRENT TIMESTAMP,'SMT_SPGATE');
    ELSE
      UPDATE LF_VERSION SET UPDATETIME=CURRENT TIMESTAMP,VERSION=SPGATEVERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=3000;
    END IF;
    --EMP产品版本历史记录
    --EMP-WEB
    IF NOT EXISTS(SELECT * FROM LF_VERSION_HIS WHERE VERSION=VERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=1000)
    THEN
      INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO,ISRELEASE,VERSIONINFO)
      VALUES(1000,1000,VERSIONSTR,CURRENT TIMESTAMP,CURRENT TIMESTAMP,'EMP-WEB',1,'1.修复由于百分号转义产生的内容错误问题;<br>2.修复 客服短信-》客户群组群发-》：发送内容输入半角单引号，提交发送之后在群发任务查看内容没有单引号 的问题;<br>3.修复 移动客服-》客户群组群发-》：发送特殊字符，会缺失或替换 的问题；<br>4.修复 参数内容包含中文，在群发任务查看发出的内容是乱码 的问题；<br>5.修复fastjson漏洞；<br>6.修复 操作员在绑定接入账号后，在SP账号统计报表查询不到接入账号数据 的问题；<br>7.解决客户群组群发''''\''字符串转成\的问题；<br>8.解决发送人民币符号变问号的问题。');
    ELSE
      UPDATE LF_VERSION_HIS SET UPDATETIME=CURRENT TIMESTAMP,ISRELEASE=1,VERSIONINFO='1.修复由于百分号转义产生的内容错误问题;<br>2.修复 客服短信-》客户群组群发-》：发送内容输入半角单引号，提交发送之后在群发任务查看内容没有单引号 的问题;<br>3.修复 移动客服-》客户群组群发-》：发送特殊字符，会缺失或替换 的问题；<br>4.修复 参数内容包含中文，在群发任务查看发出的内容是乱码 的问题；<br>5.修复fastjson漏洞；<br>6.修复 操作员在绑定接入账号后，在SP账号统计报表查询不到接入账号数据 的问题；<br>7.解决客户群组群发''''\''字符串转成\的问题；<br>8.解决发送人民币符号变问号的问题。' WHERE VERSION=VERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=1000;
    END IF;
    --EMP_GATEWAY
    IF NOT EXISTS(SELECT * FROM LF_VERSION_HIS WHERE VERSION=WBSVERSION AND PRODUCT_ID=1000 AND PROCESS_ID=2000)
    THEN
      INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
      VALUES(1000,2000,WBSVERSION,CURRENT TIMESTAMP,CURRENT TIMESTAMP,'EMP_GATEWAY');
    ELSE
      UPDATE LF_VERSION_HIS SET UPDATETIME=CURRENT TIMESTAMP WHERE VERSION=WBSVERSION AND PRODUCT_ID=1000 AND PROCESS_ID=2000;
    END IF;
    --SMT_SPGATE
    IF NOT EXISTS(SELECT * FROM LF_VERSION_HIS WHERE VERSION=SPGATEVERSION AND PRODUCT_ID=1000 AND PROCESS_ID=3000)
    THEN
      INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
      VALUES(1000,3000,SPGATEVERSION,CURRENT TIMESTAMP,CURRENT TIMESTAMP,'SMT_SPGATE');
    ELSE
      UPDATE LF_VERSION_HIS SET UPDATETIME=CURRENT TIMESTAMP WHERE VERSION=SPGATEVERSION AND PRODUCT_ID=1000 AND PROCESS_ID=3000;
    END IF;
    IF NOT EXISTS(SELECT * FROM LF_DB_SCRIPT WHERE VERSION=DBVERSION AND CURRENT_NO=NUM AND TOTAL=TOTAL)
    THEN
      --EMP产品数据库版本信息表
      INSERT INTO LF_DB_SCRIPT(VERSION,UPDATETIME,CREATETIME,CURRENT_NO,TOTAL,STATE,MEMO)
      VALUES(DBVERSION,CURRENT TIMESTAMP,CURRENT TIMESTAMP,NUM,TOTAL,2,'版本号更改');
    ELSE
      UPDATE LF_DB_SCRIPT SET STATE=2,UPDATETIME=CURRENT TIMESTAMP,MEMO='版本号更改' WHERE  VERSION=DBVERSION AND CURRENT_NO=NUM AND TOTAL=TOTAL;
    END IF;
  END   &&
CALL ADDVERSIONEXISTS  &&
DROP PROCEDURE ADDVERSIONEXISTS   &&