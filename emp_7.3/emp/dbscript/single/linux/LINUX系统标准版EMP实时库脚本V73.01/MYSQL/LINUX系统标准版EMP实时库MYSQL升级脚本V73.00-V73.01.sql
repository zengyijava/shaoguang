/*****V71.00-V71.01 START*/
DROP PROCEDURE IF EXISTS `LF_PVERV0`;
DELIMITER ;;
CREATE DEFINER=`root`@`%`  PROCEDURE `LF_PVERV0`(
    DBVERSIONSTR VARCHAR(32),
    NUM INT,
    TOTALSTR INT
)
BEGIN
    IF NOT EXISTS(SELECT * FROM LF_DB_SCRIPT WHERE VERSION=DBVERSIONSTR) THEN
    /*EMP产品数据库版本信息表*/  
    INSERT INTO LF_DB_SCRIPT(VERSION,UPDATETIME,CREATETIME,CURRENT_NO,TOTAL,STATE,MEMO)
    VALUES(DBVERSIONSTR,NOW(),NOW(),NUM,TOTALSTR,1,'Web脚本更新');
    END IF;
END           
;; DELIMITER ;   
CALL LF_PVERV0('73.01',1,1);
DROP PROCEDURE IF EXISTS `LF_PVERV0`;

/*网关升级脚本(V4.06.07-V4.06.08) START*/
DELIMITER ;;
DROP PROCEDURE IF EXISTS `GW_WR_MTTASKV4`;
CREATE DEFINER=`root`@`%` PROCEDURE `GW_WR_MTTASKV4`(
P_UID INT,
P_PTMSGID BIGINT,
	P_SENDSTATUS TINYINT UNSIGNED,
	P_RETFLAG TINYINT UNSIGNED,
	P_PKTOTAL TINYINT UNSIGNED,
	P_PHONECOUNT INT,
	P_SPLITLEN TINYINT UNSIGNED,
	P_MULTILEN1 TINYINT UNSIGNED,
	P_MULTILEN2 TINYINT UNSIGNED,
	P_SIGNLEN TINYINT UNSIGNED,
	P_ECID INT,
	P_USERID VARCHAR(11),
P_SPGATE VARCHAR(21),
	P_CPNO VARCHAR(21),
	P_RECVMTTIME DATETIME,
	P_MESSAGE VARCHAR(3000)  CHARSET 'GBK',
	P_SHOUJI VARCHAR(3500),
	P_FEEFLAG TINYINT UNSIGNED,
	P_SENDLEVEL TINYINT UNSIGNED,
	P_TASKID INT,
	P_ERRORCODE CHAR(7),
	P_TPUDHI TINYINT UNSIGNED,
	P_LONGMSGSEQ TINYINT UNSIGNED,
	P_MSGFMT TINYINT UNSIGNED,
	P_UNICOM TINYINT UNSIGNED,
  P_MOBILEAREA INT UNSIGNED,
  P_PKNUMBER TINYINT UNSIGNED,
  P_SVRTYPE VARCHAR(64),
  P_P1 VARCHAR(64),
  P_P2 VARCHAR(64),
  P_P3 VARCHAR(64),
  P_P4 VARCHAR(64),
  P_USERMSGID BIGINT,
  P_MODULEID INT,
  P_ATTIME BIGINT,
  P_VALIDTIME BIGINT,
  P_SENDTYPE TINYINT UNSIGNED,
  P_BATCHID BIGINT,
  P_AREACODE INT,
  P_CUSTID VARCHAR(64),
  P_EXDATA VARCHAR(64),
  P_LONGMSG VARCHAR(4000),
  P_TMPLID BIGINT,
  P_CHGRADE TINYINT,
  P_MSGTYPE TINYINT,
  P_RMSVALIDTM INT,
  P_RMSRPTFLAG TINYINT,
  P_PROTOCOLVER TINYINT,
  P_TMPLTYPE TINYINT,
  P_TITLE VARCHAR(40),
  P_SHOWAY VARCHAR(16),
  P_DLDWAY INT,
  P_DLDNEY INT,
  P_ISFREE INT,
  P_SHOWTIME BIGINT,
  P_SUID1 VARCHAR(64),
  P_LUID1 VARCHAR(64)
  )
  TOP:BEGIN
    DECLARE P_TMPMSGID BIGINT;
	DECLARE P_LOCATION INT;
	DECLARE P_START INT;
	DECLARE P_RESULTPHONE VARCHAR(21); #存储拆分后的字符
	DECLARE P_STRSPLIT VARCHAR(2);
	DECLARE P_LEN INT;
	DECLARE P_RESULTMSG VARCHAR(3000); #存储拆分后的字符
	DECLARE P_PKNUM INT;
	DECLARE P_TMPNUM INT;

    CREATE TEMPORARY TABLE IF NOT EXISTS P_TMP_WRMTTASKV2(UID INT,USERID VARCHAR(11),SPGATE VARCHAR(21),CPNO VARCHAR(21),
						PHONE VARCHAR(21),PTMSGID BIGINT,MESSAGE VARCHAR(3000),
						SENDSTATUS TINYINT,RETFLAG TINYINT,PKNUMBER TINYINT,
						PKTOTAL TINYINT,RECVMTTIME DATETIME,ECID INT,FEEFLAG TINYINT,
						SENDLEVEL TINYINT,TASKID INT,ERRORCODE CHAR(7),TPUDHI TINYINT,
						LONGMSGSEQ TINYINT,MSGFMT TINYINT,UNICOM TINYINT,MOBILEAREA INT,
						SVRTYPE VARCHAR(64),P1 VARCHAR(64),P2 VARCHAR(64),P3 VARCHAR(64),
						P4 VARCHAR(64),USERMSGID BIGINT,MODULEID INT,ATTIME BIGINT,VALIDTIME BIGINT,SENDTYPE INT,AREACODE INT,CUSTID VARCHAR(64),EXDATA VARCHAR(64),
						LONGMSG VARCHAR(4000),TMPLID BIGINT,CHGRADE TINYINT,MSGTYPE TINYINT,RMSVALIDTM INT,RMSRPTFLAG TINYINT,PROTOCOLVER TINYINT,TMPLTYPE TINYINT,TITLE VARCHAR(40),SHOWAY VARCHAR(16),DLDWAY INT,DLDNEY INT,ISFREE INT,SHOWTIME BIGINT,SUID1 VARCHAR(64),LUID1 VARCHAR(64));

	TRUNCATE TABLE P_TMP_WRMTTASKV2;

    SET P_LEN = CHAR_LENGTH(P_LONGMSG)-P_SIGNLEN;
	SET P_TMPNUM = 0;
	SET P_PKNUM = 1;
	SET P_STRSPLIT = ',';

    IF P_PHONECOUNT < 1 THEN #手机个数为0
		LEAVE TOP;
    END IF;

	IF P_MSGFMT=4 OR P_MSGFMT=248 OR P_MSGFMT=246 THEN
		SET P_SPLITLEN=140;
		SET P_MULTILEN1=134;
		SET P_MULTILEN2=134;
		SET P_SIGNLEN=0;
	END IF;

	IF P_MSGFMT=25 THEN
		IF NOT EXISTS (SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID=P_PTMSGID) THEN
		   INSERT INTO GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
		   RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
		   VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_PTMSGID,P_MESSAGE,P_SENDSTATUS,P_RETFLAG, P_PKNUMBER,P_PKTOTAL,
		   P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM, P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
        END IF;
	END IF;

	IF P_PHONECOUNT = 1 THEN #单发
        IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_PTMSGID) THEN
            IF P_PKTOTAL = 1 THEN
        		INSERT GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
        		RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,
        		P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
        		VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_PTMSGID,P_MESSAGE,P_SENDSTATUS,
        		P_RETFLAG,P_PKTOTAL,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,
        		P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
            ELSE
        		SET P_PKNUM = 1;
        		SET P_TMPMSGID = P_PTMSGID;
                IF P_PKTOTAL = 2 AND P_LEN <= P_MULTILEN1 THEN
    				SET P_RESULTMSG = SUBSTRING(P_MESSAGE,1,P_SPLITLEN);#拆分后的字符
    				SET P_TMPMSGID = P_TMPMSGID;
    				IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_PTMSGID) THEN
        				INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
        				RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
        				VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,
        				P_RETFLAG,P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
    				END IF;

    				SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_SPLITLEN+1,P_LEN-P_SPLITLEN+P_SIGNLEN);#拆分后的字符
    				SET P_TMPMSGID = P_TMPMSGID+17179869184;
    				SET P_PKNUM = P_PKNUM+1;
    				IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_PTMSGID) THEN
        				INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
        				PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
        				VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
        				P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
                    END IF;
                ELSE
                    WHILE P_PKNUM <= P_PKTOTAL DO
						IF P_PKNUM = P_PKTOTAL THEN
							SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_TMPNUM+1,P_MULTILEN2+P_SIGNLEN);#拆分后的字符
							SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
							#PRINT P_RESULTMSG
						ELSEIF P_PKNUM = P_PKTOTAL-1 THEN
							IF P_LEN-(P_PKNUM-1)*P_MULTILEN1 > P_MULTILEN2 AND P_LEN-(P_PKNUM-1)*P_MULTILEN1 <= P_MULTILEN1 THEN
								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_LEN-(P_PKNUM-1)*P_MULTILEN1-1);
								SET P_TMPNUM = P_LEN-1;
							ELSE
								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);
								SET P_TMPNUM = (P_PKNUM-1)*P_MULTILEN1+P_MULTILEN1;
						    END IF;

							SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
						ELSE
							SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);#拆分后的字符
							#PRINT P_RESULTMSG
							SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
						END IF;

						IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    						INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    						PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
    						VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    						P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
                        END IF;

						SET P_PKNUM = P_PKNUM+1;

                    END WHILE;
                END IF;
            		INSERT INTO GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
            		PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
            		SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,
            		A.PKNUMBER,A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME,A.SENDTYPE,A.AREACODE,A.CUSTID,A.EXDATA,A.LONGMSG,A.TMPLID,A.CHGRADE,A.MSGTYPE,A.RMSVALIDTM,A.RMSRPTFLAG,A.PROTOCOLVER,A.TMPLTYPE,A.TITLE,A.SHOWAY,A.DLDWAY,A.DLDNEY,A.ISFREE,A.SHOWTIME,A.SUID1,A.LUID1 FROM P_TMP_WRMTTASKV2 A;
                END IF;

		END IF;
	ELSE #群发
		SET P_SHOUJI = CONCAT(P_STRSPLIT , P_SHOUJI , P_STRSPLIT);
		SET P_LOCATION = LOCATE(P_STRSPLIT,P_SHOUJI);

		IF P_PKTOTAL < 1 THEN #没有短信内容
			LEAVE TOP;
        END IF;

		IF P_PKTOTAL >= 1 THEN #需要拆分长短信
			WHILE P_LOCATION <> 0 DO #拆分手机号码
				SET P_START = P_LOCATION;
				SET P_LOCATION = LOCATE(P_STRSPLIT,P_SHOUJI,P_START+1);
				IF P_LOCATION > 0 THEN
					SET P_RESULTPHONE = SUBSTRING(P_SHOUJI,P_START+1,P_LOCATION-P_START-1);#拆分后的字符
					#PRINT P_RESULTPHONE
					#IF P_RESULTPHONE <> ''
					SET P_TMPMSGID = P_PTMSGID;
					IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
						IF P_PKTOTAL = 1 THEN
							INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
							PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
							VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_MESSAGE,P_SENDSTATUS,P_RETFLAG,
							P_PKTOTAL,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
						ELSE
							SET P_PKNUM = 1;
							#SET P_TOTALSPLITNUM = P_PKTOTAL-1
							IF P_PKTOTAL = 2 AND P_LEN <= P_MULTILEN1 THEN
								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,1,P_SPLITLEN);#拆分后的字符
								SET P_TMPMSGID = P_TMPMSGID;
								IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    								INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    								PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
    								VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    								P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
                                END IF;

								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_SPLITLEN+1,P_LEN-P_SPLITLEN+P_SIGNLEN);#拆分后的字符
								SET P_TMPMSGID = P_TMPMSGID+17179869184;
								SET P_PKNUM = P_PKNUM+1;
								IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    								INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    								PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
    								VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    								P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
								END IF;
                             ELSE
								WHILE P_PKNUM <= P_PKTOTAL DO
									IF P_PKNUM = P_PKTOTAL THEN
										SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_TMPNUM+1,P_MULTILEN2+P_SIGNLEN);#拆分后的字符
										SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
									ELSEIF P_PKNUM = P_PKTOTAL-1 THEN
										IF P_LEN-(P_PKNUM-1)*P_MULTILEN1 > P_MULTILEN2 AND P_LEN-(P_PKNUM-1)*P_MULTILEN1 <= P_MULTILEN1 THEN
											SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_LEN-(P_PKNUM-1)*P_MULTILEN1-1);
											SET P_TMPNUM = P_LEN-1;
										ELSE
											SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);
											SET P_TMPNUM = (P_PKNUM-1)*P_MULTILEN1+P_MULTILEN1;
										END IF;
										SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
									ELSE
										SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);#拆分后的字符
										#PRINT P_RESULTMSG
										SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
									END IF;
									IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    									INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    									PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
    									VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    									P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
									END IF;
                                    SET P_PKNUM = P_PKNUM+1;
								END WHILE;
                             END IF; #END OF P_PKTOTAL = 2
						  END IF; # END OF P_PKTOTAL = 1
					   END	IF;	#NOT EXISTS(SELECT
					   SET P_PTMSGID = P_PTMSGID+1;
                   END IF;
				END WHILE;
			END IF;

			INSERT INTO GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
			PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
			SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,
			A.PKNUMBER,A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME,A.SENDTYPE,A.AREACODE,A.CUSTID,A.EXDATA,A.LONGMSG,A.TMPLID,A.CHGRADE,A.MSGTYPE,A.RMSVALIDTM,A.RMSRPTFLAG,A.PROTOCOLVER,A.TMPLTYPE,A.TITLE,A.SHOWAY,A.DLDWAY,A.DLDNEY,A.ISFREE,A.SHOWTIME,A.SUID1,A.LUID1 FROM P_TMP_WRMTTASKV2 A;
	  END IF;
END;;
DELIMITER ;

DELIMITER ;;
DROP PROCEDURE IF EXISTS `GW_WR_MTTASKSRV4`;
CREATE DEFINER=`root`@`%` PROCEDURE `GW_WR_MTTASKSRV4`(P_UID INT,P_PTMSGID BIGINT,
	P_SENDSTATUS TINYINT UNSIGNED,
	P_RETFLAG TINYINT UNSIGNED,
	P_PKTOTAL TINYINT UNSIGNED,
	P_PHONECOUNT INT,
	P_ECID INT,
	P_USERID VARCHAR(11),
	P_SPGATE VARCHAR(21),
	P_CPNO VARCHAR(21),
	P_RECVMTTIME DATETIME,
	P_MESSAGE VARCHAR(3000)  CHARSET 'GBK',
	P_SHOUJI VARCHAR(3500),
	P_FEEFLAG TINYINT UNSIGNED,
	P_PKNUMBER TINYINT UNSIGNED,
	P_SENDLEVEL TINYINT UNSIGNED,
	P_TASKID INT,
	P_ERRORCODE CHAR(7),
	P_TPUDHI TINYINT UNSIGNED,
	P_LONGMSGSEQ TINYINT UNSIGNED,
	P_MSGFMT TINYINT UNSIGNED,
	P_UNICOM TINYINT UNSIGNED,
	P_MOBILEAREA INT,
	P_SVRTYPE VARCHAR(64),
	P_P1 VARCHAR(64),
	P_P2 VARCHAR(64),
	P_P3 VARCHAR(64),
	P_P4 VARCHAR(64),
	P_USERMSGID BIGINT,
	P_MODULEID INT,
	P_ATTIME BIGINT,
	P_VALIDTIME BIGINT,
	P_SENDTYPE INT,
	P_BATCHID BIGINT,
	P_AREACODE INT,
	P_CUSTID VARCHAR(64),
	P_EXDATA VARCHAR(64),
	P_LONGMSG VARCHAR(4000),
	P_TMPLID BIGINT,
	P_CHGRADE TINYINT,
	P_MSGTYPE TINYINT,
	P_RMSVALIDTM INT,
	P_RMSRPTFLAG TINYINT,
	P_PROTOCOLVER TINYINT,
    P_TMPLTYPE TINYINT,
    P_TITLE VARCHAR(40),
    P_SHOWAY VARCHAR(16),
    P_DLDWAY INT,
    P_DLDNEY INT,
    P_ISFREE INT,
    P_SHOWTIME BIGINT,
	P_SUID1 VARCHAR(64),
	P_LUID1 VARCHAR(64))
TOP:BEGIN
    DECLARE P_LOCATION INT;
	DECLARE P_START INT;
	DECLARE P_RESULTPHONE VARCHAR(21); #存储拆分后的字符
	DECLARE P_STRSPLIT VARCHAR(2);

    CREATE TEMPORARY TABLE IF NOT EXISTS P_TMP_MTSR(UID INT,USERID VARCHAR(11),SPGATE VARCHAR(21),CPNO VARCHAR(21),
						PHONE VARCHAR(21),PTMSGID BIGINT ,MESSAGE VARCHAR(3000),
						SENDSTATUS TINYINT UNSIGNED,RETFLAG TINYINT UNSIGNED,PKNUMBER TINYINT UNSIGNED,
						PKTOTAL TINYINT UNSIGNED,RECVMTTIME DATETIME,ECID INT,FEEFLAG TINYINT UNSIGNED,
						SENDLEVEL TINYINT UNSIGNED,TASKID INT,ERRORCODE CHAR(7),TPUDHI TINYINT UNSIGNED,
						LONGMSGSEQ TINYINT UNSIGNED,MSGFMT TINYINT UNSIGNED,UNICOM TINYINT UNSIGNED,MOBILEAREA INT,
						SVRTYPE VARCHAR(64),P1 VARCHAR(64),P2 VARCHAR(64),P3 VARCHAR(64),
						P4 VARCHAR(64),USERMSGID BIGINT,MODULEID INT,ATTIME BIGINT,VALIDTIME BIGINT,SENDTYPE INT,AREACODE INT,CUSTID VARCHAR(64),EXDATA VARCHAR(64),
						LONGMSG VARCHAR(4000),TMPLID BIGINT,CHGRADE TINYINT,MSGTYPE TINYINT,RMSVALIDTM INT,RMSRPTFLAG TINYINT,PROTOCOLVER TINYINT,TMPLTYPE TINYINT,TITLE VARCHAR(40),SHOWAY VARCHAR(16),DLDWAY INT,DLDNEY INT,ISFREE INT,SHOWTIME BIGINT,SUID1 VARCHAR(64),LUID1 VARCHAR(64));
    TRUNCATE TABLE P_TMP_MTSR;

    SET P_STRSPLIT = ',';

    IF P_PHONECOUNT < 1 THEN #手机个数为0
		LEAVE TOP;
    END IF;

	IF P_PHONECOUNT = 1 THEN #单发
		IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_PTMSGID) THEN
		   INSERT GW_MT_TASK_BAK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG,
		   PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG, SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,
		   P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
		   VALUES(P_UID,P_USERID, P_SPGATE, P_CPNO, P_SHOUJI, P_PTMSGID, P_MESSAGE, P_SENDSTATUS, P_RETFLAG,
		   P_PKNUMBER, P_PKTOTAL, P_RECVMTTIME, P_ECID, P_FEEFLAG, P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,
		   P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
		END IF;
	ELSE #群发
		SET P_SHOUJI = CONCAT(P_STRSPLIT , P_SHOUJI , P_STRSPLIT);
		SET P_LOCATION = LOCATE(P_STRSPLIT,P_SHOUJI);
		WHILE P_LOCATION <> 0 DO #拆分手机号码
			SET P_START = P_LOCATION;
			SET P_LOCATION = LOCATE(P_STRSPLIT,P_SHOUJI,P_START+1);
			IF P_LOCATION > 0 THEN
				SET P_RESULTPHONE = SUBSTRING(P_SHOUJI,P_START+1,P_LOCATION-P_START-1);#拆分后的字符
				#PRINT P_RESULTPHONE
				IF P_RESULTPHONE <> '' THEN
					IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_PTMSGID) THEN
					   INSERT P_TMP_MTSR(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG,
					   PKNUMBER, PKTOTAL, RECVMTTIME,ECID, FEEFLAG, SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
					   VALUES(P_UID,P_USERID, P_SPGATE, P_CPNO, P_RESULTPHONE, P_PTMSGID, P_MESSAGE, P_SENDSTATUS, P_RETFLAG,
					   P_PKNUMBER, P_PKTOTAL, P_RECVMTTIME, P_ECID, P_FEEFLAG, P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
                    END IF;
					SET P_PTMSGID = P_PTMSGID+1;
				END IF;
			END IF;
		END	WHILE;

		INSERT INTO GW_MT_TASK_BAK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG,
		PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG, SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,
		P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
		SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,
		A.PKNUMBER,A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,
		A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME ,A.SENDTYPE,P_BATCHID,P_AREACODE,A.CUSTID,A.EXDATA,A.LONGMSG,A.TMPLID,A.CHGRADE,A.MSGTYPE,A.RMSVALIDTM,A.RMSRPTFLAG,A.PROTOCOLVER,A.TMPLTYPE,A.TITLE,A.SHOWAY,A.DLDWAY,A.DLDNEY,A.ISFREE,A.SHOWTIME,A.SUID1,A.LUID1 FROM P_TMP_MTSR A;
	END IF;
/*
,P_SVRTYPE VARCHAR(64),P_P1 VARCHAR(64),P_P2 VARCHAR(64),P_P3 VARCHAR(64),P_P4 VARCHAR(64),P_USERMSGID BIGINT,P_MODULEID INT,P_ATTIME BIGINT,P_VALIDTIME BIGINT
,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME
,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME
*/
END;;
DELIMITER ;

CALL S_WR_VERINFO('4.06.08');
/*网关升级脚本(V4.06.07-V4.06.08) END*/
 
/* EMP升级脚本   START */
CREATE PROCEDURE ADDCOL()
BEGIN
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND COLUMN_NAME='ACCABILITY' AND TABLE_NAME='USERDATA') THEN
	ALTER TABLE USERDATA ADD COLUMN ACCABILITY int(11) NOT NULL DEFAULT 0;
	UPDATE USERDATA SET ACCABILITY = ACCOUNTTYPE;
END IF;
END;
CALL ADDCOL();
DROP PROCEDURE ADDCOL;


INSERT INTO LF_PAGEFIELD(MODLEID,PAGEID,FIELDID,FIELDNAME,FIELD,FIELDTYPE,SUBFIELDVALUE,SUBFIELDNAME,FILEDSHOW,SUBFIELD,DEFAULTVALUE,SORTVALUE,ISFIELD)
SELECT '2000-140','2000-1400',100004,'富信通道账户','富信通道账户',1,4,'富信通道账户',0,0,4,3,1 FROM DUAL
WHERE NOT EXISTS(SELECT MODLEID FROM LF_PAGEFIELD WHERE FIELDNAME='富信通道账户' AND MODLEID = '2000-140');
/*EMP升级脚本    END*/

DROP PROCEDURE IF EXISTS `LF_PVERV0`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `LF_PVERV0`(
    VERSIONSTR VARCHAR(32),
    DBVERSIONSTR VARCHAR(32),
    WBSVERSION VARCHAR(32),
    SPGATEVERSION VARCHAR(32),
    NUM INT,
    TOTALSTR INT
)
BEGIN
	/*EMP产品版本记录*/
	/*EMP-WEB*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=1000) THEN
		INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
		VALUES(1000,1000,VERSIONSTR,NOW(),NOW(),'EMP-WEB');
	ELSE
		UPDATE LF_VERSION SET UPDATETIME=NOW(),VERSION=VERSIONSTR WHERE PRODUCT_ID=1000 AND PROCESS_ID=1000;
	END IF;
	/*EMP_GATEWAY*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=2000) THEN
		INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
		VALUES(1000,2000,WBSVERSION,NOW(),NOW(),'EMP_GATEWAY');
	ELSE
		UPDATE LF_VERSION SET UPDATETIME=NOW(),VERSION=WBSVERSION WHERE  PRODUCT_ID=1000 AND PROCESS_ID=2000;
	END IF;
	/*SMT_SPGATE*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=3000) THEN
		INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
		VALUES(1000,3000,SPGATEVERSION,NOW(),NOW(),'SMT_SPGATE');
	ELSE
		UPDATE LF_VERSION SET UPDATETIME=NOW(),VERSION=SPGATEVERSION WHERE  PRODUCT_ID=1000 AND PROCESS_ID=3000;
	END IF;
	/*EMP产品版本历史记录*/
	/*EMP-WEB*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION_HIS WHERE VERSION=VERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=1000) THEN
			INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO,ISRELEASE,VERSIONINFO)
			VALUES(1000,1000,VERSIONSTR,NOW(),NOW(),'EMP-WEB',1,'1.后端账号和SP账号短富信区分');
	ELSE
			UPDATE LF_VERSION_HIS SET UPDATETIME=NOW(),ISRELEASE=1,VERSIONINFO='1.后端账号和SP账号短富信区分' WHERE PRODUCT_ID=1000 AND PROCESS_ID=1000;
	END IF;
	/*EMP_GATEWAY*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION_HIS WHERE VERSION=WBSVERSION AND PRODUCT_ID=1000 AND PROCESS_ID=2000) THEN
		INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
		VALUES(1000,2000,WBSVERSION,NOW(),NOW(),'EMP_GATEWAY');
	ELSE
		UPDATE LF_VERSION_HIS SET UPDATETIME=NOW() WHERE  PRODUCT_ID=1000 AND PROCESS_ID=2000;
	END IF;
	/*SMT_SPGATE*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION_HIS WHERE VERSION=SPGATEVERSION AND PRODUCT_ID=1000 AND PROCESS_ID=3000) THEN
		INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
		VALUES(1000,3000,SPGATEVERSION,NOW(),NOW(),'SMT_SPGATE');
	ELSE
		UPDATE LF_VERSION_HIS SET UPDATETIME=NOW() WHERE  PRODUCT_ID=1000 AND PROCESS_ID=3000;
	END IF;
		IF NOT EXISTS(SELECT * FROM LF_DB_SCRIPT WHERE VERSION=DBVERSIONSTR) THEN
			/*EMP产品数据库版本信息表*/
			INSERT INTO LF_DB_SCRIPT(VERSION,UPDATETIME,CREATETIME,CURRENT_NO,TOTAL,STATE,MEMO)
			VALUES(DBVERSIONSTR,NOW(),NOW(),@NUM,@TOTAL,2,'网关脚本更改');
		ELSE
			UPDATE LF_DB_SCRIPT SET STATE=2,UPDATETIME=NOW(),MEMO='网关脚本更改' WHERE  VERSION=DBVERSIONSTR AND CURRENT_NO=@NUM AND TOTAL=@TOTAL;
		END IF;
END     
;; DELIMITER ;
CALL LF_PVERV0('7.3.1.521.SP1','73.01','8.6.1.216','6.1.50.342',1,1);
DROP PROCEDURE IF EXISTS `LF_PVERV0`;
/*****V71.00-V73.00 END*/