BEGIN ATOMIC 
DECLARE DBVERSIONSTR VARCHAR(32);
DECLARE NUMSTR INT;
DECLARE TOTALSTR INT;
SET DBVERSIONSTR = '6.35';
SET NUMSTR=3;
SET TOTALSTR=3;
IF NOT EXISTS(SELECT * FROM LF_DB_SCRIPT WHERE VERSION=DBVERSIONSTR AND CURRENT_NO=NUMSTR AND TOTAL=TOTALSTR) THEN
--EMP产品数据库版本信息表
INSERT INTO LF_DB_SCRIPT(VERSION,UPDATETIME,CREATETIME,CURRENT_NO,TOTAL,STATE,MEMO)
VALUES(DBVERSIONSTR,CURRENT TIMESTAMP,CURRENT TIMESTAMP,NUMSTR,TOTALSTR,1,'3号脚本');
END IF;
END;



-- Start of generated script for 192.169.1.174-db174-EMPDCD (db2admin)
--  Oct-08-2015 at 14:21:24

CREATE TABLE "LF_ACCOUNT_BIND"
 ("ID"            BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "SPUSERID"      VARCHAR(32),
  "BUS_CODE"      VARCHAR(32),
  "SYS_GUID"      BIGINT,
  "DEP_CODE"      VARCHAR(32),
  "MENU_CODE"     VARCHAR(32),
  "BIND_TYPE"     SMALLINT,
  "CREATETIME"    TIMESTAMP,
  "CREATER_GUID"  BIGINT,
  "DESCRIPTION"   VARCHAR(512),
  "CORP_CODE"     VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_ACCOUNT_BIND"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_ADDRBOOKS"
 ("ADDR_ID"    BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "GUID"       BIGINT,
  "ADDR_TYPE"  SMALLINT,
  "CORP_CODE"  VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_ADDRBOOKS"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_ALSMSRECORD"
 ("ID"          BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "MSGID"       BIGINT                    DEFAULT 0,
  "USERID"      VARCHAR(11)     NOT NULL  DEFAULT '',
  "SPGATE"      VARCHAR(21)     NOT NULL  DEFAULT '0',
  "PHONE"       VARCHAR(21)     NOT NULL  DEFAULT '0',
  "SENDSTATUS"  INTEGER         NOT NULL  DEFAULT 0,
  "SENDFLAG"    INTEGER         NOT NULL  DEFAULT 0,
  "ERRORCODE"   CHARACTER(7)    NOT NULL  DEFAULT '',
  "UNICOM"      INTEGER         NOT NULL  DEFAULT 0,
  "SENDTIME"    TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "RECVTIME"    TIMESTAMP,
  "MESSAGE"     VARCHAR(3000)   NOT NULL  DEFAULT ''
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_ALSMSRECORD"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APPMAINPAGEHIS"
 ("ID"        BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "TASKID"    BIGINT,
  "FROMUSER"  VARCHAR(25)     NOT NULL,
  "TOUSER"    VARCHAR(25)     NOT NULL,
  "TOTYPE"    INTEGER         NOT NULL,
  "SENDTIME"  TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "SENDSTATE" SMALLINT,
  "USER_ID"   BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APPMAINPAGEHIS"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_ACCOUNT"
 ("A_ID"          BIGINT          NOT NULL,
  "FAKE_ID"       VARCHAR(32),
  "NAME"          VARCHAR(64),
  "CODE"          VARCHAR(256)    NOT NULL,
  "OPEN_ID"       VARCHAR(64),
  "IMG"           VARCHAR(128),
  "TYPE"          SMALLINT,
  "IS_APPROVE"    SMALLINT                  DEFAULT 0,
  "QRCODE"        VARCHAR(128),
  "INFO"          VARCHAR(2048),
  "URL"           VARCHAR(64),
  "TOKEN"         VARCHAR(32),
  "BINDTIME"      TIMESTAMP,
  "CORP_CODE"     VARCHAR(64)     NOT NULL,
  "CREATETIME"    TIMESTAMP       NOT NULL,
  "MODIFYTIME"    TIMESTAMP,
  "GRANT_TYPE"    VARCHAR(64),
  "APPID"         VARCHAR(64),
  "SECRET"        VARCHAR(64),
  "ACCESS_TOKEN"  VARCHAR(256),
  "ACCESS_TIME"   TIMESTAMP,
  "RELEASE_TIME"  TIMESTAMP,
  "ACCESS_COUNT"  VARCHAR(64),
  "SYNC_STATE"    SMALLINT                  DEFAULT 0,
  "SYNC_TIME"     TIMESTAMP,
  "PORT"          INTEGER,
  "CREATER"       BIGINT,
  "PWD"           VARCHAR(128),
  "FILESVR_URL"   VARCHAR(512),
  "APP_TYPE"      SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_ACCOUNT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_CLIDOWLOAD"
 ("CLID"            BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "A_ID"            BIGINT,
  "IOSPUSHDATE"     TIMESTAMP,
  "ADPUSHDATE"      TIMESTAMP,
  "IOSFILESIZE"     VARCHAR(30),
  "AZFILESIZE"      VARCHAR(30),
  "IOSFILEVERSION"  VARCHAR(60),
  "ADFILEVERSION"   VARCHAR(60),
  "IOSFILEURL"      VARCHAR(600),
  "ADFILEURL"       VARCHAR(600),
  "IOSFILEDESCR"    VARCHAR(90),
  "ADFILEDESCR"     VARCHAR(90),
  "CORP_CODE"       VARCHAR(64),
  "IOSUPDATEUSER"   VARCHAR(64),
  "IOSUPDATEDATE"   TIMESTAMP,
  "ADUPDATEUSER"    VARCHAR(64),
  "ADUPDATEDATE"    TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_CLIDOWLOAD"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_FOMEITEM"
 ("FIELD_ID"    BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "FILED_TYPE"  VARCHAR(8),
  "FIELD_VALUE" VARCHAR(512),
  "Q_ID"        BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_FOMEITEM"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_FOMEVALVE"
 ("V_ID"         BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "F_ID"         BIGINT,
  "Q_ID"         BIGINT,
  "FIELD_ID"     BIGINT,
  "FIELD_VALUE"  BIGINT,
  "FIELD_TYPE"   VARCHAR(8),
  "WC_ID"        VARCHAR(64),
  "CORP_CODE"    VARCHAR(64),
  "CREATETIME"   TIMESTAMP,
  "AID"          BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_FOMEVALVE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_FOM_INFO"
 ("F_ID"           BIGINT          NOT NULL,
  "TYPE_ID"        BIGINT,
  "TITLE"          VARCHAR(512),
  "NOTE"           VARCHAR(512),
  "PUBLISH_STATE"  SMALLINT,
  "URL"            VARCHAR(512),
  "SUBMIT_COUNT"   INTEGER                   DEFAULT 0,
  "SEQ_NUM"        INTEGER,
  "IS_SYSTEM"      SMALLINT,
  "CORP_CODE"      VARCHAR(64)     NOT NULL,
  "CREATETIME"     TIMESTAMP,
  "MODITYTIME"     TIMESTAMP,
  "PARENT_ID"      BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_FOM_INFO"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_FOM_QUESN"
 ("Q_ID"        BIGINT          NOT NULL,
  "F_ID"        BIGINT,
  "FILED_TYPE"  VARCHAR(8),
  "TITLE"       VARCHAR(512),
  "FORM_DATA"   VARCHAR(2048),
  "SEQ_NUM"     INTEGER,
  "CORP_CODE"   VARCHAR(64)     NOT NULL,
  "CREATETIME"  TIMESTAMP,
  "MODITYTIME"  TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_FOM_QUESN"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_FOM_TYPE"
 ("TYPE_ID"    BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "NAME"       VARCHAR(512),
  "PARENT_ID"  BIGINT,
  "SEQ_NUM"    INTEGER,
  "IS_SYSTEM"  SMALLINT,
  "CORP_CODE"  VARCHAR(64),
  "CREATETIME" TIMESTAMP,
  "MODITYTIME" TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_FOM_TYPE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_KEYWORD"
 ("K_ID"       BIGINT          NOT NULL,
  "NAME"       VARCHAR(32)     NOT NULL,
  "TYPE"       SMALLINT                  DEFAULT 0,
  "A_ID"       BIGINT,
  "CORP_CODE"  VARCHAR(64)     NOT NULL,
  "CREATETIME" TIMESTAMP       NOT NULL,
  "MODIFYTIME" TIMESTAMP,
  "APP_TYPE"   SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_KEYWORD"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_LBS_PIOS"
 ("P_ID"       BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "CITY_ID"    SMALLINT,
  "LAT"        VARCHAR(64)     NOT NULL,
  "LNG"        VARCHAR(64)     NOT NULL,
  "TITLE"      VARCHAR(64),
  "KEYWORD"    VARCHAR(64),
  "TELEPHONE"  VARCHAR(32),
  "ADDRESS"    VARCHAR(128),
  "NOTE"       VARCHAR(512),
  "A_ID"       VARCHAR(128)    NOT NULL,
  "CORP_CODE"  VARCHAR(64)     NOT NULL,
  "CREATETIME" TIMESTAMP,
  "MODITYTIME" TIMESTAMP,
  "DISTANCE"   VARCHAR(32)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_LBS_PIOS"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_LBS_PUSH"
 ("PUSH_ID"     BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PUSHTYPE"    SMALLINT,
  "IMGURL"      VARCHAR(256),
  "NOTE"        VARCHAR(512),
  "RADIUS"      VARCHAR(16),
  "AUTORADIUS"  SMALLINT,
  "PUSHCOUNT"   SMALLINT,
  "AUTOMORE"    SMALLINT,
  "CORP_CODE"   VARCHAR(64)     NOT NULL,
  "CREATETIME"  TIMESTAMP,
  "MODITYTIME"  TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_LBS_PUSH"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_LBS_USER"
 ("UP_ID"      BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "LAT"        VARCHAR(64)     NOT NULL,
  "LNG"        VARCHAR(64)     NOT NULL,
  "A_ID"       VARCHAR(128)    NOT NULL,
  "OPENID"     VARCHAR(128)    NOT NULL,
  "CORP_CODE"  VARCHAR(64)     NOT NULL,
  "MODITYTIME" TIMESTAMP       NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_LBS_USER"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_MENU"
 ("M_ID"        BIGINT          NOT NULL,
  "M_NAME"      VARCHAR(32)     NOT NULL,
  "M_TYPE"      INTEGER         NOT NULL,
  "M_KEY"       VARCHAR(64),
  "M_URL"       VARCHAR(256),
  "M_HIDDEN"    INTEGER,
  "M_ORDER"     INTEGER         NOT NULL,
  "P_ID"        BIGINT,
  "T_ID"        BIGINT,
  "MSG_TEXT"    VARCHAR(4000),
  "MSG_XML"     VARCHAR(4000),
  "A_ID"        BIGINT          NOT NULL,
  "CORP_CODE"   VARCHAR(64)     NOT NULL,
  "CREATETIME"  TIMESTAMP       NOT NULL,
  "APP_TYPE"    SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_MENU"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_MOCACHE"
 ("ID"            BIGINT          NOT NULL,
  "MSGID"         BIGINT,
  "READ_STATE"    INTEGER         NOT NULL,
  "SEND_STATE"    INTEGER         NOT NULL  DEFAULT 1,
  "SENDED_COUNT"  INTEGER         NOT NULL  DEFAULT 0,
  "SERIAL"        VARCHAR(100)    NOT NULL,
  "ECODE"         VARCHAR(64)     NOT NULL,
  "APPID"         BIGINT,
  "FROMJID"       VARCHAR(64)     NOT NULL,
  "FNAME"         VARCHAR(64),
  "TOJID"         VARCHAR(2048),
  "TNAME"         VARCHAR(64),
  "VALIDITY"      BIGINT,
  "MSG_SRC"       INTEGER,
  "BODY"          VARCHAR(5120),
  "MSG_TYPE"      INTEGER         NOT NULL,
  "TOTYPE"        INTEGER,
  "CREATETIME"    TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "EMPTYPE"       INTEGER,
  "PACKETID"      VARCHAR(32),
  "SEND_RESULT"   INTEGER,
  "OUTLINEMSG"    INTEGER
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_MOCACHE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_MSGCACHE"
 ("ID"            BIGINT          NOT NULL,
  "MSGID"         BIGINT,
  "READ_STATE"    INTEGER         NOT NULL,
  "SEND_STATE"    INTEGER         NOT NULL  DEFAULT 1,
  "SENDED_COUNT"  INTEGER         NOT NULL  DEFAULT 0,
  "SERIAL"        VARCHAR(100)    NOT NULL,
  "ECODE"         VARCHAR(64)     NOT NULL,
  "APPID"         BIGINT,
  "FROMJID"       VARCHAR(64)     NOT NULL,
  "FNAME"         VARCHAR(64),
  "TOJID"         VARCHAR(2048)   NOT NULL,
  "TNAME"         VARCHAR(64),
  "VALIDITY"      BIGINT,
  "MSG_SRC"       INTEGER,
  "BODY"          VARCHAR(5120),
  "MSG_TYPE"      INTEGER         NOT NULL,
  "TOTYPE"        INTEGER,
  "CREATETIME"    TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "EMPTYPE"       INTEGER,
  "PACKETID"      VARCHAR(32),
  "SEND_RESULT"   INTEGER,
  "HAS_CONTENT"   INTEGER
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_MSGCACHE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_MSGCONTENT"
 ("ID"        BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "CACHE_ID"  BIGINT,
  "MSG_TYPE"  INTEGER,
  "CONTENT"   VARCHAR(4000)             DEFAULT '',
  "SORT_NUM"  INTEGER
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_MSGCONTENT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_MTMSG"
 ("ID"              BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "MSG_ID"          VARCHAR(64)     NOT NULL,
  "APP_MSG_ID"      VARCHAR(64)     NOT NULL,
  "TASKID"          BIGINT,
  "MSG_TYPE"        SMALLINT        NOT NULL,
  "APPACOUNT"       VARCHAR(25),
  "TOUSERNAME"      VARCHAR(1024)   NOT NULL,
  "USERID"          BIGINT,
  "SENDSTATE"       SMALLINT,
  "TITLE"           VARCHAR(64),
  "CONTENT"         VARCHAR(2048),
  "MSG_XML"         VARCHAR(4000),
  "MSG_TEXT"        VARCHAR(4000),
  "PARENT_ID"       BIGINT,
  "CORP_CODE"       VARCHAR(64),
  "CREATETIME"      TIMESTAMP       NOT NULL,
  "APPUSERACCOUNT"  VARCHAR(256),
  "RPT_STATE"       VARCHAR(25),
  "SENDMSGTYPE"     INTEGER         NOT NULL,
  "RECRPTTIME"      TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_MTMSG"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_MTTASK"
 ("ID"            BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "TASKID"        BIGINT          NOT NULL,
  "TITLE"         VARCHAR(64),
  "MSG"           VARCHAR(2048),
  "MSG_URL"       VARCHAR(512),
  "MSG_LOCALURL"  VARCHAR(512),
  "MSG_TYPE"      SMALLINT,
  "APPACOUNT"     VARCHAR(25),
  "BIGINTIME"     TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "ENDTIME"       TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "SENDSTATE"     SMALLINT,
  "SUB_COUNT"     BIGINT,
  "SUC_COUNT"     BIGINT,
  "FAI_COUNT"     BIGINT,
  "READ_COUNT"    BIGINT,
  "UNREAD_COUNT"  BIGINT,
  "USER_ID"       BIGINT,
  "CORP_CODE"     VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_MTTASK"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_MW_CLIENT"
 ("WC_ID"           BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "FAKE_ID"         VARCHAR(32),
  "G_ID"            BIGINT,
  "PHONE"           VARCHAR(30),
  "UNAME"           VARCHAR(32),
  "DESCR"           VARCHAR(512),
  "VERIFYTIME"      TIMESTAMP,
  "U_ID"            BIGINT,
  "GUID"            BIGINT,
  "SUBSCRIBE"       VARCHAR(11),
  "NICK_NAME"       VARCHAR(32),
  "SEX"             VARCHAR(11),
  "CITY"            VARCHAR(15),
  "PROVINCE"        VARCHAR(15),
  "COUNTRY"         VARCHAR(15),
  "LANGUAGE"        VARCHAR(15),
  "HEAD_IMG_URL"    VARCHAR(512),
  "SUBSCRIBE_TIME"  TIMESTAMP,
  "CORP_CODE"       VARCHAR(64),
  "CREATETIME"      TIMESTAMP,
  "MODIFYTIME"      TIMESTAMP,
  "OPEN_ID"         VARCHAR(64),
  "A_ID"            BIGINT,
  "LOCAL_IMG_URL"   VARCHAR(512),
  "APP_CODE"        VARCHAR(256)    NOT NULL,
  "AGE"             BIGINT,
  "SYN_ID"          INTEGER,
  "UTYPE"           INTEGER,
  "QQ"              VARCHAR(32),
  "EMAIL"           VARCHAR(64),
  "ECODE"           VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_MW_CLIENT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_MW_GPMEM"
 ("G_ID"     INTEGER,
  "GM_USER"  INTEGER,
  "GM_STATU" INTEGER,
  "APP_TYPE" INTEGER
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_MW_GPMEM"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_MW_GROUP"
 ("G_ID"       BIGINT          NOT NULL,
  "WG_ID"      BIGINT,
  "NAME"       VARCHAR(32),
  "COUNT"      VARCHAR(11),
  "A_ID"       BIGINT,
  "CORP_CODE"  VARCHAR(64)     NOT NULL,
  "CREATETIME" TIMESTAMP       NOT NULL,
  "MODIFYTIME" TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_MW_GROUP"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_OL_GPMEM"
 ("G_ID"     BIGINT    NOT NULL,
  "GM_USER"  BIGINT,
  "GM_STATE" SMALLINT            DEFAULT 1,
  "APP_TYPE" SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_OL_GPMEM"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_OL_GPMSGID"
 ("GM_USER"      BIGINT,
  "MSG_ID"       BIGINT     DEFAULT 0,
  "UPDATE_TIME"  TIMESTAMP  DEFAULT CURRENT TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_OL_GPMSGID"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_OL_GROUP"
 ("GP_ID"        BIGINT          NOT NULL,
  "GP_NAME"      VARCHAR(32),
  "CREATE_USER"  BIGINT,
  "CREATE_TIME"  TIMESTAMP,
  "MOUNTCOUNT"   INTEGER                   DEFAULT 0,
  "APP_TYPE"     SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_OL_GROUP"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_OL_MSG"
 ("M_ID"       BIGINT          NOT NULL,
  "FROM_USER"  VARCHAR(32),
  "TO_USER"    VARCHAR(32),
  "SEND_TIME"  TIMESTAMP,
  "SERVER_NUM" VARCHAR(32),
  "MSG_TYPE"   VARCHAR(10),
  "MESSAGE"    VARCHAR(512),
  "PUSH_TYPE"  SMALLINT                  DEFAULT 0,
  "A_ID"       BIGINT,
  "APP_TYPE"   SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_OL_MSG"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_OL_MSGHIS"
 ("M_ID"       BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "FROM_USER"  VARCHAR(32),
  "TO_USER"    VARCHAR(32),
  "SEND_TIME"  TIMESTAMP,
  "SERVER_NUM" VARCHAR(32),
  "MSG_TYPE"   VARCHAR(10),
  "MESSAGE"    VARCHAR(512),
  "PUSH_TYPE"  SMALLINT                  DEFAULT 0,
  "A_ID"       BIGINT,
  "APP_TYPE"   SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_OL_MSGHIS"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_REVENT"
 ("EVT_ID"      BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "EVT_TYPE"    SMALLINT,
  "T_ID"        BIGINT,
  "A_ID"        BIGINT,
  "MSG_TEXT"    VARCHAR(4000),
  "MSG_XML"     VARCHAR(4000)   NOT NULL,
  "CORP_CODE"   VARCHAR(64)     NOT NULL,
  "CREATETIME"  TIMESTAMP       NOT NULL,
  "TITLE"       VARCHAR(64),
  "MODIFYTIME"  TIMESTAMP,
  "APP_TYPE"    SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_REVENT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_RIMG"
 ("RIMG_ID"      BIGINT          NOT NULL,
  "TITLE"        VARCHAR(64)     NOT NULL,
  "DESCRIPTION"  VARCHAR(4000),
  "PICURL"       VARCHAR(128),
  "LINK"         VARCHAR(128),
  "A_ID"         BIGINT,
  "CORP_CODE"    VARCHAR(64)     NOT NULL,
  "CREATETIME"   TIMESTAMP       NOT NULL,
  "MODIFYTIME"   TIMESTAMP,
  "SOURCE_URL"   VARCHAR(256),
  "SUMMARY"      VARCHAR(200)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_RIMG"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_RPTCACHE"
 ("ID"            BIGINT          NOT NULL,
  "MSGID"         BIGINT,
  "READ_STATE"    INTEGER,
  "SEND_STATE"    INTEGER         NOT NULL  DEFAULT 1,
  "SENDED_COUNT"  INTEGER         NOT NULL  DEFAULT 0,
  "SERIAL"        VARCHAR(100)    NOT NULL,
  "ECODE"         VARCHAR(64),
  "APPID"         BIGINT,
  "VALIDITY"      BIGINT,
  "ICODE"         INTEGER,
  "BODY"          VARCHAR(4000),
  "MSG_TYPE"      INTEGER,
  "CREATETIME"    TIMESTAMP       NOT NULL,
  "EMTYPE"        INTEGER,
  "PACKETID"      VARCHAR(32),
  "SEND_RESULT"   INTEGER,
  "ERRCODE"       VARCHAR(64),
  "USERNAME"      VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_RPTCACHE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_RTEXT"
 ("TET_ID"      BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "TET_TYPE"    SMALLINT                  DEFAULT 0,
  "T_ID"        BIGINT,
  "MSG_TEXT"    VARCHAR(4000),
  "MSG_XML"     VARCHAR(4000)   NOT NULL,
  "A_ID"        BIGINT,
  "CORP_CODE"   VARCHAR(64)     NOT NULL,
  "CREATETIME"  TIMESTAMP       NOT NULL,
  "TITLE"       VARCHAR(64),
  "MODIFYTIME"  TIMESTAMP,
  "APP_TYPE"    SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_RTEXT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_SIT_INFO"
 ("S_ID"         BIGINT          NOT NULL,
  "TYPE_ID"      BIGINT,
  "NAME"         VARCHAR(100),
  "URL"          VARCHAR(128),
  "IS_SYSTEM"    SMALLINT                  DEFAULT 0,
  "CORP_CODE"    VARCHAR(64)     NOT NULL,
  "CREATETIME"   TIMESTAMP,
  "MODITYTIME"   TIMESTAMP,
  "USERID"       BIGINT,
  "STATUS"       INTEGER         NOT NULL,
  "PUBLISHTIME"  TIMESTAMP,
  "VALIDITY"     BIGINT,
  "SERIAL"       VARCHAR(64),
  "MSG_ID"       VARCHAR(64),
  "FROMUSER"     VARCHAR(25),
  "TOUSER"       VARCHAR(25),
  "SENDTIME"     TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "SENDSTATE"    SMALLINT,
  "RECTIME"      TIMESTAMP,
  "CANCELTIME"   TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_SIT_INFO"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_SIT_PAGE"
 ("PAGE_ID"    BIGINT          NOT NULL,
  "S_ID"       BIGINT,
  "PAGE_TYPE"  VARCHAR(32),
  "NAME"       VARCHAR(32),
  "URL"        VARCHAR(128),
  "SEQ_NUM"    INTEGER,
  "CORP_CODE"  VARCHAR(64),
  "CREATETIME" TIMESTAMP,
  "MODITYTIME" TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_SIT_PAGE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_SIT_PLANT"
 ("PLANT_ID"      BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PLANT_TYPE"    VARCHAR(32),
  "PAGE_ID"       BIGINT,
  "NAME"          VARCHAR(100),
  "FEILD_NAMES"   VARCHAR(64),
  "FEILD_VALUES"  VARCHAR(4000),
  "CORP_CODE"     VARCHAR(64),
  "CREATETIME"    TIMESTAMP,
  "MODITYTIME"    TIMESTAMP,
  "S_ID"          BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_SIT_PLANT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_SIT_TYPE"
 ("TYPE_ID"     BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "NAME"        VARCHAR(32),
  "IS_DEFAULT"  SMALLINT,
  "PATTERN"     INTEGER                   DEFAULT 0,
  "IMG_URL"     VARCHAR(64),
  "IMG_URL0"    VARCHAR(64),
  "IMG_URL1"    VARCHAR(64),
  "IMG_URL2"    VARCHAR(64),
  "IMG_URL3"    VARCHAR(64),
  "IS_SYSTEM"   SMALLINT                  DEFAULT 0,
  "SEQ_NUM"     INTEGER,
  "CORP_CODE"   VARCHAR(64)     NOT NULL,
  "CREATETIME"  TIMESTAMP,
  "MODITYTIME"  TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_SIT_TYPE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_TC_MOMSG"
 ("MSG_ID"      BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "MSG_TYPE"    SMALLINT,
  "WC_ID"       BIGINT,
  "A_ID"        BIGINT,
  "TYPE"        SMALLINT,
  "MSG_XML"     VARCHAR(4000),
  "MSG_TEXT"    VARCHAR(4000),
  "PARENT_ID"   BIGINT,
  "CORP_CODE"   VARCHAR(64)     NOT NULL,
  "CREATETIME"  TIMESTAMP       NOT NULL,
  "MSG_JSON"    VARCHAR(4000),
  "FROMUSER"    VARCHAR(256)    NOT NULL,
  "TONAME"      VARCHAR(64),
  "TOUSER"      VARCHAR(256),
  "MSG_SRC"     INTEGER,
  "STATUS"      INTEGER,
  "SERIAL"      VARCHAR(64)     NOT NULL,
  "FROMNAME"    VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_TC_MOMSG"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_TC_MTMSG"
 ("MSG_ID"      BIGINT          NOT NULL,
  "MSG_TYPE"    SMALLINT        NOT NULL,
  "WC_ID"       BIGINT          NOT NULL,
  "A_ID"        BIGINT          NOT NULL,
  "TYPE"        SMALLINT        NOT NULL,
  "MSG_XML"     VARCHAR(4000)   NOT NULL,
  "MSG_TEXT"    VARCHAR(4000)   NOT NULL,
  "PARENT_ID"   BIGINT,
  "CORP_CODE"   VARCHAR(64)     NOT NULL,
  "CREATETIME"  TIMESTAMP       NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_TC_MTMSG"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_TEMPLATE"
 ("T_ID"        BIGINT          NOT NULL,
  "T_NAME"      VARCHAR(64)     NOT NULL,
  "MSG_TYPE"    SMALLINT,
  "MSG_XML"     VARCHAR(4000),
  "MSG_TEXT"    VARCHAR(4000),
  "IS_PUBLIC"   SMALLINT                  DEFAULT 0,
  "IS_DRAFT"    SMALLINT                  DEFAULT 0,
  "IS_DYNAMIC"  SMALLINT                  DEFAULT 0,
  "A_ID"        BIGINT,
  "CORP_CODE"   VARCHAR(64)     NOT NULL,
  "RIMG_IDS"    VARCHAR(255),
  "KEY_WORDSVO" VARCHAR(255),
  "CREATETIME"  TIMESTAMP       NOT NULL,
  "MODIFYTIME"  TIMESTAMP,
  "APP_TYPE"    SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_TEMPLATE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_TLINK"
 ("K_ID"      BIGINT    NOT NULL,
  "T_ID"      BIGINT    NOT NULL,
  "APP_TYPE"  SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_TLINK"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_ULINK"
 ("U_ID"  BIGINT  NOT NULL,
  "WC_ID" BIGINT  NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_ULINK"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_VERIFY"
 ("VF_ID"         BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "WC_ID"         BIGINT,
  "VERIFYCODE"    VARCHAR(6),
  "CODETIME"      TIMESTAMP,
  "PHONE"         VARCHAR(30),
  "LIMTTIME"      TIMESTAMP,
  "VERIFY_COUNT"  INTEGER,
  "CORP_CODE"     VARCHAR(64)     NOT NULL,
  "APP_TYPE"      SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_VERIFY"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_APP_WC_GROUP"
 ("G_ID"       BIGINT          NOT NULL,
  "WG_ID"      BIGINT,
  "NAME"       VARCHAR(32),
  "COUNT"      VARCHAR(11),
  "A_ID"       BIGINT          NOT NULL,
  "CORP_CODE"  VARCHAR(64)     NOT NULL,
  "CREATETIME" TIMESTAMP       NOT NULL,
  "MODIFYTIME" TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_APP_WC_GROUP"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_AUTOREPLY"
 ("ID"             BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "REPLY_CONTENT"  VARCHAR(1024),
  "STATE"          SMALLINT,
  "TYPE"           SMALLINT,
  "CORP_CODE"      VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_AUTOREPLY"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_BILLLOG"
 ("LOG_ID"          BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PHONE"           VARCHAR(64),
  "PRO_TYPE"        VARCHAR(64),
  "BILL_TIME"       TIMESTAMP,
  "COST"            INTEGER,
  "REAL_COST"       INTEGER,
  "RE_COST_STATUS"  SMALLINT,
  "RE_COST"         INTEGER,
  "COMMENTS"        VARCHAR(128),
  "PRO_ID"          BIGINT,
  "BILL_STATUS"     BIGINT,
  "PRO_NAME"        VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_BILLLOG"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_BINDFLOW"
 ("BFID"            BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "FID"             BIGINT          NOT NULL,
  "USER_ID"         BIGINT,
  "IS_FLOW_REMIND"  BIGINT,
  "MSGACCOUNT"      BIGINT,
  "CORP_CODE"       VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_BINDFLOW"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_BIRTHDAYMEMBER"
 ("ID"           BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "BS_ID"        BIGINT,
  "TYPE"         SMALLINT,
  "MEMBER_ID"    BIGINT,
  "USER_ID"      BIGINT,
  "MSG"          VARCHAR(2048),
  "ADDNAME"      VARCHAR(64),
  "CORPCODE"     VARCHAR(32),
  "MEMBER_TYPE"  INTEGER
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_BIRTHDAYMEMBER"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_BIRTHDAYSETUP"
 ("ID"         BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "USER_ID"    BIGINT,
  "MSG"        VARCHAR(2048),
  "SEND_TIME"  TIMESTAMP,
  "IS_ADDNAME" SMALLINT,
  "ADDNAME"    VARCHAR(64),
  "SP_USER"    VARCHAR(32),
  "IS_USE"     SMALLINT,
  "TYPE"       SMALLINT,
  "CORPCODE"   VARCHAR(32),
  "BUS_CODE"   VARCHAR(64),
  "TITLE"      VARCHAR(64),
  "ISSIGNNAME" INTEGER,
  "SIGNNAME"   VARCHAR(32)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_BIRTHDAYSETUP"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_BLACKLIST"
 ("BL_ID"     BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PHONE"     VARCHAR(64),
  "SPGATE"    VARCHAR(30),
  "BL_STATE"  SMALLINT,
  "COMMENTS"  VARCHAR(512),
  "USERID"    VARCHAR(6),
  "SPNUMBER"  VARCHAR(30),
  "OPTIME"    VARCHAR(6),
  "SPISUNCM"  SMALLINT,
  "BUS_CODE"  VARCHAR(64),
  "CORP_CODE" VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_BLACKLIST"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_BUSINESS"
 ("BUS_ID"    BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "BUS_NAME"  VARCHAR(64),
  "BUS_CODE"  VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_BUSINESS"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_BUSMANAGER"
 ("BUS_ID"           BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "BUS_CODE"         VARCHAR(64)     NOT NULL,
  "BUS_NAME"         VARCHAR(32)     NOT NULL,
  "BUS_DESCRIPTION"  VARCHAR(2000),
  "CLASS_NAME"       VARCHAR(2000),
  "CORP_CODE"        VARCHAR(64),
  "BUS_TYPE"         SMALLINT                  DEFAULT 0,
  "RISELEVEL"        SMALLINT                  DEFAULT -99,
  "CREATE_TIME"      TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "UPDATE_TIME"      TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "DEP_ID"           BIGINT,
  "USER_ID"          BIGINT,
  "STATE"            SMALLINT                  DEFAULT 0
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_BUSMANAGER"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_BUSPKGETAOCAN"
 ("ID"              BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "TAOCAN_CODE"     VARCHAR(64),
  "PACKAGE_CODE"    VARCHAR(64)     NOT NULL,
  "BUS_CODE"        VARCHAR(64),
  "ASSOCIATE_TYPE"  SMALLINT        NOT NULL,
  "CORP_CODE"       VARCHAR(64),
  "CREATE_TIME"     TIMESTAMP                 DEFAULT CURRENT TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_BUSPKGETAOCAN"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_BUSTAIL"
 ("BUSTAIL_ID"    BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "BUSTAIL_NAME"  VARCHAR(64)     NOT NULL,
  "CORP_CODE"     VARCHAR(64),
  "CONTENT"       VARCHAR(2000)   NOT NULL,
  "CREATE_TIME"   TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "UPDATE_TIME"   TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "DEP_ID"        BIGINT,
  "USER_ID"       BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_BUSTAIL"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_BUS_PACKAGE"
 ("PACKAGE_ID"    BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PACKAGE_CODE"  VARCHAR(64)     NOT NULL,
  "PACKAGE_NAME"  VARCHAR(64)     NOT NULL,
  "PACKAGE_DES"   VARCHAR(2000)             DEFAULT '',
  "PACKAGE_STATE" SMALLINT        NOT NULL,
  "CORP_CODE"     VARCHAR(64),
  "CREATE_TIME"   TIMESTAMP,
  "UPDATE_TIME"   TIMESTAMP,
  "DEP_ID"        BIGINT,
  "USER_ID"       BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_BUS_PACKAGE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_BUS_PROCESS"
 ("BUSPRO_ID"  BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "BUS_CODE"   VARCHAR(64),
  "MENU_CODE"  VARCHAR(64),
  "CLASS_NAME" VARCHAR(64),
  "REG_TYPE"   SMALLINT,
  "CODES"      VARCHAR(64),
  "CODE_TYPE"  SMALLINT,
  "HTTP_URL"   VARCHAR(1024),
  "SEND_TYPE"  SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_BUS_PROCESS"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_BUS_TAILTMP"
 ("ID"              BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "BUS_ID"          BIGINT          NOT NULL,
  "SMSTAIL_ID"      BIGINT,
  "TM_ID"           BIGINT,
  "ASSOCIATE_TYPE"  SMALLINT        NOT NULL,
  "CORP_CODE"       VARCHAR(64),
  "CREATE_TIME"     TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "UPDATE_TIME"     TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "DEP_ID"          BIGINT,
  "USER_ID"         BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_BUS_TAILTMP"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_BUS_TAOCAN"
 ("TAOCAN_ID"    BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "TAOCAN_CODE"  VARCHAR(64)     NOT NULL,
  "TAOCAN_NAME"  VARCHAR(64)     NOT NULL,
  "TAOCAN_DES"   VARCHAR(2000)             DEFAULT '',
  "STATE"        SMALLINT        NOT NULL,
  "CORP_CODE"    VARCHAR(64),
  "CREATE_TIME"  TIMESTAMP,
  "UPDATE_TIME"  TIMESTAMP,
  "DEP_ID"       BIGINT,
  "USER_ID"      BIGINT,
  "START_DATE"   TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "END_DATE"     TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "TAOCAN_TYPE"  SMALLINT        NOT NULL,
  "TAOCAN_MONEY" BIGINT          NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_BUS_TAOCAN"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_CLIDEP_CONN"
 ("CONN_ID"         BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "USER_ID"         BIGINT,
  "DEP_CODE_THIRD"  VARCHAR(64),
  "DEP_ID"          BIGINT          NOT NULL  DEFAULT 0
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_CLIDEP_CONN"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_CLIENT"
 ("CLIENT_ID"    BIGINT          NOT NULL,
  "DEP_ID"       BIGINT          NOT NULL,
  "CC_ID"        BIGINT,
  "NAME"         VARCHAR(64),
  "SEX"          SMALLINT,
  "BIRTHDAY"     TIMESTAMP,
  "MOBILE"       VARCHAR(200),
  "OPH"          VARCHAR(64),
  "QQ"           VARCHAR(32),
  "E_MAIL"       VARCHAR(64),
  "MSN"          VARCHAR(64),
  "JOB"          VARCHAR(64),
  "PROFESSION"   VARCHAR(64),
  "AREA"         VARCHAR(64),
  "C_STATE"      SMALLINT,
  "SHARE_STATE"  SMALLINT,
  "COMMENTS"     VARCHAR(512),
  "REC_STATE"    SMALLINT,
  "HIDE_STATE"   SMALLINT,
  "USER_ID"      BIGINT,
  "ENAME"        VARCHAR(64),
  "BATCH_NO"     VARCHAR(64),
  "PHONE"        VARCHAR(200),
  "DEP_CODE"     VARCHAR(64),
  "BIZ_ID"       VARCHAR(64),
  "CLIENT_CODE"  VARCHAR(64),
  "GUID"         BIGINT          NOT NULL,
  "CORP_CODE"    VARCHAR(64),
  "FIELD01"      VARCHAR(64),
  "FIELD02"      VARCHAR(64),
  "FIELD03"      VARCHAR(64),
  "FIELD04"      VARCHAR(64),
  "FIELD05"      VARCHAR(64),
  "FIELD06"      VARCHAR(64),
  "FIELD07"      VARCHAR(64),
  "FIELD08"      VARCHAR(64),
  "FIELD09"      VARCHAR(64),
  "FIELD10"      VARCHAR(64),
  "FIELD11"      VARCHAR(64),
  "FIELD12"      VARCHAR(64),
  "FIELD13"      VARCHAR(64),
  "FIELD14"      VARCHAR(64),
  "FIELD15"      VARCHAR(64),
  "FIELD16"      VARCHAR(64),
  "FIELD17"      VARCHAR(64),
  "FIELD18"      VARCHAR(64),
  "FIELD19"      VARCHAR(64),
  "FIELD20"      VARCHAR(64),
  "FIELD21"      VARCHAR(64),
  "FIELD22"      VARCHAR(64),
  "FIELD23"      VARCHAR(64),
  "FIELD24"      VARCHAR(64),
  "FIELD25"      VARCHAR(64),
  "FIELD26"      VARCHAR(64),
  "FIELD27"      VARCHAR(64),
  "FIELD28"      VARCHAR(64),
  "FIELD29"      VARCHAR(64),
  "FIELD30"      VARCHAR(64),
  "FIELD31"      VARCHAR(64),
  "FIELD32"      VARCHAR(64),
  "FIELD33"      VARCHAR(64),
  "FIELD34"      VARCHAR(64),
  "FIELD35"      VARCHAR(64),
  "FIELD36"      VARCHAR(64),
  "FIELD37"      VARCHAR(64),
  "FIELD38"      VARCHAR(64),
  "FIELD39"      VARCHAR(64),
  "FIELD40"      VARCHAR(64),
  "FIELD41"      VARCHAR(64),
  "FIELD42"      VARCHAR(64),
  "FIELD43"      VARCHAR(64),
  "FIELD44"      VARCHAR(64),
  "FIELD45"      VARCHAR(64),
  "FIELD46"      VARCHAR(64),
  "FIELD47"      VARCHAR(64),
  "FIELD48"      VARCHAR(64),
  "FIELD49"      VARCHAR(64),
  "FIELD50"      VARCHAR(64),
  "ISCONTRACT"   SMALLINT                  DEFAULT 0
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_CLIENT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_CLIENTCLASS"
 ("CC_ID"    BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "CC_NAME"  VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_CLIENTCLASS"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_CLIENT_DEP"
 ("DEP_ID"          BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "DEP_CODE"        VARCHAR(64),
  "DEP_NAME"        VARCHAR(64),
  "DEP_PCODE"       VARCHAR(64),
  "DEP_LEVEL"       SMALLINT                  DEFAULT 0,
  "ADD_TYPE"        SMALLINT,
  "CORP_CODE"       VARCHAR(64),
  "PARENT_ID"       BIGINT          NOT NULL  DEFAULT 0,
  "DEP_CODE_THIRD"  VARCHAR(64)               DEFAULT '0',
  "DEP_PATH"        VARCHAR(160)              DEFAULT ''
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_CLIENT_DEP"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_CLIENT_DEP_SP"
 ("CLIENT_ID"  BIGINT  NOT NULL,
  "DEP_ID"     BIGINT  NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_CLIENT_DEP_SP"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_CONTRACT"
 ("CONTRACT_ID"        BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "MOBILE"             VARCHAR(128)    NOT NULL,
  "CUSTOM_NAME"        VARCHAR(120)    NOT NULL,
  "IDENT_TYPE"         VARCHAR(2),
  "IDENT_NO"           VARCHAR(20),
  "CONTRACT_DEP"       BIGINT          NOT NULL,
  "CONTRACT_USER"      BIGINT          NOT NULL,
  "CONTRACT_DATE"      TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "ADD_ORDER_DATE"     TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "CANCEL_ORDER_DATE"  TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "CONTRACT_STATE"     SMALLINT        NOT NULL  DEFAULT 0,
  "CONTRACT_TYPE"      SMALLINT                  DEFAULT 0,
  "CUSTOM_TYPE"        SMALLINT                  DEFAULT 0,
  "ADDRESS"            VARCHAR(256),
  "CONTRACT_SOURCE"    SMALLINT,
  "CANCEL_CONTYPE"     SMALLINT,
  "CANCEL_CONTIME"     TIMESTAMP,
  "CORP_CODE"          VARCHAR(64),
  "DEP_ID"             BIGINT,
  "USER_ID"            BIGINT,
  "UPDATE_TIME"        TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "ACCT_COMNAME"       VARCHAR(64),
  "ACCT_NO"            VARCHAR(25),
  "ACCT_NAME"          VARCHAR(120),
  "ACCT_IDENTTYPE"     VARCHAR(2),
  "ACCT_IDENTNO"       VARCHAR(20),
  "ACCT_ADDRESS"       VARCHAR(256),
  "IS_VALID"           VARCHAR(1)      NOT NULL  DEFAULT '0',
  "DEBITACCOUNT"       VARCHAR(25),
  "DEBITACCT_NAME"     VARCHAR(120),
  "DEBITACCT_DEP"      BIGINT,
  "CLIENT_CODE"        VARCHAR(64),
  "GUID"               BIGINT          NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_CONTRACT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_CONTRACT_TAOCAN"
 ("ID"             BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "CONTRACT_ID"    BIGINT          NOT NULL,
  "DEBITACCOUNT"   VARCHAR(25),
  "TAOCAN_CODE"    VARCHAR(64)     NOT NULL,
  "TAOCAN_NAME"    VARCHAR(64),
  "CONTRACT_DEP"   BIGINT,
  "CONTRACT_USER"  BIGINT,
  "TAOCAN_TYPE"    SMALLINT,
  "TAOCAN_MONEY"   BIGINT,
  "DEP_ID"         BIGINT,
  "USER_ID"        BIGINT,
  "CREATE_TIME"    TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "UPDATE_TIME"    TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "CORP_CODE"      VARCHAR(64),
  "BUCKLEFEE_TIME" TIMESTAMP,
  "GUID"           BIGINT,
  "IS_VALID"       VARCHAR(1)      NOT NULL  DEFAULT '0',
  "LAST_BUCKLEFEE" VARCHAR(8)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_CONTRACT_TAOCAN"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_CORP"
 ("CORP_ID"      BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "CORP_CODE"    VARCHAR(64),
  "CORP_NAME"    VARCHAR(64),
  "MOBILE"       VARCHAR(64),
  "PHONE"        VARCHAR(64),
  "ADDRESS"      VARCHAR(200),
  "LINKMAN"      VARCHAR(64),
  "E_MAILS"      VARCHAR(200),
  "USER_NAME"    VARCHAR(64),
  "LGO_URL"      VARCHAR(200),
  "ISBALANCE"    SMALLINT        NOT NULL  DEFAULT 0,
  "SUBNO_DIGIT"  INTEGER         NOT NULL  DEFAULT 4,
  "CUR_SUBNO"    VARCHAR(20)     NOT NULL  DEFAULT '0'
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_CORP"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_CORP_CONF"
 ("CC_ID"        BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "CORP_CODE"    VARCHAR(64),
  "PARAM_KEY"    VARCHAR(64),
  "PARAM_VALUE"  VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_CORP_CONF"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_CUSTFIELD"
 ("ID"         BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "FIELD_REF"  VARCHAR(64),
  "FIELD_NAME" VARCHAR(64),
  "V_TYPE"     VARCHAR(64),
  "CORP_CODE"  VARCHAR(64),
  "USERID"     VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_CUSTFIELD"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_CUSTFIELD_VALUE"
 ("ID"           BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "FIELD_ID"     BIGINT,
  "FIELD_VALUE"  VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_CUSTFIELD_VALUE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_DBCONNECT"
 ("DB_ID"         BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "DBCON_NAME"    VARCHAR(64),
  "DBCON_IP"      VARCHAR(64),
  "DB_TYPE"       VARCHAR(64),
  "SERVICE_NAME"  VARCHAR(64),
  "DB_NAME"       VARCHAR(64),
  "PORT"          VARCHAR(64),
  "DB_USER"       VARCHAR(64),
  "DB_PWD"        VARCHAR(64),
  "CON_STR"       VARCHAR(256),
  "COMMENTS"      VARCHAR(512),
  "DBCONN_TYPE"   SMALLINT,
  "CORP_CODE"     VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_DBCONNECT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_DEDUCTIONS_DISP"
 ("ID"                BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "CONTRACT_ID"       BIGINT          NOT NULL,
  "MOBILE"            VARCHAR(64)     NOT NULL,
  "CUSTOM_NAME"       VARCHAR(120)    NOT NULL,
  "ACCT_NO"           VARCHAR(25),
  "DEBITACCOUNT"      VARCHAR(25),
  "TAOCAN_CODE"       VARCHAR(64),
  "TAOCAN_NAME"       VARCHAR(64),
  "TAOCAN_TYPE"       SMALLINT,
  "TAOCAN_MONEY"      BIGINT,
  "CONTRACT_STATE"    SMALLINT,
  "DEDUCTIONS_TYPE"   SMALLINT,
  "DEDUCTIONS_MONEY"  BIGINT,
  "OPR_STATE"         SMALLINT        NOT NULL,
  "OPR_TIME"          TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "CONTRACT_DEP"      BIGINT,
  "DEP_NAME"          VARCHAR(64),
  "CONTRACT_USER"     BIGINT,
  "USER_NAME"         VARCHAR(64),
  "DEP_ID"            BIGINT,
  "USER_ID"           BIGINT,
  "CORP_CODE"         VARCHAR(64),
  "MSG_ID"            VARCHAR(256)    NOT NULL,
  "UPDATE_TIME"       TIMESTAMP                 DEFAULT CURRENT TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_DEDUCTIONS_DISP"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_DEDUCTIONS_LIST"
 ("ID"                BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "CONTRACT_ID"       BIGINT          NOT NULL,
  "MOBILE"            VARCHAR(64)     NOT NULL,
  "CUSTOM_NAME"       VARCHAR(120)    NOT NULL,
  "ACCT_NO"           VARCHAR(25),
  "DEBITACCOUNT"      VARCHAR(25),
  "TAOCAN_CODE"       VARCHAR(64),
  "TAOCAN_NAME"       VARCHAR(64),
  "TAOCAN_TYPE"       SMALLINT,
  "TAOCAN_MONEY"      BIGINT,
  "IYEAR"             BIGINT,
  "IMONTH"            BIGINT,
  "BUPSUM_MONEY"      BIGINT,
  "BUPTIMER"          BIGINT,
  "CONTRACT_STATE"    SMALLINT                  DEFAULT 0,
  "CONTRACT_TYPE"     SMALLINT                  DEFAULT 0,
  "DEDUCTIONS_TYPE"   SMALLINT,
  "BUCKUP_TIMER"      INTEGER,
  "UDPATE_TIME"       TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "BUCKLEFEE_TIME"    TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "BUCKLEUPFEE_TIME"  TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "CONTRACT_DEP"      BIGINT,
  "DEP_NAME"          VARCHAR(64),
  "CONTRACT_USER"     BIGINT,
  "DEP_ID"            BIGINT,
  "USER_ID"           BIGINT,
  "CORP_CODE"         VARCHAR(64),
  "MSG_ID"            VARCHAR(256)    NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_DEDUCTIONS_LIST"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_DEP"
 ("DEP_ID"          BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "DEP_NAME"        VARCHAR(64),
  "DEP_CONTACT"     VARCHAR(64),
  "DEP_LEVEL"       SMALLINT,
  "DEP_CODE"        VARCHAR(64),
  "DEP_RESP"        VARCHAR(512),
  "SUPERIOR_ID"     BIGINT,
  "DEP_CODE_THIRD"  VARCHAR(64)     NOT NULL,
  "CORP_CODE"       VARCHAR(64),
  "DEP_DIRECT"      BIGINT,
  "DEP_STATE"       SMALLINT        NOT NULL  DEFAULT 1,
  "DEP_PATH"        VARCHAR(160)              DEFAULT '',
  "UP_DEPID"        VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_DEP"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_DEPPWDRECEIVER"
 ("DPR_ID"      BIGINT     NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "DEP_ID"      BIGINT,
  "USER_ID"     BIGINT,
  "CREATETIME"  TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_DEPPWDRECEIVER"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_DEP_RECHARGE_LOG"
 ("LOG_ID"        BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "OPT_TYPE"      INTEGER         NOT NULL,
  "OPT_INFO"      VARCHAR(120)    NOT NULL,
  "SRC_TARGETID"  BIGINT          NOT NULL,
  "DST_TARGETID"  BIGINT          NOT NULL,
  "MSG_TYPE"      SMALLINT        NOT NULL,
  "COUNT"         BIGINT          NOT NULL,
  "OPT_ID"        BIGINT          NOT NULL,
  "OPT_DATE"      TIMESTAMP       NOT NULL,
  "RESULT"        INTEGER         NOT NULL,
  "MEMO"          VARCHAR(512)    NOT NULL,
  "CORP_CODE"     VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_DEP_RECHARGE_LOG"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_DEP_TAOCAN"
 ("ID"             BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "TAOCAN_CODE"    VARCHAR(64)     NOT NULL,
  "CONTRACT_DEP"   BIGINT          NOT NULL,
  "CONTRACT_USER"  BIGINT          NOT NULL,
  "DEP_ID"         BIGINT,
  "USER_ID"        BIGINT,
  "CORP_CODE"      VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_DEP_TAOCAN"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_DEP_USER_BALANCE"
 ("BL_ID"            BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "TARGET_ID"        BIGINT          NOT NULL,
  "SMS_BALANCE"      BIGINT          NOT NULL,
  "SMS_COUNT"        BIGINT          NOT NULL,
  "MMS_BALANCE"      BIGINT          NOT NULL,
  "MMS_COUNT"        BIGINT          NOT NULL,
  "CORP_CODE"        VARCHAR(64),
  "SMS_ALARM_VALUE"  INTEGER,
  "MMS_ALARM_VALUE"  INTEGER,
  "ALARM_PHONE"      VARCHAR(256),
  "ALARM_NAME"       VARCHAR(12),
  "ALARM_COUNT"      INTEGER,
  "ALARMED_COUNT"    INTEGER,
  "HAS_DAYALARM"     INTEGER
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_DEP_USER_BALANCE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_DFADVANCED"
 ("ID"             BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "USER_ID"        BIGINT          NOT NULL,
  "BUS_CODE"       VARCHAR(64)               DEFAULT '',
  "PRIORITY"       VARCHAR(8)                DEFAULT '0',
  "SPUSER_ID"      VARCHAR(11)               DEFAULT ' ',
  "REPLY_SET"      SMALLINT                  DEFAULT 0,
  "REPEAT_FILTER"  SMALLINT                  DEFAULT 2,
  "CREATE_TIME"    TIMESTAMP,
  "FLAG"           SMALLINT        NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_DFADVANCED"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_DOMINATION"
 ("DEP_ID"  BIGINT  NOT NULL,
  "USER_ID" BIGINT  NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_DOMINATION"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_DYNPHONEWORD"
 ("USERID"     BIGINT          NOT NULL,
  "PHONEWORD"  VARCHAR(10),
  "CREATETIME" TIMESTAMP,
  "ISLOGIN"    INTEGER         NOT NULL  DEFAULT 0,
  "ERRORCODE"  CHARACTER(7),
  "PTMSGID"    BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_DYNPHONEWORD"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_EDIT"
 ("EDIT_ID"    BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PR_ID"      BIGINT,
  "EDIT_NAME"  VARCHAR(64),
  "EDIT_VALUE" VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_EDIT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_EMPDEP_CONN"
 ("CONN_ID"         BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "USER_ID"         BIGINT,
  "DEP_CODE_THIRD"  VARCHAR(64),
  "DEP_ID"          BIGINT          NOT NULL  DEFAULT 0
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_EMPDEP_CONN"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_EMPLOYEE"
 ("EMPLOYEEID"    BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "P_ID"          BIGINT,
  "DEP_ID"        BIGINT,
  "EMPLOYEE_NO"   VARCHAR(64),
  "E_STATE"       SMALLINT,
  "COMMENTS"      VARCHAR(512),
  "REC_STATE"     SMALLINT,
  "HIDEPH_STATE"  SMALLINT,
  "E_MAIL"        VARCHAR(64),
  "MSN"           VARCHAR(64),
  "QQ"            VARCHAR(32),
  "NAME"          VARCHAR(64),
  "SEX"           SMALLINT,
  "MOBILE"        VARCHAR(200),
  "BIRTHDAY"      TIMESTAMP,
  "OPH"           VARCHAR(64),
  "GUID"          BIGINT          NOT NULL,
  "BIZ_ID"        VARCHAR(64),
  "EMPLOYEE_CODE" VARCHAR(64),
  "DEP_CODE"      VARCHAR(64),
  "LASTUPDDTTM"   TIMESTAMP,
  "HR_STATUS"     VARCHAR(20),
  "IS_OPERATOR"   SMALLINT,
  "CORP_CODE"     VARCHAR(64),
  "DUTIES"        VARCHAR(200),
  "FAX"           VARCHAR(22),
  "UP_GUID"       BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_EMPLOYEE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_EMPLOYEE_DEP"
 ("DEP_ID"          BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "DEP_CODE"        VARCHAR(64),
  "DEP_NAME"        VARCHAR(64),
  "DEP_PCODE"       VARCHAR(64),
  "DEP_EFF_STATUS"  VARCHAR(20),
  "DEP_LEVEL"       SMALLINT                  DEFAULT 0,
  "ADD_TYPE"        INTEGER,
  "CORP_CODE"       VARCHAR(64),
  "PARENT_ID"       BIGINT          NOT NULL  DEFAULT 0,
  "DEP_CODE_THIRD"  VARCHAR(64)               DEFAULT '0',
  "DEP_PATH"        VARCHAR(160)              DEFAULT '',
  "UP_DEPID"        VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_EMPLOYEE_DEP"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_EMPLOYEE_TYPE"
 ("ID"         BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "NAME"       VARCHAR(64)     NOT NULL,
  "USER_ID"    BIGINT          NOT NULL,
  "CORP_CODE"  VARCHAR(64)     NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_EMPLOYEE_TYPE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_ENTERPRISE"
 ("OR_ID"            BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "SP_USER"          VARCHAR(32),
  "ENTERPRISE_CODE"  BIGINT,
  "DEP_CODE"         VARCHAR(64)     NOT NULL,
  "DEP_NAME"         VARCHAR(64)     NOT NULL,
  "DEP_ADDR1"        VARCHAR(64),
  "DEP_ADDR2"        VARCHAR(64),
  "SUPERIOR_ID"      INTEGER,
  "DEP_LEVEL"        SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_ENTERPRISE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_EXAMINE_SMS"
 ("ES_ID"           BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "FR_ID"           BIGINT,
  "PHONE"           VARCHAR(30),
  "MSGCONTENT"      VARCHAR(2000),
  "BATCHNUMBER"     VARCHAR(10),
  "DISAGREENUMBER"  VARCHAR(10),
  "RECIVECONTENT"   VARCHAR(2000),
  "RECIVETIME"      TIMESTAMP,
  "SPNUMBER"        VARCHAR(21),
  "SPUSER"          VARCHAR(11),
  "ES_TYPE"         SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_EXAMINE_SMS"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_EXTERNAL_USER"
 ("EXUID"  BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "GUID"   BIGINT          NOT NULL,
  "NAME"   VARCHAR(64),
  "MOBILE" VARCHAR(32)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_EXTERNAL_USER"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_FLOW"
 ("F_ID"           BIGINT          NOT NULL,
  "F_TASK"         VARCHAR(64),
  "F_TYPE"         SMALLINT,
  "R_LEVELAMOUNT"  SMALLINT,
  "USERID"         VARCHAR(64),
  "MSG_ACCOUNT"    INTEGER,
  "COMMENTS"       VARCHAR(512),
  "CORP_CODE"      VARCHAR(64),
  "CREATE_USER_ID" BIGINT,
  "FLOWSHOW"       VARCHAR(400),
  "REMIND_STATE"   SMALLINT,
  "CREATE_TIME"    TIMESTAMP,
  "UPDATE_TIME"    TIMESTAMP,
  "FLOWSTATE"      SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_FLOW"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_FLOWBINDOBJ"
 ("ID"           BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "F_ID"         BIGINT          NOT NULL,
  "OBJ_TYPE"     SMALLINT,
  "OBJ_CODE"     VARCHAR(64),
  "INFO_TYPE"    SMALLINT,
  "CORP_CODE"    VARCHAR(64),
  "UPDATE_TIME"  TIMESTAMP,
  "CREATE_TIME"  TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_FLOWBINDOBJ"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_FLOWBINDTYPE"
 ("ID"           BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "F_ID"         BIGINT          NOT NULL,
  "MENUCODE"     VARCHAR(64),
  "INFO_TYPE"    SMALLINT,
  "UPDATE_TIME"  TIMESTAMP,
  "CREATE_TIME"  TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_FLOWBINDTYPE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_FLOWRECORD"
 ("FR_ID"          BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "MT_ID"          BIGINT,
  "PRE_RV"         BIGINT,
  "REVIEWER"       BIGINT,
  "R_LEVEL"        SMALLINT,
  "R_LEVELAMOUNT"  SMALLINT,
  "R_CONTENT"      VARCHAR(512),
  "R_STATE"        INTEGER,
  "COMMENTS"       VARCHAR(800),
  "R_TIME"         TIMESTAMP,
  "F_ID"           BIGINT          NOT NULL,
  "REVIEW_TYPE"    SMALLINT,
  "CORP_CODE"      VARCHAR(64),
  "BATCHNUMBER"    VARCHAR(10),
  "DISAGREENUMBER" VARCHAR(10),
  "INFO_TYPE"      SMALLINT,
  "PROUSERCODE"    BIGINT,
  "R_TYPE"         SMALLINT,
  "USER_CODE"      BIGINT,
  "R_CONDITION"    SMALLINT,
  "IS_COMPLETE"    SMALLINT,
  "SUBMITTIME"     TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_FLOWRECORD"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_GLOBAL_VARIABLE"
 ("GLOBALID"        BIGINT          NOT NULL,
  "GLOBALKEY"       VARCHAR(32)     NOT NULL,
  "GLOBALVALUE"     BIGINT,
  "GLOBALSTRVALUE"  VARCHAR(2000)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_GLOBAL_VARIABLE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_IMPOWER"
 ("ROLE_ID"       BIGINT  NOT NULL,
  "PRIVILEGE_ID"  BIGINT  NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_IMPOWER"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_KEYWORDS"
 ("KW_ID"      BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "KEYWOED"    VARCHAR(64),
  "KW_LEVEL"   SMALLINT,
  "KW_STATE"   SMALLINT,
  "COMMENTS"   VARCHAR(512),
  "CORP_CODE"  VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_KEYWORDS"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_KEY_VALUE"
 ("KV_ID"     BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "KV_KEY"    VARCHAR(64),
  "KV_VALUE"  VARCHAR(128)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_KEY_VALUE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_LIST2GRO"
 ("L2G_ID"        BIGINT    NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "L2G_TYPE"      SMALLINT,
  "UDG_ID"        BIGINT,
  "GUID"          BIGINT,
  "RECEIVE_FLAG"  SMALLINT            DEFAULT 0,
  "SHARE_TYPE"    SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_LIST2GRO"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MACIP"
 ("LMIID"        BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "GUID"         BIGINT,
  "MAC_ADDR"     VARCHAR(200),
  "IP_ADDR"      VARCHAR(200),
  "TYPE"         SMALLINT,
  "CREATORNAME"  VARCHAR(64),
  "CREATTIME"    TIMESTAMP,
  "DT_PWD"       SMALLINT                  DEFAULT 0
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MACIP"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MALIST"
 ("MA_ID"     BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "NAME"      VARCHAR(64),
  "SEX"       SMALLINT,
  "BIRTHDAY"  TIMESTAMP,
  "MOBILE"    VARCHAR(64),
  "OPH"       VARCHAR(64),
  "QQ"        VARCHAR(32),
  "E_MAIL"    VARCHAR(64),
  "MSN"       VARCHAR(64),
  "DEP_ID"    BIGINT,
  "USER_ID"   BIGINT,
  "GUID"      BIGINT,
  "CORP_CODE" VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MALIST"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MAPPING"
 ("MAP_ID"    BIGINT  NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "GUID"      BIGINT,
  "MAP_GUID"  BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MAPPING"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MATERIAL"
 ("MTAL_ID"      BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "MTAL_NAME"    VARCHAR(64)     NOT NULL,
  "MTAL_TYPE"    VARCHAR(32)     NOT NULL,
  "MTAL_SIZE"    VARCHAR(20),
  "USER_ID"      BIGINT,
  "MTAL_UPTIME"  TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "COMMENTS"     VARCHAR(2000),
  "MTAL_ADDRESS" VARCHAR(200)    NOT NULL,
  "SORT_ID"      BIGINT          NOT NULL,
  "MTAL_WIDTH"   SMALLINT,
  "MTAL_HEIGHT"  SMALLINT,
  "CORP_CODE"    VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MATERIAL"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MATERIAL_SORT"
 ("SORT_ID"      BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "SORT_NAME"    VARCHAR(64)     NOT NULL,
  "PARENT_CODE"  VARCHAR(64)     NOT NULL,
  "CHILD_CODE"   VARCHAR(64)     NOT NULL,
  "SORT_LEVEL"   BIGINT          NOT NULL,
  "CORP_CODE"    VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MATERIAL_SORT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MMSACCBIND"
 ("ID"           BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "MMS_USER"     VARCHAR(32),
  "USER_ID"      BIGINT,
  "CORP_CODE"    VARCHAR(64),
  "IS_VALIDATE"  SMALLINT,
  "CREATETIME"   TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "DESCRIPTION"  VARCHAR(512)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MMSACCBIND"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MMSACCMANAGEMENT"
 ("ID"                 BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "MMS_USERID"         VARCHAR(32),
  "MMS_NAME"           VARCHAR(64),
  "MMS_PASSWORD"       VARCHAR(32),
  "MMS_CREATETIME"     TIMESTAMP,
  "MMS_CREATEER_GUID"  BIGINT,
  "DESCRIPTION"        VARCHAR(512)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MMSACCMANAGEMENT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MMSBLIST"
 ("BL_ID"     BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PHONE"     VARCHAR(64),
  "SPGATE"    VARCHAR(30),
  "BL_STATE"  INTEGER,
  "COMMENTS"  VARCHAR(512),
  "USERID"    VARCHAR(6),
  "SPNUMBER"  VARCHAR(30),
  "OPTIME"    VARCHAR(6),
  "SPISUNCM"  INTEGER,
  "BUS_CODE"  VARCHAR(64),
  "CORP_CODE" VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MMSBLIST"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MMSINFO"
 ("MMSID"         BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "MARKED"        VARCHAR(100)    NOT NULL,
  "FRAMECONTEXT"  VARCHAR(2000),
  "MMSTITLE"      VARCHAR(200)    NOT NULL,
  "FILEDIRECTORY" VARCHAR(200)    NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MMSINFO"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MMSMTTASK"
 ("MMS_ID"       BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, CACHE 20, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "USER_ID"      BIGINT,
  "PHONE"        VARCHAR(64),
  "MMS_MSG"      VARCHAR(200),
  "SEND_STATUS"  SMALLINT,
  "SEND_TIME"    TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MMSMTTASK"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MMSTASKREPORT"
 ("R_TASKID"  BIGINT,
  "R_ICOUNT"  BIGINT,
  "R_SUCC"    BIGINT,
  "R_FAIL1"   BIGINT,
  "R_FAIL2"   BIGINT,
  "R_NRET"    BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MMSTASKREPORT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MMSTEMPLATE"
 ("MMS_ID"     BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "USER_ID"    BIGINT,
  "MMS_THEME"  VARCHAR(64),
  "MMS_MSG"    VARCHAR(1024),
  "DSFLAG"     SMALLINT,
  "MMS_STATE"  SMALLINT,
  "ADDTIME"    TIMESTAMP,
  "UP_PIC"     VARCHAR(2000),
  "UP_SOUND"   VARCHAR(2000),
  "PIC_INFO"   VARCHAR(100),
  "SOUND_INFO" VARCHAR(100)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MMSTEMPLATE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MMS_MTREPORT"
 ("ID"           BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "USERID"       VARCHAR(11),
  "TASKID"       BIGINT,
  "SPGATE"       VARCHAR(21),
  "IYMD"         BIGINT,
  "IHOUR"        INTEGER,
  "PTCODE"       CHARACTER(10)             DEFAULT ' ',
  "IMONTH"       INTEGER,
  "ICOUNT"       INTEGER                   DEFAULT 0,
  "SUCC"         INTEGER                   DEFAULT 0,
  "FAIL1"        INTEGER                   DEFAULT 0,
  "FAIL2"        INTEGER                   DEFAULT 0,
  "FAIL3"        INTEGER                   DEFAULT 0,
  "NRET"         INTEGER                   DEFAULT 0,
  "RSUCC"        INTEGER                   DEFAULT 0,
  "RFAIL1"       INTEGER                   DEFAULT 0,
  "RFAIL2"       INTEGER                   DEFAULT 0,
  "RNRET"        INTEGER                   DEFAULT 0,
  "RELEASEFLAG"  INTEGER                   DEFAULT 1,
  "STARTTIME"    TIMESTAMP,
  "ENDTIME"      TIMESTAMP,
  "Y"            SMALLINT                  DEFAULT 0,
  "SPISUNCM"     SMALLINT                  DEFAULT 0
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MMS_MTREPORT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MOBFINANCIAL"
 ("MOBFID"     BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PHONE"      VARCHAR(64),
  "MSG"        VARCHAR(200),
  "TASK_ID"    BIGINT,
  "SEND_TIME"  TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MOBFINANCIAL"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MON_DGTACINFO"
 ("ID"           BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "GATEACCOUNT"  VARCHAR(11)     NOT NULL  DEFAULT '',
  "EVTTYPE"      INTEGER         NOT NULL  DEFAULT 0,
  "GATEWAYID"    BIGINT,
  "LINKNUM"      INTEGER         NOT NULL  DEFAULT 1,
  "LOGINIP"      VARCHAR(64)     NOT NULL  DEFAULT '',
  "ONLINESTATUS" SMALLINT        NOT NULL  DEFAULT 0,
  "USERFEE"      INTEGER         NOT NULL  DEFAULT 0,
  "FEEFLAG"      INTEGER         NOT NULL  DEFAULT 0,
  "MTTOTALSND"   INTEGER         NOT NULL  DEFAULT 0,
  "MTHAVESND"    INTEGER         NOT NULL  DEFAULT 0,
  "MTREMAINED"   INTEGER         NOT NULL  DEFAULT 0,
  "MTRECVSPD"    INTEGER         NOT NULL  DEFAULT 0,
  "MOTOTALRECV"  INTEGER         NOT NULL  DEFAULT 0,
  "MOHAVESND"    INTEGER         NOT NULL  DEFAULT 0,
  "MOREMAINED"   INTEGER         NOT NULL  DEFAULT 0,
  "MOSNDSPD"     INTEGER         NOT NULL  DEFAULT 0,
  "RPTHAVESND"   INTEGER         NOT NULL  DEFAULT 0,
  "RPTREMAINED"  INTEGER         NOT NULL  DEFAULT 0,
  "RPTSNDSPD"    INTEGER         NOT NULL  DEFAULT 0,
  "RPTTOTALRECV" INTEGER         NOT NULL  DEFAULT 0,
  "LOGININTM"    TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "LOGINOUTTM"   TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "MODIFYTIME"   TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MON_DGTACINFO"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MON_DHOST"
 ("ID"             BIGINT     NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "HOSTID"         BIGINT     NOT NULL,
  "HOSTSTATUS"     SMALLINT   NOT NULL  DEFAULT 0,
  "EVTTYPE"        INTEGER    NOT NULL  DEFAULT 0,
  "MEMUSE"         INTEGER              DEFAULT 0,
  "VMEMUSE"        INTEGER              DEFAULT 0,
  "DISKSPACE"      INTEGER              DEFAULT 0,
  "CPUUSAGE"       INTEGER    NOT NULL  DEFAULT 0,
  "MEMUSAGE"       INTEGER    NOT NULL  DEFAULT 0,
  "VMEMUSAGE"      INTEGER    NOT NULL  DEFAULT 0,
  "DISKFREESPACE"  INTEGER    NOT NULL  DEFAULT 0,
  "UPDATETIME"     TIMESTAMP  NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "PROCESSCNT"     INTEGER    NOT NULL  DEFAULT 0
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MON_DHOST"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MON_DPROCE"
 ("ID"             BIGINT     NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PROCEID"        BIGINT     NOT NULL,
  "GATEWAYID"      BIGINT,
  "EVTTYPE"        INTEGER    NOT NULL  DEFAULT 0,
  "CPUUSAGE"       INTEGER    NOT NULL  DEFAULT 0,
  "MEMUSAGE"       INTEGER    NOT NULL  DEFAULT 0,
  "VMEMUSAGE"      INTEGER    NOT NULL  DEFAULT 0,
  "DISPFREE"       INTEGER    NOT NULL  DEFAULT 0,
  "PROCESTATUS"    SMALLINT   NOT NULL  DEFAULT 0,
  "UPDATETIME"     TIMESTAMP  NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "STARTTIME"      TIMESTAMP,
  "MAXTHREADNUM"   INTEGER              DEFAULT 0,
  "CURTHREADNUM"   INTEGER              DEFAULT 0,
  "BUSYTHREADNUM"  INTEGER              DEFAULT 0,
  "CURSEESIONNUM"  INTEGER              DEFAULT 0,
  "MAXACTIVENUM"   INTEGER              DEFAULT 0,
  "CURCONNUM"      INTEGER              DEFAULT 0,
  "HEAPUSE"        INTEGER              DEFAULT 0,
  "NONHEAPUSE"     INTEGER              DEFAULT 0
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MON_DPROCE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MON_DSPACINFO"
 ("ID"           BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "SPACCOUNTID"  VARCHAR(11)     NOT NULL  DEFAULT '',
  "EVTTYPE"      INTEGER         NOT NULL  DEFAULT 0,
  "LINKNUM"      INTEGER         NOT NULL  DEFAULT 1,
  "LOGINIP"      VARCHAR(64)     NOT NULL  DEFAULT '',
  "ONLINESTATUS" SMALLINT        NOT NULL  DEFAULT 0,
  "SENDLEVEL"    INTEGER                   DEFAULT 5,
  "USERFEE"      INTEGER         NOT NULL  DEFAULT 0,
  "FEEFLAG"      INTEGER         NOT NULL  DEFAULT 0,
  "MTTOTALSND"   INTEGER         NOT NULL  DEFAULT 0,
  "MTHAVESND"    INTEGER         NOT NULL  DEFAULT 0,
  "MTREMAINED"   INTEGER         NOT NULL  DEFAULT 0,
  "MTSNDSPD"     INTEGER         NOT NULL  DEFAULT 0,
  "MTISSUEDSPD"  INTEGER         NOT NULL  DEFAULT 0,
  "MOTOTALRECV"  INTEGER         NOT NULL  DEFAULT 0,
  "MOHAVESND"    INTEGER         NOT NULL  DEFAULT 0,
  "MOREMAINED"   INTEGER         NOT NULL  DEFAULT 0,
  "MOSNDSPD"     INTEGER         NOT NULL  DEFAULT 0,
  "RPTTOTALRECV" INTEGER         NOT NULL  DEFAULT 0,
  "RPTREMAINED"  INTEGER         NOT NULL  DEFAULT 0,
  "RPTSNDSPD"    INTEGER         NOT NULL  DEFAULT 0,
  "LOGININTM"    TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "LOGINOUTTM"   TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "UPDATETIME"   TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MON_DSPACINFO"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MON_ERR"
 ("ID"           BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "HOSTID"       BIGINT          NOT NULL,
  "PROCEID"      BIGINT          NOT NULL  DEFAULT 0,
  "SPACCOUNTID"  VARCHAR(11)     NOT NULL  DEFAULT ' ',
  "GATEACCOUNT"  VARCHAR(11)     NOT NULL  DEFAULT ' ',
  "APPTYPE"      INTEGER         NOT NULL,
  "EVTID"        BIGINT,
  "WHO"          VARCHAR(16)               DEFAULT '',
  "EVTTYPE"      SMALLINT,
  "DEALPEOPLE"   VARCHAR(20),
  "DEALDESC"     VARCHAR(512),
  "MONSTATUS"    SMALLINT        NOT NULL  DEFAULT 1,
  "DEALFLAG"     SMALLINT        NOT NULL  DEFAULT 1,
  "CRTTIME"      TIMESTAMP,
  "EVTTIME"      TIMESTAMP       NOT NULL,
  "RCVTIME"      TIMESTAMP       NOT NULL,
  "MSG"          VARCHAR(512)    NOT NULL,
  "MONTHRESHOLD" INTEGER                   DEFAULT 0,
  "MONTIMER"     BIGINT                    DEFAULT 1
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MON_ERR"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MON_ERRHIS"
 ("ID"           BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "HOSTID"       BIGINT          NOT NULL,
  "PROCEID"      BIGINT          NOT NULL  DEFAULT 0,
  "SPACCOUNTID"  VARCHAR(11)     NOT NULL  DEFAULT ' ',
  "GATEACCOUNT"  VARCHAR(11)     NOT NULL  DEFAULT ' ',
  "APPTYPE"      INTEGER         NOT NULL,
  "WHO"          VARCHAR(16)               DEFAULT '',
  "EVTID"        BIGINT,
  "EVTTIME"      TIMESTAMP       NOT NULL,
  "EVTTYPE"      SMALLINT,
  "DEALPEOPLE"   VARCHAR(20)     NOT NULL  DEFAULT ' ',
  "DEALDESC"     VARCHAR(512),
  "DEALFLAG"     SMALLINT        NOT NULL  DEFAULT 1,
  "MONSTATUS"    SMALLINT        NOT NULL  DEFAULT 1,
  "RCVTIME"      TIMESTAMP       NOT NULL,
  "CRTTIME"      TIMESTAMP       NOT NULL,
  "MSG"          VARCHAR(512)    NOT NULL,
  "MONTIMER"     BIGINT                    DEFAULT 1
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MON_ERRHIS"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MON_ONLCFG"
 ("ID"         BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "ONLINENUM"  BIGINT          NOT NULL  DEFAULT 0,
  "MAX_ONLINE" BIGINT          NOT NULL  DEFAULT 500,
  "EVTTYPE"    INTEGER         NOT NULL  DEFAULT 0,
  "MONFREQ"    BIGINT          NOT NULL  DEFAULT 30,
  "MONPHONE"   VARCHAR(256),
  "MODIFYTIME" TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "MONSTATUS"  SMALLINT        NOT NULL  DEFAULT 1
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MON_ONLCFG"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MON_ONLUSER"
 ("SESSEION_ID"  VARCHAR(64)     NOT NULL,
  "CORP_CODE"    VARCHAR(64)     NOT NULL,
  "USER_NAME"    VARCHAR(64)     NOT NULL,
  "NAME"         VARCHAR(64)     NOT NULL,
  "USER_ID"      BIGINT          NOT NULL,
  "DEP_ID"       BIGINT          NOT NULL,
  "LOGINTIME"    TIMESTAMP       NOT NULL,
  "LOGINADDR"    VARCHAR(15)     NOT NULL,
  "SERVERNUM"    VARCHAR(8)      NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MON_ONLUSER"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MON_SGTACINFO"
 ("HOSTID"       BIGINT          NOT NULL,
  "GATEACCOUNT"  VARCHAR(11)     NOT NULL,
  "GATENAME"     VARCHAR(56)     NOT NULL  DEFAULT '',
  "GATEWAYID"    BIGINT,
  "MONSTATUS"    SMALLINT        NOT NULL  DEFAULT 1,
  "LINKNUM"      INTEGER         NOT NULL  DEFAULT 1,
  "USERFEE"      INTEGER         NOT NULL  DEFAULT 0,
  "ISARREARAGE"  INTEGER         NOT NULL  DEFAULT 0,
  "MTREMAINED"   INTEGER         NOT NULL  DEFAULT 0,
  "MTRECVSPD"    INTEGER         NOT NULL  DEFAULT 0,
  "MOREMAINED"   INTEGER         NOT NULL  DEFAULT 0,
  "MOSNDSPD"     INTEGER         NOT NULL  DEFAULT 0,
  "MOSNDRATIO"   INTEGER         NOT NULL  DEFAULT 0,
  "RPTREMAINED"  INTEGER         NOT NULL  DEFAULT 0,
  "RPTSNDSPD"    INTEGER         NOT NULL  DEFAULT 0,
  "RPTSNDRATIO"  INTEGER         NOT NULL  DEFAULT 0,
  "CREATETIME"   TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "MODIFYTIME"   TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "MONPHONE"     VARCHAR(256),
  "MONFREQ"      INTEGER         NOT NULL  DEFAULT 5
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MON_SGTACINFO"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MON_SHOST"
 ("HOSTID"         BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "HOSTNAME"       VARCHAR(64)     NOT NULL,
  "HOSTTYPE"       SMALLINT        NOT NULL,
  "ADAPTER1"       VARCHAR(72),
  "ADAPTER2"       VARCHAR(72)               DEFAULT '',
  "OUPIP"          VARCHAR(64)               DEFAULT '',
  "HOSTMEM"        INTEGER,
  "HOSTHD"         INTEGER,
  "HOSTCPU"        VARCHAR(64)               DEFAULT '',
  "OPERSYS"        VARCHAR(128)              DEFAULT '',
  "MONSTATUS"      SMALLINT        NOT NULL  DEFAULT 1,
  "CREATETIME"     TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "MODIFYTIME"     TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "DESCR"          VARCHAR(128)              DEFAULT '',
  "MONPHONE"       VARCHAR(256),
  "CPUUSAGE"       INTEGER         NOT NULL  DEFAULT 0,
  "MEMUSAGE"       INTEGER         NOT NULL  DEFAULT 0,
  "VMEMUSAGE"      INTEGER         NOT NULL  DEFAULT 0,
  "DISKFREESPACE"  INTEGER         NOT NULL  DEFAULT 0,
  "CPUSJ"          INTEGER                   DEFAULT 0,
  "CPUBL"          INTEGER                   DEFAULT 0,
  "PROCESSCNT"     INTEGER         NOT NULL  DEFAULT 0,
  "MONFREQ"        INTEGER         NOT NULL  DEFAULT 5,
  "HOSTUSESTATUS"  INTEGER         NOT NULL  DEFAULT 0
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MON_SHOST"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MON_SPGATEBUF"
 ("ID"           BIGINT     NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PROCEID"      BIGINT     NOT NULL,
  "GATEWAYID"    BIGINT     NOT NULL,
  "MTRVCNT"      INTEGER    NOT NULL  DEFAULT 0,
  "MTSDCNT"      INTEGER    NOT NULL  DEFAULT 0,
  "MTSDBUF"      INTEGER    NOT NULL  DEFAULT 0,
  "MTUPDBUF"     INTEGER    NOT NULL  DEFAULT 0,
  "MTSDWAITBUF"  INTEGER    NOT NULL  DEFAULT 0,
  "MTSPD1"       INTEGER    NOT NULL  DEFAULT 0,
  "MTSPD2"       INTEGER    NOT NULL  DEFAULT 0,
  "MORVCNT"      INTEGER    NOT NULL  DEFAULT 0,
  "RPTRVCNT"     INTEGER    NOT NULL  DEFAULT 0,
  "MORVBUF"      INTEGER    NOT NULL  DEFAULT 0,
  "RPTRVBUF"     INTEGER    NOT NULL  DEFAULT 0,
  "MOSDBUF"      INTEGER    NOT NULL  DEFAULT 0,
  "RPTSDBUF"     INTEGER    NOT NULL  DEFAULT 0,
  "MOSDWAITBUF"  INTEGER    NOT NULL  DEFAULT 0,
  "RPTSDWAITBUF" INTEGER    NOT NULL  DEFAULT 0,
  "MORPTSPD"     INTEGER    NOT NULL  DEFAULT 0,
  "UPDATETIME"   TIMESTAMP  NOT NULL  DEFAULT CURRENT TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MON_SPGATEBUF"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MON_SPROCE"
 ("PROCEID"        BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "HOSTID"         BIGINT          NOT NULL,
  "PROCENAME"      VARCHAR(64)     NOT NULL,
  "VERSION"        VARCHAR(64)     NOT NULL  DEFAULT '',
  "MONFREQ"        INTEGER         NOT NULL  DEFAULT 5,
  "MONSTATUS"      SMALLINT        NOT NULL  DEFAULT 1,
  "PROCETYPE"      INTEGER         NOT NULL,
  "GATEWAYID"      BIGINT,
  "CREATETIME"     TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "MODIFYTIME"     TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "MONPHONE"       VARCHAR(256),
  "DESCR"          VARCHAR(128),
  "CPUBL"          INTEGER         NOT NULL  DEFAULT 0,
  "MEMUSE"         INTEGER         NOT NULL  DEFAULT 0,
  "VMEMUSE"        INTEGER         NOT NULL  DEFAULT 0,
  "HARDDISKSPACE"  INTEGER         NOT NULL  DEFAULT 0,
  "CURTHREADUSE"   INTEGER                   DEFAULT 0,
  "CURSEESIONUSE"  INTEGER                   DEFAULT 0,
  "CURCONUSE"      INTEGER                   DEFAULT 0,
  "HEAPUSE"        INTEGER                   DEFAULT 0,
  "NONHEAPUSE"     INTEGER                   DEFAULT 0,
  "PROCEUSESTATUS" INTEGER         NOT NULL  DEFAULT 0
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MON_SPROCE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MON_SSPACINFO"
 ("HOSTID"         BIGINT          NOT NULL,
  "SPACCOUNTID"    VARCHAR(11)     NOT NULL,
  "ACCOUNTNAME"    VARCHAR(56)     NOT NULL  DEFAULT '',
  "SPACCOUNTTYPE"  SMALLINT        NOT NULL  DEFAULT 0,
  "SENDLEVEL"      INTEGER,
  "MONSTATUS"      SMALLINT        NOT NULL  DEFAULT 1,
  "MAXLINKNUM"     INTEGER         NOT NULL  DEFAULT 1,
  "USERFEE"        INTEGER         NOT NULL  DEFAULT 0,
  "MTHAVESND"      INTEGER         NOT NULL  DEFAULT 0,
  "MTREMAINED"     INTEGER         NOT NULL  DEFAULT 0,
  "MTSNDSPD"       INTEGER         NOT NULL  DEFAULT 0,
  "MTISSUEDSPD"    INTEGER         NOT NULL  DEFAULT 0,
  "MOREMAINED"     INTEGER         NOT NULL  DEFAULT 0,
  "MORECVRATIO"    INTEGER         NOT NULL  DEFAULT 0,
  "RPTREMAINED"    INTEGER         NOT NULL  DEFAULT 0,
  "RPTSNDSPD"      INTEGER         NOT NULL  DEFAULT 0,
  "RPTRECVRATIO"   INTEGER         NOT NULL  DEFAULT 0,
  "CREATETIME"     TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "MODIFYTIME"     TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "MONPHONE"       VARCHAR(256),
  "MONFREQ"        INTEGER         NOT NULL  DEFAULT 5
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MON_SSPACINFO"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MON_WBSBUF"
 ("ID"            BIGINT     NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PROCEID"       BIGINT     NOT NULL,
  "GATEWAYID"     BIGINT     NOT NULL,
  "MTNOSD"        INTEGER    NOT NULL  DEFAULT 0,
  "MONOSD"        INTEGER    NOT NULL  DEFAULT 0,
  "RPTNOSD"       INTEGER    NOT NULL  DEFAULT 0,
  "ENDCNT"        INTEGER    NOT NULL  DEFAULT 0,
  "MORVCNT"       INTEGER    NOT NULL  DEFAULT 0,
  "MTSDCNT"       INTEGER    NOT NULL  DEFAULT 0,
  "WRMOBUF"       INTEGER    NOT NULL  DEFAULT 0,
  "UPDMOBUF"      INTEGER    NOT NULL  DEFAULT 0,
  "WRRPTBUF"      INTEGER    NOT NULL  DEFAULT 0,
  "ENDRSPBUF"     INTEGER    NOT NULL  DEFAULT 0,
  "MTSDBUF"       INTEGER    NOT NULL  DEFAULT 0,
  "MTWAITBUF"     INTEGER    NOT NULL  DEFAULT 0,
  "PRECNT"        INTEGER    NOT NULL  DEFAULT 0,
  "MTRVCNT"       INTEGER    NOT NULL  DEFAULT 0,
  "MOSDCNT"       INTEGER    NOT NULL  DEFAULT 0,
  "WRMTBUF"       INTEGER    NOT NULL  DEFAULT 0,
  "WRMTVFYBUF"    INTEGER    NOT NULL  DEFAULT 0,
  "WRMTLVLBUF"    INTEGER    NOT NULL  DEFAULT 0,
  "PRERSPBUF"     INTEGER    NOT NULL  DEFAULT 0,
  "PRERSPTMPBUF"  INTEGER    NOT NULL  DEFAULT 0,
  "MORPTSDBUF"    INTEGER    NOT NULL  DEFAULT 0,
  "RPTSDBUF"      INTEGER    NOT NULL  DEFAULT 0,
  "MORPTWAITBUF"  INTEGER    NOT NULL  DEFAULT 0,
  "LOGFILENUM"    INTEGER    NOT NULL  DEFAULT 0,
  "LOGBUF"        INTEGER    NOT NULL  DEFAULT 0,
  "RECVBUF"       INTEGER    NOT NULL  DEFAULT 0,
  "RESNDBUF"      INTEGER    NOT NULL  DEFAULT 0,
  "SUPPSDBUF"     INTEGER    NOT NULL  DEFAULT 0,
  "MTRVSPD1"      INTEGER    NOT NULL  DEFAULT 0,
  "MTSDSPD1"      INTEGER    NOT NULL  DEFAULT 0,
  "MTRVSPD2"      INTEGER    NOT NULL  DEFAULT 0,
  "MTSDSPD2"      INTEGER    NOT NULL  DEFAULT 0,
  "MORPTRVSPD1"   INTEGER    NOT NULL  DEFAULT 0,
  "MORPTSDSPD1"   INTEGER    NOT NULL  DEFAULT 0,
  "MORPTRVSPD2"   INTEGER    NOT NULL  DEFAULT 0,
  "MORPTSDSPD2"   INTEGER    NOT NULL  DEFAULT 0,
  "UPDATETIME"    TIMESTAMP  NOT NULL  DEFAULT CURRENT TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MON_WBSBUF"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MOTASK"
 ("MO_ID"        BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PTMSGID"      BIGINT                    DEFAULT 0,
  "UIDS"         INTEGER                   DEFAULT 0,
  "ORGUID"       INTEGER                   DEFAULT 0,
  "ECID"         INTEGER                   DEFAULT 0,
  "SP_USER"      VARCHAR(11)               DEFAULT ' ',
  "SPNUMBER"     VARCHAR(21)               DEFAULT ' ',
  "SERVICEID"    CHARACTER(10)             DEFAULT ' ',
  "SPSC"         VARCHAR(32),
  "SENDSTATUS"   INTEGER                   DEFAULT 2,
  "MSGFMT"       INTEGER                   DEFAULT 15,
  "TP_PID"       INTEGER                   DEFAULT 0,
  "TP_UDHI"      INTEGER                   DEFAULT 0,
  "DELIVERTIME"  TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "PHONE"        VARCHAR(21)               DEFAULT ' ',
  "MSGCONTENT"   VARCHAR(720)              DEFAULT ' ',
  "DONETIME"     TIMESTAMP       NOT NULL,
  "USER_GUID"    BIGINT,
  "MENUCODE"     VARCHAR(64),
  "DEP_ID"       BIGINT,
  "TASK_ID"      BIGINT,
  "BUS_CODE"     VARCHAR(64),
  "CORPCODE"     VARCHAR(32),
  "SPISUNCM"     INTEGER,
  "SUBNO"        VARCHAR(20),
  "MOORDER"      VARCHAR(32)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MOTASK"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MO_SERVICE"
 ("MS_ID"       BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "SP_USER"     CHARACTER(6)    NOT NULL  DEFAULT ' ',
  "SPNUMBER"    CHARACTER(21)   NOT NULL  DEFAULT ' ',
  "MSGCONTENT"  VARCHAR(720)    NOT NULL  DEFAULT ' ',
  "DELIVERTIME" TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "PHONE"       VARCHAR(32)     NOT NULL  DEFAULT ' ',
  "PR_ID"       BIGINT,
  "SER_ID"      BIGINT,
  "REPLY_STATE" INTEGER,
  "REPLY_URL"   VARCHAR(512),
  "CORP_CODE"   VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MO_SERVICE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MTRPT_EC"
 ("ID"         INTEGER         NOT NULL  GENERATED ALWAYS
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 2147483647, NO CYCLE, NO ORDER),
  "USERID"     VARCHAR(11)     NOT NULL,
  "TASKID"     INTEGER         NOT NULL  DEFAULT 0,
  "SPGATE"     VARCHAR(21)     NOT NULL,
  "ERRORCODE"  CHARACTER(7)    NOT NULL  DEFAULT '       ',
  "Y"          SMALLINT        NOT NULL  DEFAULT 0,
  "IMONTH"     SMALLINT        NOT NULL,
  "ICOUNT"     INTEGER         NOT NULL  DEFAULT 0,
  "IYMD"       INTEGER         NOT NULL,
  "SPISUNCM"   SMALLINT        NOT NULL  DEFAULT 0,
  "SVRTYPE"    VARCHAR(64)     NOT NULL  DEFAULT '',
  "P1"         VARCHAR(64)     NOT NULL  DEFAULT '',
  "P2"         VARCHAR(64)     NOT NULL  DEFAULT '',
  "P3"         VARCHAR(64)     NOT NULL  DEFAULT '',
  "P4"         VARCHAR(64)     NOT NULL  DEFAULT ''
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MTRPT_EC"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_MTTASK"
 ("MT_ID"          BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, CACHE 100, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "USER_ID"        BIGINT          NOT NULL,
  "TITLE"          VARCHAR(64),
  "MSG"            VARCHAR(2048),
  "MSG_TYPE"       SMALLINT,
  "BIGINTIME"      TIMESTAMP,
  "ENDTIME"        TIMESTAMP,
  "SENDLEVEL"      SMALLINT,
  "SUBMITTIME"     TIMESTAMP,
  "TASKNAME"       VARCHAR(64),
  "SUB_STATE"      SMALLINT,
  "RE_STATE"       SMALLINT,
  "SENDSTATE"      SMALLINT,
  "RE_LEVEL"       SMALLINT,
  "BMTTYPE"        SMALLINT,
  "CONTENT"        VARCHAR(512),
  "MOBILE_URL"     VARCHAR(512)    NOT NULL,
  "MOBILE_TYPE"    SMALLINT,
  "TXT_TYPE"       SMALLINT,
  "COMMENTS"       VARCHAR(512),
  "SP_USER"        VARCHAR(32),
  "STAFFNAME"      VARCHAR(32),
  "SP_PWD"         VARCHAR(32),
  "MS_TYPE"        SMALLINT,
  "TIMER_TIME"     TIMESTAMP,
  "TIMER_STATUS"   SMALLINT,
  "BUS_CODE"       VARCHAR(64),
  "PARAMS"         VARCHAR(200),
  "CORP_CODE"      VARCHAR(64),
  "RS_CODE"        VARCHAR(10),
  "LASTDATATIME"   TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "ERROR_CODES"    VARCHAR(32),
  "SUB_COUNT"      BIGINT,
  "EFF_COUNT"      BIGINT,
  "SUC_COUNT"      BIGINT,
  "ICOUNT"         BIGINT,
  "TOTALNUM"       BIGINT,
  "SUCSSCOUNT"     BIGINT,
  "FAICOUNT"       BIGINT,
  "FAI_COUNT"      BIGINT,
  "TASKID"         BIGINT          NOT NULL  DEFAULT 0,
  "ISREPLY"        SMALLINT,
  "SPNUMBER"       VARCHAR(80),
  "SUBNO"          VARCHAR(20),
  "ISRETRY"        SMALLINT                  DEFAULT 0,
  "RFAIL2"         BIGINT,
  "RNRET"          BIGINT,
  "TEMP_ID"        BIGINT,
  "PARAM_COUNT"    INTEGER,
  "TMPL_PATH"      VARCHAR(512),
  "ICOUNT2"        BIGINT,
  "TASKTYPE"       SMALLINT        NOT NULL  DEFAULT 1,
  "BATCHID"        BIGINT          NOT NULL  DEFAULT 0,
  "STARTSENDTIME"  TIMESTAMP,
  "ENDSENDTIME"    TIMESTAMP,
  "WYSENDINFO"     VARCHAR(128)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_MTTASK"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_NOTICE"
 ("NOTICE_ID"     BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "USER_ID"       BIGINT,
  "TITLE"         VARCHAR(64),
  "CONTEXT"       VARCHAR(2000),
  "PUBLISH_TIME"  TIMESTAMP,
  "CORP_CODE"     VARCHAR(64),
  "NOTE_TAIL"     VARCHAR(64),
  "NOTE_STATE"    INTEGER,
  "NOTE_VALID"    INTEGER
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_NOTICE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_ONLINE_USER"
 ("ONUID"            BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "USER_ID"          BIGINT          NOT NULL,
  "USERNAME"         VARCHAR(64),
  "DEP_ID"           BIGINT,
  "DEP_NAME"         VARCHAR(64),
  "MOBILE"           VARCHAR(32),
  "SEX"              SMALLINT,
  "LOGIN_TYPE"       SMALLINT,
  "TOKEN"            VARCHAR(40),
  "LAST_LOGIN_TIME"  TIMESTAMP,
  "GUID"             BIGINT,
  "FLAG"             VARCHAR(12)               DEFAULT '0000000000',
  "USER_TYPE"        SMALLINT,
  "LAST_ACTIVE_TIME" BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_ONLINE_USER"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_OPERATE"
 ("OPERATE_ID"    BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "OPERATE_NAME"  VARCHAR(64),
  "COMMENTS"      VARCHAR(512)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_OPERATE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_OPRATELOG"
 ("LOG_ID"     BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "OP_TIME"    TIMESTAMP,
  "OP_USER"    VARCHAR(64),
  "OP_MODULE"  VARCHAR(64),
  "OP_ACTION"  VARCHAR(64),
  "OP_RESULT"  SMALLINT,
  "OP_CONTENT" VARCHAR(4000),
  "CORP_CODE"  VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_OPRATELOG"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_PAGEFIELD"
 ("MODLEID"        VARCHAR(16),
  "PAGEID"         VARCHAR(16),
  "FIELDID"        VARCHAR(16)     NOT NULL,
  "FIELDNAME"      VARCHAR(32)     NOT NULL,
  "FIELD"          VARCHAR(32),
  "FIELDTYPE"      SMALLINT        NOT NULL,
  "SUBFIELDVALUE"  VARCHAR(16),
  "SUBFIELDNAME"   VARCHAR(32),
  "FILEDSHOW"      SMALLINT        NOT NULL,
  "SUBFIELD"       SMALLINT        NOT NULL,
  "DEFAULTVALUE"   VARCHAR(32),
  "SORTVALUE"      SMALLINT,
  "ISFIELD"        SMALLINT        NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_PAGEFIELD"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_PARAM"
 ("PARAM_ID"         BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PARAM_CODE"       VARCHAR(12),
  "PARAM_NAME"       VARCHAR(32),
  "PARAM_VALUE"      VARCHAR(32),
  "PARAM_OBJECT"     VARCHAR(32),
  "PARAM_IDEN_TYPE"  INTEGER,
  "COMMENTS"         VARCHAR(400)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_PARAM"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_PERFECT_NOTIC"
 ("P_NOTIC_ID"    BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "SUBMITTIME"    TIMESTAMP,
  "SEND_INTERAL"  INTEGER,
  "MAX_SENDCOUNT" INTEGER,
  "ARY_SENDCOUNT" INTEGER,
  "SENDER_GUID"   BIGINT,
  "CONTENT"       VARCHAR(2000),
  "RECEIVER_TYPE" INTEGER,
  "DIALOGID"      VARCHAR(3000),
  "RECEVIERID"    BIGINT,
  "TASKID"        BIGINT          NOT NULL,
  "NOTIC_COUNT"   INTEGER,
  "CORP_CODE"     VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_PERFECT_NOTIC"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_PERSONALCONFIG"
 ("PER_ID"      BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "BUS_ID"      BIGINT,
  "MENUCODE"    VARCHAR(64),
  "ISPERSONAL"  SMALLINT,
  "VERSION"     VARCHAR(32)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_PERSONALCONFIG"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_PER_FILEINFO"
 ("TASKID"        BIGINT          NOT NULL,
  "SENDFILENAME"  VARCHAR(512)    NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_PER_FILEINFO"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_POSITION"
 ("P_ID"    BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "P_NAME"  VARCHAR(64),
  "ISDEL"   SMALLINT                  DEFAULT 0,
  "MEMO"    VARCHAR(500)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_POSITION"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_PRIVILEGE"
 ("PRIVILEGE_ID"  BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "RESOURCE_ID"   BIGINT,
  "OPERATE_ID"    BIGINT,
  "COMMENTS"      VARCHAR(512),
  "PRIV_CODE"     VARCHAR(64),
  "MENUNAME"      VARCHAR(64),
  "MODNAME"       VARCHAR(64),
  "MENUCODE"      VARCHAR(64),
  "MENUSITE"      VARCHAR(2048)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_PRIVILEGE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_PRIV_LIST"
 ("USER_ID"  BIGINT  NOT NULL,
  "DEP_ID"   BIGINT  NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_PRIV_LIST"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_PROCESS"
 ("PR_ID"          BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "DB_ID"          BIGINT,
  "SER_ID"         BIGINT,
  "SG_ID"          BIGINT,
  "PR_NAME"        VARCHAR(64),
  "COMMENTS"       VARCHAR(512),
  "PR_TYPE"        SMALLINT,
  "FINAL_STATE"    SMALLINT,
  "GR_STATE"       SMALLINT,
  "PR_RESULT"      SMALLINT,
  "TABLE_NAME"     VARCHAR(64),
  "SQL_STR"        VARCHAR(2048),
  "NEXTPR_ID"      SMALLINT,
  "SYS_ERROR"      VARCHAR(512),
  "DB_ERROR"       VARCHAR(512),
  "PR_NO"          BIGINT,
  "PREPR_ID"       BIGINT,
  "PRO_CODE"       VARCHAR(64),
  "MSG_SEPARATED"  VARCHAR(32),
  "MSG_TYPE"       SMALLINT,
  "MSG_CONTENT"    VARCHAR(1024),
  "TEMPLATE_ID"    BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_PROCESS"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_PROCHARGES"
 ("RULE_ID"             BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "TRYSTART_DATE"       TIMESTAMP,
  "TRYEND_DATE"         TIMESTAMP,
  "TRY_DAYS"            INTEGER,
  "TRY_TYPE"            SMALLINT,
  "BUCKLE_TYPE"         SMALLINT,
  "BUCKLE_DATE"         INTEGER,
  "BUCKUP_MAXTIMER"     INTEGER,
  "BUCKUP_INTERVALDAY"  INTEGER,
  "TAOCAN_CODE"         VARCHAR(64)     NOT NULL,
  "COMMENTS"            VARCHAR(250)              DEFAULT '',
  "CREATE_TIME"         TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "UPDATE_TIME"         TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "DEP_ID"              BIGINT,
  "USER_ID"             BIGINT,
  "CORP_CODE"           VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_PROCHARGES"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_PRODUCTOR_CONT"
 ("IDEN_ID"        BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PRO_ID"         BIGINT          NOT NULL,
  "CONTENT_TITLE"  VARCHAR(64),
  "CONTENT_BODY"   VARCHAR(250),
  "SEND_TIMES"     TIMESTAMP,
  "SEND_STATUS"    SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_PRODUCTOR_CONT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_PRODUCTS"
 ("PRO_ID"       BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PRO_NAME"     VARCHAR(64),
  "MONTH_ORDER"  VARCHAR(64),
  "VOD_ORDER"    VARCHAR(64),
  "UNDO_ORDER"   VARCHAR(200),
  "MONTH_COST"   INTEGER,
  "VOD_COST"     INTEGER,
  "MT_RATE"      BIGINT,
  "PRO_TYPE"     BIGINT,
  "COMMENTS"     VARCHAR(128),
  "TITLE"        VARCHAR(64),
  "MSG"          VARCHAR(1024),
  "MS_TYPE"      SMALLINT,
  "SER_ADDRESS"  VARCHAR(1024),
  "PARAM_CONFIG" VARCHAR(1024),
  "OVER_COST"    INTEGER,
  "PRO_CODE"     VARCHAR(64),
  "CREATE_TIME"  TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "SEND_TIME"    VARCHAR(32)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_PRODUCTS"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_PROSENDCOUNT"
 ("CID"         BIGINT  NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PRO_ID"      BIGINT  NOT NULL,
  "SEND_COUNT"  BIGINT,
  "YEAR"        BIGINT,
  "MONTH"       BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_PROSENDCOUNT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_PRO_CON"
 ("DBCON_ID"     BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PR_ID"        BIGINT,
  "CON_EXPRESS"  VARCHAR(64),
  "CON_OPERATE"  VARCHAR(64),
  "CON_VALUE"    VARCHAR(64),
  "COMMENTS"     VARCHAR(512),
  "USEDPRID"     BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_PRO_CON"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_P_N_UP"
 ("PNUP_ID"        BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "P_NOTIC"        BIGINT,
  "SENDER_GUID"    BIGINT,
  "CONTENT"        VARCHAR(2000),
  "SEND_TIME"      TIMESTAMP,
  "RECEIVERID"     BIGINT,
  "USERTYPE"       INTEGER,
  "NAME"           VARCHAR(64),
  "ISREPLY"        INTEGER,
  "ISRECEIVER"     INTEGER,
  "DIALOGIN"       VARCHAR(32),
  "TASKID"         BIGINT,
  "MOBILE"         VARCHAR(64),
  "RECEIVE_COUNT"  INTEGER,
  "SPUSER"         VARCHAR(32),
  "SPNUMBER"       VARCHAR(21),
  "CREATE_TIME"    TIMESTAMP,
  "ISATRRED"       VARCHAR(2)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_P_N_UP"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_RECONCILIATION"
 ("ID"        BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "IMONTH"    INTEGER,
  "Y"         SMALLINT,
  "IYMD"      BIGINT,
  "RSUCC"     INTEGER,
  "SPISUNCM"  SMALLINT,
  "FEE"       DOUBLE,
  "STAFFNAME" VARCHAR(64),
  "DEP_NAME"  VARCHAR(64),
  "GATENAME"  VARCHAR(64),
  "COST"      DOUBLE,
  "ICOUNT"    INTEGER,
  "USERID"    VARCHAR(11),
  "DEP_ID"    BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_RECONCILIATION"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_REPLY"
 ("RE_ID"       BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PR_ID"       BIGINT          NOT NULL,
  "MSG_HEADER"  VARCHAR(512),
  "MSG_MAIN"    VARCHAR(2000),
  "MSG_TAIL"    VARCHAR(512),
  "MSG_LOOP_ID" BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_REPLY"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_RESOURCE"
 ("RESOURCE_ID"    BIGINT          NOT NULL,
  "RESOURCE_NAME"  VARCHAR(64),
  "COMMENTS"       VARCHAR(512)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_RESOURCE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_REVIEWER"
 ("F_ID"     BIGINT    NOT NULL,
  "MT_ID"    BIGINT    NOT NULL,
  "RE_ID"    BIGINT,
  "R_LEVEL"  SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_REVIEWER"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_REVIEWER2LEVEL"
 ("FRL_ID"         BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "F_ID"           BIGINT          NOT NULL,
  "USER_ID"        BIGINT          NOT NULL,
  "R_LEVEL"        SMALLINT,
  "IS_REV_REMIND"  SMALLINT,
  "R_TYPE"         SMALLINT,
  "R_CODE"         VARCHAR(64),
  "R_CONDITION"    SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_REVIEWER2LEVEL"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_REVIEWSWITCH"
 ("ID"           BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "MENUCODE"     VARCHAR(64),
  "SWITCH_TYPE"  SMALLINT,
  "MSG_COUNT"    INTEGER,
  "INFO_TYPE"    SMALLINT,
  "UPDATE_TIME"  TIMESTAMP,
  "CORP_CODE"    VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_REVIEWSWITCH"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_ROLES"
 ("ROLE_ID"      BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "ROLE_NAME"    VARCHAR(64),
  "COMMENTS"     VARCHAR(512),
  "CORP_CODE"    VARCHAR(64),
  "CREATE_GUID"  BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_ROLES"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_SENDGRO"
 ("SG_ID"    BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "SER_ID"   BIGINT,
  "SG_NAME"  VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_SENDGRO"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_SERMSG_DETAIL"
 ("SMD_ID"      BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "SL_ID"       BIGINT,
  "SMD_MOBILE"  VARCHAR(64),
  "SMD_CONTENT" VARCHAR(140),
  "COMMENTS"    VARCHAR(512)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_SERMSG_DETAIL"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_SERVICE"
 ("SER_ID"         BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "USER_ID"        BIGINT,
  "SER_NAME"       VARCHAR(64),
  "COMMENTS"       VARCHAR(512),
  "ORDER_CODE"     VARCHAR(64),
  "SUBNO"          VARCHAR(64),
  "SP_USER"        VARCHAR(64),
  "STAFFNAME"      VARCHAR(32),
  "SP_PWD"         VARCHAR(32),
  "RUN_STATE"      SMALLINT,
  "SER_TYPE"       SMALLINT,
  "MSG_SEPARATED"  VARCHAR(32),
  "OWNER_ID"       BIGINT,
  "CREATE_TIME"    TIMESTAMP,
  "BUS_ID"         BIGINT,
  "CPNO"           VARCHAR(21)               DEFAULT ' ',
  "BUS_CODE"       VARCHAR(64),
  "MENU_CODE"      VARCHAR(64),
  "CORP_CODE"      VARCHAR(64),
  "IDENTIFY_MODE"  INTEGER,
  "ORDER_TYPE"     INTEGER,
  "STRUCTCODE"     VARCHAR(20)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_SERVICE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_SERVICELOG"
 ("SL_ID"    BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "SER_ID"   BIGINT,
  "RUNTIME"  TIMESTAMP,
  "SL_STATE" SMALLINT,
  "URL"      VARCHAR(512)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_SERVICELOG"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_SERVICEMSG"
 ("SERMSGID"     BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "SER_ID"       BIGINT,
  "MSG_TYPE"     SMALLINT,
  "SER_MSG"      VARCHAR(512),
  "SG_ID"        BIGINT,
  "CREATE_TIME"  TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_SERVICEMSG"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_SKIN"
 ("SID"         BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "SKIN_NAMNE"  VARCHAR(32),
  "SKIN_CODE"   VARCHAR(32),
  "SKIN_SRC"    VARCHAR(200),
  "THEME_CODE"  VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_SKIN"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_SPEUICFG"
 ("COMPANYNAME"  VARCHAR(20),
  "COMPANYLOGO"  VARCHAR(512),
  "BGIMG"        VARCHAR(512),
  "LOGINLOGO"    VARCHAR(512),
  "DISPCONTENT"  VARCHAR(16)     NOT NULL  DEFAULT '11100000',
  "DISPLAYTYPE"  SMALLINT        NOT NULL  DEFAULT 1,
  "CORPCODE"     VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_SPEUICFG"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_SPFEE"
 ("SF_ID"            BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "SP_USER"          VARCHAR(32),
  "SP_USERPASSWORD"  VARCHAR(32),
  "SP_TYPE"          SMALLINT,
  "ACCOUNTTYPE"      SMALLINT,
  "SPFEE_URL"        VARCHAR(256),
  "BALANCE"          INTEGER,
  "BALANCETH"        INTEGER,
  "UPDATETIME"       TIMESTAMP,
  "SPFEE_FLAG"       SMALLINT,
  "SP_RESULT"        VARCHAR(32)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_SPFEE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_SP_DEP_BIND"
 ("DSG_ID"          BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "DEP_CODE_THIRD"  VARCHAR(64),
  "SPUSER"          VARCHAR(64),
  "SPGATEID"        BIGINT,
  "USER_ID"         BIGINT,
  "BIIND_TYPE"      SMALLINT,
  "SHARE_TYPE"      SMALLINT,
  "MENUCODE"        VARCHAR(64),
  "BUS_CODE"        VARCHAR(64),
  "SELBIN_TYPE"     SMALLINT,
  "PLATFORM_TYPE"   SMALLINT,
  "BUS_ID"          BIGINT,
  "CORP_CODE"       VARCHAR(64),
  "IS_VALIDATE"     SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_SP_DEP_BIND"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_SQLWHERE"
 ("WH_ID"       BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PR_ID"       BIGINT,
  "IF_EXPRESS"  VARCHAR(64),
  "WH_OPERATE"  VARCHAR(64),
  "IF_VALUE"    VARCHAR(64),
  "WH_JOIN"     VARCHAR(64),
  "COMMENTS"    VARCHAR(512)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_SQLWHERE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_SUBNOALLOT"
 ("SUID"              BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "MENUCODE"          VARCHAR(64),
  "LOGINID"           VARCHAR(64),
  "SP_USER"           VARCHAR(32),
  "SUBNO"             VARCHAR(20),
  "ALLOTTYPE"         SMALLINT,
  "EXTENDSUBNOBEGIN"  VARCHAR(20),
  "EXTEMDSUBNOEND"    VARCHAR(20),
  "USEDEXTENDSUBNO"   VARCHAR(20),
  "SPNUMBER"          VARCHAR(21),
  "UPDATETIME"        TIMESTAMP,
  "CREATETIME"        TIMESTAMP,
  "ROUTEID"           INTEGER,
  "BUS_CODE"          VARCHAR(64),
  "DEP_ID"            BIGINT,
  "SHARE_TYPE"        SMALLINT,
  "CODES"             VARCHAR(64),
  "CODE_TYPE"         SMALLINT,
  "CORP_CODE"         VARCHAR(64),
  "TASK_ID"           BIGINT,
  "VALIDITY"          BIGINT,
  "ISVALID"           INTEGER         NOT NULL  DEFAULT 1
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_SUBNOALLOT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_SUBNOALLOT_DETAIL"
 ("SUDID"            BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "MENUCODE"         VARCHAR(64),
  "LOGINID"          VARCHAR(64),
  "SP_USER"          VARCHAR(32),
  "SPGATE"           VARCHAR(20),
  "SUBNO"            VARCHAR(20),
  "USEDEXTENDSUBNO"  VARCHAR(20),
  "SPNUMBER"         VARCHAR(21),
  "ALLOTTYPE"        SMALLINT,
  "UPDATETIME"       TIMESTAMP,
  "CREATETIME"       TIMESTAMP,
  "BUS_CODE"         VARCHAR(64),
  "CODES"            VARCHAR(64),
  "CODE_TYPE"        SMALLINT,
  "SUID"             BIGINT,
  "CORP_CODE"        VARCHAR(64),
  "TASK_ID"          BIGINT,
  "VALIDITY"         BIGINT,
  "DEP_ID"           BIGINT,
  "ISVALID"          INTEGER         NOT NULL  DEFAULT 1
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_SUBNOALLOT_DETAIL"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_SURVEY"
 ("SUV_ID"       BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "TASKID"       BIGINT,
  "MSG_TYPE"     SMALLINT,
  "PHONE"        VARCHAR(64)     NOT NULL,
  "MSG_CONTENT"  VARCHAR(200),
  "SUV_SERID"    BIGINT,
  "SUV_PROCEID"  BIGINT          NOT NULL,
  "PRE_PROCEID"  BIGINT,
  "MSG_TIME"     TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "SPGATE"       VARCHAR(21),
  "SPONSOR"      BIGINT,
  "SEND_STATE"   SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_SURVEY"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_SURVEYTASK"
 ("IDEN_ID"      BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "TASK_ID"      BIGINT,
  "SER_ID"       BIGINT,
  "MSG_CONTENT"  VARCHAR(200),
  "PHONE"        VARCHAR(32),
  "MSG_TYPE"     SMALLINT,
  "MSG_TIME"     TIMESTAMP,
  "SP_USERID"    BIGINT,
  "SPONSOR"      BIGINT,
  "ADD_URL"      VARCHAR(200)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_SURVEYTASK"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_SYSMTTASK"
 ("ID"           BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "USER_ID"      BIGINT,
  "TITLE"        VARCHAR(64),
  "MSG"          VARCHAR(1024),
  "SEND_TYPE"    INTEGER,
  "SUBMITTIME"   TIMESTAMP,
  "SUB_COUNT"    INTEGER,
  "SUC_COUNT"    INTEGER,
  "FAI_COUNT"    INTEGER,
  "BMTTYPE"      INTEGER,
  "MOBILE_URL"   VARCHAR(512),
  "PHONE"        VARCHAR(21),
  "SP_USER"      VARCHAR(11),
  "ICOUNT"       INTEGER,
  "MS_TYPE"      INTEGER,
  "CORP_CODE"    VARCHAR(64),
  "SENDSTATE"    INTEGER,
  "TASKID"       BIGINT,
  "BUS_CODE"     VARCHAR(64),
  "ERROR_CODES"  VARCHAR(32),
  "USER_CODE"    VARCHAR(32)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_SYSMTTASK"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_SYSUSER"
 ("USER_ID"          BIGINT          NOT NULL,
  "DEP_ID"           BIGINT,
  "USER_NAME"        VARCHAR(64),
  "NAME"             VARCHAR(64),
  "SEX"              SMALLINT,
  "BIRTHDAY"         TIMESTAMP,
  "MOBILE"           VARCHAR(64),
  "OPH"              VARCHAR(64),
  "QQ"               VARCHAR(32),
  "E_MAIL"           VARCHAR(64),
  "MSN"              VARCHAR(64),
  "PASSWORD"         VARCHAR(128),
  "USER_STATE"       SMALLINT,
  "REG_TIME"         TIMESTAMP,
  "HOLDER"           VARCHAR(64),
  "COMMENTS"         VARCHAR(512),
  "WORK_STATE"       SMALLINT,
  "MANUAL_INPUT"     SMALLINT,
  "USER_TYPE"        SMALLINT,
  "UDG_ID"           BIGINT,
  "CLIENT_STATE"     SMALLINT,
  "EMPLOYEEID"       BIGINT,
  "GUID"             BIGINT          NOT NULL,
  "ON_LINE"          SMALLINT                  DEFAULT 0,
  "CORP_CODE"        VARCHAR(64),
  "P_ID"             BIGINT,
  "EMPLOYEE_NO"      VARCHAR(64),
  "REC_STATE"        SMALLINT                  DEFAULT 0,
  "HIDEPH_STATE"     SMALLINT                  DEFAULT 0,
  "DEP_CODE"         VARCHAR(64),
  "LASTUPDDTIM"      TIMESTAMP,
  "HR_STATUS"        VARCHAR(20)               DEFAULT 'A',
  "FAX"              VARCHAR(22),
  "ALLOW_LOGIN"      SMALLINT                  DEFAULT 0,
  "POST_ID"          BIGINT,
  "PERMISSION_TYPE"  SMALLINT                  DEFAULT 2,
  "USER_CODE"        VARCHAR(30)     NOT NULL,
  "ISEXISTSUBNO"     SMALLINT,
  "UP_GUID"          BIGINT,
  "IS_REVIEWER"      SMALLINT,
  "DUTIES"           VARCHAR(200),
  "IS_AUDITED"       SMALLINT,
  "CONTROLFLAG"      VARCHAR(16)     NOT NULL  DEFAULT '0000',
  "PWDUPDATETIME"    TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "PWDERRORTIMES"    INTEGER                   DEFAULT 0,
  "WORKNUMBER"       VARCHAR(30),
  "FINDPWDTIMES"     INTEGER,
  "FINDPWDDATE"      VARCHAR(30),
  "IS_CUSTOME"       INTEGER
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_SYSUSER"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_SYS_PARAM"
 ("PARAM_ID"     BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PARAM_GROUP"  VARCHAR(64),
  "PARAM_ITEM"   VARCHAR(64)     NOT NULL,
  "PARAM_VALUE"  VARCHAR(64),
  "MEMO"         VARCHAR(512)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_SYS_PARAM"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_TAOCAN_CMD"
 ("ID"            BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "STRUCTCODE"    VARCHAR(20)     NOT NULL,
  "TAOCAN_CODE"   VARCHAR(64),
  "TAOCAN_TYPE"   SMALLINT,
  "TAOCAN_MONEY"  BIGINT,
  "STRUCT_TYPE"   SMALLINT        NOT NULL,
  "CREATE_TIME"   TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "UPDATE_TIME"   TIMESTAMP                 DEFAULT CURRENT TIMESTAMP,
  "DEP_ID"        BIGINT,
  "USER_ID"       BIGINT,
  "CORP_CODE"     VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_TAOCAN_CMD"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_TASK"
 ("TAID"         BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, CACHE 100, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "TASKID"       BIGINT          NOT NULL,
  "SL_ID"        BIGINT,
  "MT_ID"        BIGINT,
  "TASKTYPE"     SMALLINT,
  "SPUSER"       VARCHAR(64),
  "USERNAME"     VARCHAR(64),
  "DEP_ID"       BIGINT,
  "USER_ID"      BIGINT,
  "SUBMIT_TIME"  TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "CORP_CODE"    VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_TASK"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_TASKREPORT"
 ("R_TASKID"    BIGINT,
  "R_ICOUNT"    BIGINT,
  "R_SUCC"      BIGINT,
  "R_FAIL1"     BIGINT,
  "R_FAIL2"     BIGINT,
  "R_NRET"      BIGINT,
  "R_BATCHID"   BIGINT,
  "R_TASKTYPE"  SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_TASKREPORT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_TEMPLATE"
 ("TM_ID"        BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "USER_ID"      BIGINT,
  "TM_NAME"      VARCHAR(64),
  "TM_MSG"       VARCHAR(2000),
  "DSFLAG"       SMALLINT,
  "TM_STATE"     SMALLINT,
  "ADDTIME"      TIMESTAMP,
  "TMP_TYPE"     SMALLINT,
  "BIZ_CODE"     VARCHAR(64),
  "CORP_CODE"    VARCHAR(64),
  "ISPASS"       INTEGER,
  "SP_TEMPLID"   BIGINT,
  "AUDITSTATUS"  SMALLINT,
  "MMS_TMPLID"   BIGINT,
  "TMPLSTATUS"   SMALLINT,
  "PARAMCNT"     INTEGER,
  "SUBMITSTATUS" SMALLINT,
  "EMP_TEMPLID"  VARCHAR(32),
  "ERROR_CODE"   INTEGER,
  "TM_CODE"      VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_TEMPLATE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_THEME"
 ("TID"         BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "THEME_NAME"  VARCHAR(64),
  "THEME_CODE"  VARCHAR(64),
  "THEME_SRC"   VARCHAR(100)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_THEME"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_THIR_MENUCONTROL"
 ("TID"       BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "MENU_NUM"  BIGINT,
  "TITLE"     VARCHAR(32),
  "PRI_MENU"  BIGINT,
  "PRI_ORDER" BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_THIR_MENUCONTROL"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_TIMER"
 ("TIMER_TASK_ID"    BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "TIMER_TASK_NAME"  VARCHAR(200),
  "RUNSTATE"         SMALLINT,
  "START_TIME"       TIMESTAMP,
  "PRE_TIME"         TIMESTAMP,
  "NEXT_TIME"        TIMESTAMP,
  "RESULT"           SMALLINT,
  "RUN_INTERVAL"     BIGINT,
  "TASK_EXPRESSION"  VARCHAR(250),
  "TASK_ERRORCODE"   VARCHAR(38),
  "FAIL_RETRY_TIME"  TIMESTAMP,
  "FAIL_RETRY_COUNT" BIGINT,
  "RUNCOUNT"         INTEGER,
  "RUNPERCOUNT"      INTEGER,
  "CLASS_NAME"       VARCHAR(64)     NOT NULL,
  "CUSTOMINTERVAL"   BIGINT,
  "ISRERUN"          SMALLINT,
  "RERUNCOUNT"       INTEGER,
  "INTERVAL_UNIT"    SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_TIMER"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_TIMER_HISTORY"
 ("TA_ID"            BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "TIMER_TASK_ID"    BIGINT,
  "RUN_TIME"         TIMESTAMP,
  "RUN_YEAR"         SMALLINT,
  "RUN_MONTH"        SMALLINT,
  "RUN_DAY"          SMALLINT,
  "RUN_RESULT"       SMALLINT,
  "TASK_EXPRESSION"  VARCHAR(250),
  "TASK_ERRORCODE"   VARCHAR(38),
  "TIMER_TASK_NAME"  VARCHAR(200),
  "START_TIME"       TIMESTAMP,
  "PRE_TIME"         TIMESTAMP,
  "RUN_INTERVAL"     BIGINT,
  "FAIL_RETRY_TIME"  TIMESTAMP,
  "FAIL_RETRY_COUNT" BIGINT,
  "RUNCOUNT"         INTEGER,
  "RUNPERCOUNT"      INTEGER,
  "CLASS_NAME"       VARCHAR(64),
  "CUSTOMINTERVAL"   BIGINT,
  "ISRERUN"          SMALLINT,
  "RERUNCOUNT"       INTEGER,
  "INTERVAL_UNIT"    SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_TIMER_HISTORY"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_TMPLRELA"
 ("ID"           BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "TEMPL_ID"     INTEGER,
  "TOUSER"       BIGINT,
  "TOUSER_TYPE"  INTEGER,
  "TEMPL_TYPE"   INTEGER,
  "SHARE_TYPE"   INTEGER,
  "CREATER_ID"   BIGINT,
  "CREATETIME"   TIMESTAMP,
  "CORP_CODE"    VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_TMPLRELA"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_TRUCTTYPE"
 ("ID"    BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "TYPE"  CHARACTER(2)    NOT NULL,
  "NAME"  VARCHAR(20)     NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_TRUCTTYPE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_UDGROUP"
 ("UDG_ID"        BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "UDG_NAME"      VARCHAR(64),
  "USER_ID"       BIGINT          NOT NULL,
  "GROUP_TYPE"    SMALLINT                  DEFAULT 2,
  "GP_ATTRIBUTE"  SMALLINT                  DEFAULT 0,
  "SEND_MODE"     SMALLINT                  DEFAULT 1,
  "SHARE_TYPE"    SMALLINT,
  "GROUP_ID"      BIGINT,
  "RECEIVER"      BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_UDGROUP"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_USEDSUBNO"
 ("SUBNO_ID"    BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "SPUSERID"    CHARACTER(6),
  "SPGATE"      VARCHAR(21),
  "SPISUNCM"    SMALLINT,
  "SUBNO"       VARCHAR(20),
  "APPFLAG"     INTEGER,
  "USER_ID"     BIGINT,
  "COMMENTS"    VARCHAR(512),
  "SPNUMBER"    VARCHAR(21),
  "SUBNOSTATE"  SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_USEDSUBNO"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_USER2CLIENT"
 ("USER_ID"    BIGINT  NOT NULL,
  "CLIENT_ID"  BIGINT  NOT NULL,
  "DEP_ID"     BIGINT  NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_USER2CLIENT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_USER2ROLE"
 ("ROLE_ID"  BIGINT  NOT NULL,
  "USER_ID"  BIGINT  NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_USER2ROLE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_USER2SKIN"
 ("USID"       BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "SID"        BIGINT,
  "USERID"     BIGINT,
  "SKIN_CODE"  VARCHAR(32),
  "MONVOICE"   INTEGER         NOT NULL  DEFAULT 0,
  "THEME_CODE" VARCHAR(64),
  "THEME_USE"  SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_USER2SKIN"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_USERPARA"
 ("PARA_ID"       BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PARA_NAME"     VARCHAR(64),
  "PARA_TYPE"     VARCHAR(64),
  "PARA_LEN"      INTEGER,
  "PARA_DEFAULT"  VARCHAR(64),
  "PARA_RE"       VARCHAR(512),
  "SER_ID"        BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_USERPARA"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_USER_RPT"
 ("IDEN_ID"     BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "SID"         BIGINT,
  "RID"         BIGINT,
  "RTIME"       TIMESTAMP,
  "SEQ"         VARCHAR(64),
  "TASKID"      BIGINT,
  "STIME"       TIMESTAMP,
  "SEND_STATE"  SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_USER_RPT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_USER_SETTING"
 ("IDEN_ID"  BIGINT    NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "GUID"     BIGINT    NOT NULL,
  "FW_TYPE"  SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_USER_SETTING"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_VERSION_EMPDB"
 ("DVID"           BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "EMP_DBVERSION"  VARCHAR(32)     NOT NULL,
  "GATE_DBVERSION" VARCHAR(32)     NOT NULL,
  "UPTIMESTAMP"    TIMESTAMP       NOT NULL  DEFAULT CURRENT TIMESTAMP,
  "REMARK"         VARCHAR(4000)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_VERSION_EMPDB"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_VODINFO"
 ("VOD_ID"      BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PHONE"       VARCHAR(64),
  "PRO_ID"      BIGINT,
  "PRO_TYPE"    VARCHAR(64),
  "VOD_TIME"    TIMESTAMP,
  "VOD_TYPE"    BIGINT,
  "UNDO_TIME"   TIMESTAMP,
  "VOD_STATUS"  BIGINT,
  "TRY_STATUS"  BIGINT,
  "TRY_COUNT"   BIGINT,
  "COMMENTS"    VARCHAR(128)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_VODINFO"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_VODMOREC"
 ("REC_ID"        BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, CACHE 20, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PHONE"         VARCHAR(64),
  "MSG"           VARCHAR(1024),
  "MO_TIME"       TIMESTAMP,
  "REPLY_STATUS"  SMALLINT,
  "SPGATE"        VARCHAR(21),
  "REPLY_MSG"     VARCHAR(128)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_VODMOREC"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_VODMTREC"
 ("REC_ID"       BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PHONE"        VARCHAR(64),
  "PRO_NAME"     VARCHAR(64),
  "PRO_TYPE"     VARCHAR(64),
  "TASK_ID"      BIGINT,
  "SPGATE"       VARCHAR(21),
  "SEND_STATUS"  SMALLINT,
  "SEND_TIME"    TIMESTAMP,
  "TITLE"        VARCHAR(64),
  "MSG"          VARCHAR(1024),
  "MS_TYPE"      SMALLINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_VODMTREC"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WC_ACCOUNT"
 ("A_ID"          BIGINT          NOT NULL,
  "FAKE_ID"       VARCHAR(32),
  "NAME"          VARCHAR(64),
  "CODE"          VARCHAR(25)     NOT NULL,
  "OPEN_ID"       VARCHAR(64)     NOT NULL,
  "IMG"           VARCHAR(128),
  "TYPE"          SMALLINT,
  "IS_APPROVE"    SMALLINT                  DEFAULT 0,
  "QRCODE"        VARCHAR(128),
  "INFO"          VARCHAR(2048),
  "URL"           VARCHAR(64),
  "TOKEN"         VARCHAR(32),
  "BINDTIME"      TIMESTAMP,
  "CORP_CODE"     VARCHAR(64)     NOT NULL,
  "CREATETIME"    TIMESTAMP       NOT NULL,
  "MODIFYTIME"    TIMESTAMP,
  "GRANT_TYPE"    VARCHAR(64),
  "APPID"         VARCHAR(64),
  "SECRET"        VARCHAR(64),
  "ACCESS_TOKEN"  VARCHAR(256),
  "ACCESS_TIME"   TIMESTAMP,
  "RELEASE_TIME"  TIMESTAMP,
  "ACCESS_COUNT"  VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WC_ACCOUNT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WC_ALINK"
 ("OPEN_ID"  VARCHAR(64)     NOT NULL,
  "WC_ID"    BIGINT          NOT NULL,
  "A_ID"     BIGINT          NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WC_ALINK"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WC_KEYWORD"
 ("K_ID"       BIGINT          NOT NULL,
  "NAME"       VARCHAR(32)     NOT NULL,
  "TYPE"       SMALLINT                  DEFAULT 0,
  "A_ID"       BIGINT,
  "CORP_CODE"  VARCHAR(64)     NOT NULL,
  "CREATETIME" TIMESTAMP       NOT NULL,
  "MODIFYTIME" TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WC_KEYWORD"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WC_MENU"
 ("M_ID"        BIGINT          NOT NULL,
  "M_NAME"      VARCHAR(32)     NOT NULL,
  "M_TYPE"      INTEGER         NOT NULL,
  "M_KEY"       VARCHAR(64),
  "M_URL"       VARCHAR(256),
  "M_HIDDEN"    INTEGER,
  "M_ORDER"     INTEGER         NOT NULL,
  "P_ID"        BIGINT,
  "T_ID"        BIGINT,
  "MSG_TEXT"    VARCHAR(4000),
  "MSG_XML"     VARCHAR(4000),
  "A_ID"        BIGINT          NOT NULL,
  "CORP_CODE"   VARCHAR(64)     NOT NULL,
  "CREATETIME"  TIMESTAMP       NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WC_MENU"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WC_MSG"
 ("MSG_ID"      BIGINT          NOT NULL,
  "MSG_TYPE"    SMALLINT        NOT NULL,
  "WC_ID"       BIGINT          NOT NULL,
  "A_ID"        BIGINT          NOT NULL,
  "TYPE"        SMALLINT        NOT NULL,
  "MSG_XML"     VARCHAR(4000)   NOT NULL,
  "MSG_TEXT"    VARCHAR(4000)   NOT NULL,
  "PARENT_ID"   BIGINT,
  "CORP_CODE"   VARCHAR(64)     NOT NULL,
  "CREATETIME"  TIMESTAMP       NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WC_MSG"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WC_REVENT"
 ("EVT_ID"      BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "EVT_TYPE"    SMALLINT,
  "T_ID"        BIGINT,
  "A_ID"        BIGINT,
  "MSG_TEXT"    VARCHAR(4000),
  "MSG_XML"     VARCHAR(4000)   NOT NULL,
  "CORP_CODE"   VARCHAR(64)     NOT NULL,
  "CREATETIME"  TIMESTAMP       NOT NULL,
  "TITLE"       VARCHAR(64),
  "MODIFYTIME"  TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WC_REVENT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WC_RIMG"
 ("RIMG_ID"      BIGINT          NOT NULL,
  "TITLE"        VARCHAR(64)     NOT NULL,
  "DESCRIPTION"  VARCHAR(4000),
  "PICURL"       VARCHAR(128),
  "LINK"         VARCHAR(128),
  "A_ID"         BIGINT,
  "CORP_CODE"    VARCHAR(64)     NOT NULL,
  "CREATETIME"   TIMESTAMP       NOT NULL,
  "MODIFYTIME"   TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WC_RIMG"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WC_RTEXT"
 ("TET_ID"      BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "TET_TYPE"    SMALLINT                  DEFAULT 0,
  "T_ID"        BIGINT,
  "MSG_TEXT"    VARCHAR(4000),
  "MSG_XML"     VARCHAR(4000)   NOT NULL,
  "A_ID"        BIGINT,
  "CORP_CODE"   VARCHAR(64)     NOT NULL,
  "CREATETIME"  TIMESTAMP       NOT NULL,
  "TITLE"       VARCHAR(64),
  "MODIFYTIME"  TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WC_RTEXT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WC_TEMPLATE"
 ("T_ID"        BIGINT          NOT NULL,
  "T_NAME"      VARCHAR(64)     NOT NULL,
  "MSG_TYPE"    SMALLINT,
  "MSG_XML"     VARCHAR(4000),
  "MSG_TEXT"    VARCHAR(4000),
  "IS_PUBLIC"   SMALLINT                  DEFAULT 0,
  "IS_DRAFT"    SMALLINT                  DEFAULT 0,
  "IS_DYNAMIC"  SMALLINT                  DEFAULT 0,
  "A_ID"        BIGINT,
  "CORP_CODE"   VARCHAR(64)     NOT NULL,
  "RIMG_IDS"    VARCHAR(255),
  "KEY_WORDSVO" VARCHAR(255),
  "CREATETIME"  TIMESTAMP       NOT NULL,
  "MODIFYTIME"  TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WC_TEMPLATE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WC_TLINK"
 ("K_ID"  BIGINT  NOT NULL,
  "T_ID"  BIGINT  NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WC_TLINK"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WC_ULINK"
 ("U_ID"  BIGINT  NOT NULL,
  "WC_ID" BIGINT  NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WC_ULINK"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WC_USERINFO"
 ("WC_ID"      BIGINT          NOT NULL,
  "FAKE_ID"    VARCHAR(32),
  "NAME"       VARCHAR(20),
  "CODE"       VARCHAR(15),
  "IMG"        VARCHAR(128),
  "TYPE"       SMALLINT                  DEFAULT 0,
  "SIGNATURE"  VARCHAR(256),
  "CORP_CODE"  VARCHAR(64)     NOT NULL,
  "CREATETIME" TIMESTAMP       NOT NULL,
  "MODIFYTIME" TIMESTAMP,
  "PHONE"      VARCHAR(30),
  "UNAME"      VARCHAR(24),
  "DESCR"      VARCHAR(512),
  "VERIFYTIME" TIMESTAMP,
  "U_ID"       BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WC_USERINFO"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WC_VERIFY"
 ("VF_ID"         BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "WC_ID"         BIGINT,
  "VERIFYCODE"    VARCHAR(6),
  "CODETIME"      TIMESTAMP,
  "PHONE"         VARCHAR(30),
  "LIMTTIME"      TIMESTAMP,
  "VERIFY_COUNT"  INTEGER,
  "CORP_CODE"     VARCHAR(64)     NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WC_VERIFY"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WEIX_EMOJI"
 ("ID"          BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "SUNICODE"    VARCHAR(100),
  "SUTF8"       VARCHAR(100),
  "SUTF16"      VARCHAR(100),
  "SSBUNICODE"  VARCHAR(100),
  "FILENAME"    VARCHAR(100)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WEIX_EMOJI"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WGPARAMCONFIG"
 ("PID"         BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PARAM"       VARCHAR(64),
  "PARAMVALUE"  VARCHAR(64),
  "PARAMNAME"   VARCHAR(64),
  "CORPCODE"    VARCHAR(64),
  "MEMO"        VARCHAR(200),
  "PARAMSUBNUM" BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WGPARAMCONFIG"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WGPARAMDEFINITION"
 ("PID"          BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PARAM"        VARCHAR(64),
  "PARAMSUBNUM"  BIGINT,
  "PARAMSUBSIGN" VARCHAR(64),
  "PARAMSUBNAME" VARCHAR(64),
  "CORPCODE"     VARCHAR(64),
  "MEMO"         VARCHAR(200)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WGPARAMDEFINITION"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WX_BASEINFO"
 ("ID"              BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "NETID"           BIGINT          NOT NULL,
  "NAME"            VARCHAR(100)    NOT NULL,
  "SORT"            INTEGER         NOT NULL,
  "TIMETYPE"        INTEGER         NOT NULL,
  "TIMEOUT"         TIMESTAMP,
  "WXRIGHT"         INTEGER         NOT NULL,
  "TIMEEND"         TIMESTAMP,
  "URL"             VARCHAR(100),
  "STATUS"          INTEGER         NOT NULL,
  "AUDITUSERID"     VARCHAR(20),
  "AUDITDATE"       TIMESTAMP,
  "WXTYPE"          INTEGER         NOT NULL,
  "IMAGE"           VARCHAR(100),
  "MODIFYID"        BIGINT,
  "MODIFYDATE"      TIMESTAMP,
  "CREATID"         BIGINT          NOT NULL,
  "CREATDATE"       TIMESTAMP       NOT NULL,
  "SMS"             VARCHAR(500),
  "WXSHARE"         INTEGER         NOT NULL,
  "CORP_CODE"       VARCHAR(64),
  "DATA_TABLENAME"  VARCHAR(50),
  "DYN_TABLENAME"   VARCHAR(50),
  "TEMPTYPE"        SMALLINT,
  "PARAMS"          VARCHAR(256),
  "HASPARAMS"       VARCHAR(256),
  "OPERAPPSTATUS"   INTEGER         NOT NULL  DEFAULT 0,
  "OPERAPPNOTE"     VARCHAR(400)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WX_BASEINFO"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WX_DATA"
 ("DID"           BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "CODE"          VARCHAR(64)     NOT NULL,
  "NAME"          VARCHAR(50)     NOT NULL,
  "DATATYPEID"    BIGINT          NOT NULL,
  "REPLYSETTYPE"  SMALLINT        NOT NULL,
  "QUESTYPE"      SMALLINT        NOT NULL,
  "QUESCONTENT"   VARCHAR(1024)   NOT NULL,
  "COLNAME"       VARCHAR(20)     NOT NULL,
  "USERID"        BIGINT          NOT NULL,
  "COLTYPE"       SMALLINT,
  "COLSIZE"       INTEGER,
  "STATUS"        SMALLINT,
  "MODIFYDATE"    TIMESTAMP,
  "CREATDATE"     TIMESTAMP,
  "CORP_CODE"     VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WX_DATA"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WX_DATATYPE"
 ("ID"          BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "NAME"        VARCHAR(50)     NOT NULL,
  "UPDATETIME"  TIMESTAMP,
  "CREATDATE"   TIMESTAMP,
  "CORP_CODE"   VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WX_DATATYPE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WX_DATA_BIND"
 ("NETID"  BIGINT  NOT NULL,
  "DID"    BIGINT  NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WX_DATA_BIND"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WX_DATA_CHOS"
 ("DID"  BIGINT          NOT NULL,
  "NAME" VARCHAR(50)     NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WX_DATA_CHOS"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WX_PAGE"
 ("ID"          BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "NETID"       BIGINT          NOT NULL,
  "NAME"        VARCHAR(50),
  "PARENTID"    BIGINT          NOT NULL,
  "CHILDID"     BIGINT,
  "CONTENT"     VARCHAR(4000),
  "PAGESIZE"    INTEGER,
  "MODIFYID"    BIGINT,
  "MODIFYDATE"  TIMESTAMP,
  "CREATID"     BIGINT          NOT NULL,
  "CREATDATE"   TIMESTAMP,
  "LINK"        VARCHAR(100)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WX_PAGE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WX_SENDCOUNT"
 ("ID"        BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "REFID"     BIGINT          NOT NULL,
  "MSGID"     VARCHAR(30)     NOT NULL,
  "TYPE"      INTEGER         NOT NULL,
  "PHONE"     VARCHAR(30),
  "STATUS"    INTEGER,
  "SENDTIME"  TIMESTAMP,
  "USERID"    BIGINT,
  "SUBTOTLE"  BIGINT          NOT NULL,
  "NETNAME"   VARCHAR(255),
  "CORP_CODE" VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WX_SENDCOUNT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WX_SORT"
 ("ID"           BIGINT          NOT NULL,
  "NAME"         VARCHAR(20)     NOT NULL,
  "DESCRIPTION"  VARCHAR(100),
  "TYPE"         INTEGER         NOT NULL,
  "MODIFYID"     BIGINT,
  "MODIFYDATE"   TIMESTAMP,
  "CREATID"      BIGINT,
  "CREATDATE"    TIMESTAMP,
  "PARENTID"     BIGINT          NOT NULL,
  "FILETYPE"     INTEGER,
  "CORP_CODE"    VARCHAR(64),
  "SORT_PATH"    VARCHAR(160)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WX_SORT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WX_UPLOADFILE"
 ("ID"            BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "NETID"         BIGINT          NOT NULL,
  "FILENAME"      VARCHAR(100)    NOT NULL,
  "FILEVER"       VARCHAR(20),
  "FILEDESC"      VARCHAR(100),
  "UPLOADDATE"    TIMESTAMP       NOT NULL,
  "UPLOADUSERID"  BIGINT          NOT NULL,
  "WEBURL"        VARCHAR(200)    NOT NULL,
  "STATUS"        INTEGER         NOT NULL,
  "MODIFYID"      BIGINT,
  "MODIFYDATE"    TIMESTAMP,
  "CREATID"       BIGINT,
  "CREATDATE"     TIMESTAMP,
  "SORTID"        VARCHAR(10)     NOT NULL,
  "NAMETEMP"      VARCHAR(50),
  "TYPE"          VARCHAR(20),
  "FILESIZE"      INTEGER,
  "CORP_CODE"     VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WX_UPLOADFILE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WX_USERFEE"
 ("UID"       BIGINT          NOT NULL,
  "USERID"    BIGINT          NOT NULL,
  "USERNAME"  VARCHAR(64),
  "SENDNUM"   INTEGER         NOT NULL,
  "SENDEDNUM" INTEGER         NOT NULL,
  "ECID"      BIGINT          NOT NULL,
  "CORP_CODE" VARCHAR(64)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WX_USERFEE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "LF_WX_VISITLOG"
 ("ID"           BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "REFID"        BIGINT          NOT NULL,
  "TYPE"         INTEGER,
  "PHONE"        VARCHAR(30),
  "VISITDATE"    TIMESTAMP       NOT NULL,
  "VISITSTATUS"  INTEGER         NOT NULL,
  "MEMO"         VARCHAR(100),
  "UID"          BIGINT,
  "USERAGENT"    VARCHAR(1024),
  "IPADDR"       VARCHAR(25),
  "CORP_CODE"    VARCHAR(64),
  "TASKID"       BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "LF_WX_VISITLOG"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_LBS_PIOS"
 ("P_ID"       BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "CITY_ID"    SMALLINT,
  "LAT"        VARCHAR(64)     NOT NULL,
  "LNG"        VARCHAR(64)     NOT NULL,
  "TITLE"      VARCHAR(64),
  "KEYWORD"    VARCHAR(64),
  "TELEPHONE"  VARCHAR(32),
  "ADDRESS"    VARCHAR(128),
  "NOTE"       VARCHAR(512),
  "A_ID"       VARCHAR(128)    NOT NULL,
  "CORP_CODE"  VARCHAR(64)     NOT NULL,
  "CREATETIME" TIMESTAMP,
  "MODITYTIME" TIMESTAMP,
  "DISTANCE"   VARCHAR(32)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_LBS_PIOS"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_LBS_PUSHSET"
 ("PUSH_ID"     BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PUSHTYPE"    SMALLINT,
  "IMGURL"      VARCHAR(256),
  "NOTE"        VARCHAR(512),
  "RADIUS"      VARCHAR(16),
  "AUTORADIUS"  SMALLINT,
  "PUSHCOUNT"   SMALLINT,
  "AUTOMORE"    SMALLINT,
  "CORP_CODE"   VARCHAR(6)      NOT NULL,
  "CREATETIME"  TIMESTAMP,
  "MODITYTIME"  TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_LBS_PUSHSET"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_LBS_USERPIOS"
 ("UP_ID"      BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "LAT"        VARCHAR(64)     NOT NULL,
  "LNG"        VARCHAR(64)     NOT NULL,
  "A_ID"       VARCHAR(128)    NOT NULL,
  "OPENID"     VARCHAR(128)    NOT NULL,
  "CORP_CODE"  VARCHAR(6)      NOT NULL,
  "MODITYTIME" TIMESTAMP       NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_LBS_USERPIOS"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_ONL_GPMEM"
 ("GP_ID"    BIGINT    NOT NULL,
  "GM_USER"  BIGINT,
  "GM_STATE" SMALLINT            DEFAULT 1
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_ONL_GPMEM"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_ONL_GPMSGID"
 ("GM_USER"      BIGINT,
  "MSG_ID"       BIGINT     DEFAULT 0,
  "UPDATE_TIME"  TIMESTAMP  DEFAULT CURRENT TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_ONL_GPMSGID"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_ONL_GROUP"
 ("GP_ID"        BIGINT          NOT NULL,
  "GP_NAME"      VARCHAR(32),
  "CREATE_USER"  BIGINT,
  "CREATE_TIME"  TIMESTAMP,
  "MEM_COUNT"    INTEGER                   DEFAULT 0
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_ONL_GROUP"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_ONL_MSG"
 ("M_ID"       BIGINT          NOT NULL,
  "A_ID"       BIGINT,
  "FROM_USER"  VARCHAR(32),
  "TO_USER"    VARCHAR(32),
  "SERVER_NUM" VARCHAR(32),
  "MESSAGE"    VARCHAR(2048),
  "SEND_TIME"  TIMESTAMP,
  "MSG_TYPE"   VARCHAR(10),
  "PUSH_TYPE"  SMALLINT                  DEFAULT 0
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_ONL_MSG"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_ONL_MSG_HIS"
 ("M_ID"       BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "A_ID"       BIGINT,
  "FROM_USER"  VARCHAR(32),
  "TO_USER"    VARCHAR(32),
  "SERVER_NUM" VARCHAR(32),
  "MESSAGE"    VARCHAR(2048),
  "SEND_TIME"  TIMESTAMP,
  "MSG_TYPE"   VARCHAR(10),
  "PUSH_TYPE"  SMALLINT                  DEFAULT 0
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_ONL_MSG_HIS"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_ONL_REMARK"
 ("USER_ID"    BIGINT          NOT NULL,
  "MARK_NAME"  VARCHAR(50),
  "MARK_ID"    BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_ONL_REMARK"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_ONL_SERVER"
 ("SER_ID"      BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "SER_NUM"     VARCHAR(32),
  "SERTYPE"     INTEGER,
  "CUSTOME_ID"  BIGINT,
  "A_ID"        BIGINT,
  "CREATE_TIME" TIMESTAMP,
  "END_TIME"    TIMESTAMP,
  "FROM_USER"   VARCHAR(50),
  "SCORE"       INTEGER,
  "EVALUATE"    VARCHAR(256),
  "DURATION"    INTEGER
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_ONL_SERVER"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_SIT_INFO"
 ("S_ID"       BIGINT          NOT NULL,
  "TYPE_ID"    BIGINT,
  "NAME"       VARCHAR(32),
  "URL"        VARCHAR(128),
  "IS_SYSTEM"  SMALLINT                  DEFAULT 0,
  "CORP_CODE"  VARCHAR(10)     NOT NULL,
  "CREATETIME" TIMESTAMP,
  "MODITYTIME" TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_SIT_INFO"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_SIT_PAGE"
 ("PAGE_ID"    BIGINT          NOT NULL,
  "S_ID"       BIGINT,
  "PAGE_TYPE"  VARCHAR(32),
  "NAME"       VARCHAR(32),
  "URL"        VARCHAR(128),
  "SEQ_NUM"    INTEGER,
  "CORP_CODE"  VARCHAR(10)     NOT NULL,
  "CREATETIME" TIMESTAMP,
  "MODITYTIME" TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_SIT_PAGE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_SIT_PLANT"
 ("PLANT_ID"      BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "PLANT_TYPE"    VARCHAR(32),
  "PAGE_ID"       BIGINT,
  "NAME"          VARCHAR(32),
  "FEILD_NAMES"   VARCHAR(64),
  "FEILD_VALUES"  VARCHAR(4000),
  "CORP_CODE"     VARCHAR(10)     NOT NULL,
  "CREATETIME"    TIMESTAMP,
  "MODITYTIME"    TIMESTAMP,
  "S_ID"          BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_SIT_PLANT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_SIT_TYPE"
 ("TYPE_ID"     BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "NAME"        VARCHAR(32),
  "IS_DEFAULT"  SMALLINT,
  "PATTERN"     INTEGER                   DEFAULT 0,
  "IMG_URL"     VARCHAR(64),
  "IMG_URL0"    VARCHAR(64),
  "IMG_URL1"    VARCHAR(64),
  "IMG_URL2"    VARCHAR(64),
  "IMG_URL3"    VARCHAR(64),
  "IS_SYSTEM"   SMALLINT                  DEFAULT 0,
  "SEQ_NUM"     INTEGER,
  "CORP_CODE"   VARCHAR(10)     NOT NULL,
  "CREATETIME"  TIMESTAMP,
  "MODITYTIME"  TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_SIT_TYPE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_SYS_GLOBAL_VARIABLE"
 ("GLOBALID"     BIGINT          NOT NULL,
  "GLOBALKEY"    VARCHAR(32)     NOT NULL,
  "GLOBALVALUE"  BIGINT,
  "MEMO"         VARCHAR(50)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_SYS_GLOBAL_VARIABLE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_WEI_ACCOUNT"
 ("A_ID"          BIGINT          NOT NULL,
  "FAKE_ID"       VARCHAR(32),
  "NAME"          VARCHAR(64),
  "CODE"          VARCHAR(25)     NOT NULL,
  "OPEN_ID"       VARCHAR(64)     NOT NULL,
  "IMG"           VARCHAR(128),
  "TYPE"          SMALLINT,
  "IS_APPROVE"    SMALLINT                  DEFAULT 0,
  "QRCODE"        VARCHAR(128),
  "INFO"          VARCHAR(2048),
  "URL"           VARCHAR(64),
  "TOKEN"         VARCHAR(32),
  "BINDTIME"      TIMESTAMP,
  "CORP_CODE"     VARCHAR(6)      NOT NULL,
  "CREATETIME"    TIMESTAMP       NOT NULL,
  "MODIFYTIME"    TIMESTAMP,
  "GRANT_TYPE"    VARCHAR(64),
  "APPID"         VARCHAR(64),
  "SECRET"        VARCHAR(64),
  "ACCESS_TOKEN"  VARCHAR(256),
  "ACCESS_TIME"   TIMESTAMP,
  "RELEASE_TIME"  TIMESTAMP,
  "ACCESS_COUNT"  VARCHAR(64),
  "SYNC_STATE"    SMALLINT                  DEFAULT 0,
  "SYNC_TIME"     TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_WEI_ACCOUNT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_WEI_COUNT"
 ("COUNT_ID"        BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "UNFOLLOW_COUNT"  INTEGER,
  "FOLLOW_COUNT"    INTEGER,
  "INCOME_COUNT"    INTEGER,
  "AMOUNT_COUNT"    INTEGER,
  "DAYTIME"         TIMESTAMP,
  "A_ID"            BIGINT,
  "CORP_CODE"       VARCHAR(64)     NOT NULL,
  "MODIFYTIME"      TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_WEI_COUNT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_WEI_GROUP"
 ("G_ID"       BIGINT          NOT NULL,
  "WG_ID"      BIGINT,
  "NAME"       VARCHAR(32),
  "COUNT"      VARCHAR(11),
  "A_ID"       BIGINT          NOT NULL,
  "CORP_CODE"  VARCHAR(6)      NOT NULL,
  "CREATETIME" TIMESTAMP       NOT NULL,
  "MODIFYTIME" TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_WEI_GROUP"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_WEI_KEYWORD"
 ("K_ID"       BIGINT          NOT NULL,
  "NAME"       VARCHAR(32)     NOT NULL,
  "TYPE"       SMALLINT                  DEFAULT 0,
  "A_ID"       BIGINT,
  "CORP_CODE"  VARCHAR(6)      NOT NULL,
  "CREATETIME" TIMESTAMP       NOT NULL,
  "MODIFYTIME" TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_WEI_KEYWORD"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_WEI_MENU"
 ("M_ID"        BIGINT          NOT NULL,
  "M_NAME"      VARCHAR(32)     NOT NULL,
  "M_TYPE"      INTEGER         NOT NULL,
  "M_KEY"       VARCHAR(64),
  "M_URL"       VARCHAR(256),
  "M_HIDDEN"    INTEGER,
  "M_ORDER"     INTEGER         NOT NULL,
  "P_ID"        BIGINT,
  "T_ID"        BIGINT,
  "MSG_TEXT"    VARCHAR(4000),
  "MSG_XML"     VARCHAR(4000),
  "A_ID"        BIGINT          NOT NULL,
  "CORP_CODE"   VARCHAR(6)      NOT NULL,
  "CREATETIME"  TIMESTAMP       NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_WEI_MENU"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_WEI_MSG"
 ("MSG_ID"      BIGINT          NOT NULL,
  "MSG_TYPE"    SMALLINT        NOT NULL,
  "WC_ID"       BIGINT          NOT NULL,
  "A_ID"        BIGINT          NOT NULL,
  "TYPE"        SMALLINT        NOT NULL,
  "MSG_XML"     VARCHAR(4000)   NOT NULL,
  "MSG_TEXT"    VARCHAR(4000)   NOT NULL,
  "PARENT_ID"   BIGINT,
  "CORP_CODE"   VARCHAR(6)      NOT NULL,
  "CREATETIME"  TIMESTAMP       NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_WEI_MSG"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_WEI_REVENT"
 ("EVT_ID"      BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "EVT_TYPE"    SMALLINT,
  "T_ID"        BIGINT,
  "A_ID"        BIGINT,
  "MSG_TEXT"    VARCHAR(4000),
  "MSG_XML"     VARCHAR(4000)   NOT NULL,
  "CORP_CODE"   VARCHAR(6)      NOT NULL,
  "CREATETIME"  TIMESTAMP       NOT NULL,
  "TITLE"       VARCHAR(64),
  "MODIFYTIME"  TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_WEI_REVENT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_WEI_RIMG"
 ("RIMG_ID"      BIGINT          NOT NULL,
  "TITLE"        VARCHAR(64)     NOT NULL,
  "DESCRIPTION"  VARCHAR(4000),
  "PICURL"       VARCHAR(128),
  "LINK"         VARCHAR(128),
  "A_ID"         BIGINT,
  "CORP_CODE"    VARCHAR(6)      NOT NULL,
  "CREATETIME"   TIMESTAMP       NOT NULL,
  "MODIFYTIME"   TIMESTAMP,
  "SOURCE_URL"   VARCHAR(256),
  "SUMMARY"      VARCHAR(200)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_WEI_RIMG"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_WEI_RTEXT"
 ("TET_ID"      BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "TET_TYPE"    SMALLINT                  DEFAULT 0,
  "T_ID"        BIGINT,
  "MSG_TEXT"    VARCHAR(4000),
  "MSG_XML"     VARCHAR(4000)   NOT NULL,
  "A_ID"        BIGINT,
  "CORP_CODE"   VARCHAR(6)      NOT NULL,
  "CREATETIME"  TIMESTAMP       NOT NULL,
  "TITLE"       VARCHAR(64),
  "MODIFYTIME"  TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_WEI_RTEXT"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_WEI_SENDLOG"
 ("SEND_ID"       BIGINT          NOT NULL  GENERATED BY DEFAULT
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 9223372036854775807, NO CYCLE, NO ORDER),
  "TP"            VARCHAR(11),
  "MSG_TYPE"      VARCHAR(15),
  "AREA_VALUE"    VARCHAR(64),
  "POST_MSG"      VARCHAR(2048)   NOT NULL,
  "T_ID"          BIGINT,
  "A_ID"          BIGINT,
  "CORP_CODE"     VARCHAR(64)     NOT NULL,
  "CREATETIME"    TIMESTAMP       NOT NULL,
  "EVENTDATA"     VARCHAR(2048),
  "STATUS"        SMALLINT,
  "MSG_ID"        VARCHAR(15),
  "RESPONSE_MSG"  VARCHAR(1024),
  "SEND_CONTENT"  VARCHAR(1024)
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_WEI_SENDLOG"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_WEI_TEMPLATE"
 ("T_ID"        BIGINT          NOT NULL,
  "T_NAME"      VARCHAR(64)     NOT NULL,
  "MSG_TYPE"    SMALLINT,
  "MSG_XML"     VARCHAR(4000),
  "MSG_TEXT"    VARCHAR(4000),
  "IS_PUBLIC"   SMALLINT                  DEFAULT 0,
  "IS_DRAFT"    SMALLINT                  DEFAULT 0,
  "IS_DYNAMIC"  SMALLINT                  DEFAULT 0,
  "A_ID"        BIGINT,
  "CORP_CODE"   VARCHAR(6)      NOT NULL,
  "RIMG_IDS"    VARCHAR(255),
  "KEY_WORDSVO" VARCHAR(255),
  "CREATETIME"  TIMESTAMP       NOT NULL,
  "MODIFYTIME"  TIMESTAMP
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_WEI_TEMPLATE"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_WEI_TLINK"
 ("K_ID"  BIGINT  NOT NULL,
  "T_ID"  BIGINT  NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_WEI_TLINK"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_WEI_ULINK"
 ("U_ID"  BIGINT  NOT NULL,
  "WC_ID" BIGINT  NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_WEI_ULINK"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_WEI_USER2ACC"
 ("A_ID"     BIGINT  NOT NULL,
  "USER_ID"  BIGINT  NOT NULL
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_WEI_USER2ACC"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

CREATE TABLE "OT_WEI_USERINFO"
 ("WC_ID"           BIGINT          NOT NULL,
  "FAKE_ID"         VARCHAR(32),
  "G_ID"            BIGINT,
  "SUBSCRIBE"       VARCHAR(11),
  "NICK_NAME"       VARCHAR(32),
  "SEX"             VARCHAR(11),
  "CITY"            VARCHAR(15),
  "PROVINCE"        VARCHAR(15),
  "COUNTRY"         VARCHAR(15),
  "LANGUAGE"        VARCHAR(15),
  "HEAD_IMG_URL"    VARCHAR(512),
  "SUBSCRIBE_TIME"  TIMESTAMP,
  "UNAME"           VARCHAR(32),
  "PHONE"           VARCHAR(30),
  "DESCR"           VARCHAR(512),
  "VERIFYTIME"      TIMESTAMP,
  "U_ID"            BIGINT,
  "CORP_CODE"       VARCHAR(6)      NOT NULL,
  "CREATETIME"      TIMESTAMP       NOT NULL,
  "MODIFYTIME"      TIMESTAMP,
  "OPEN_ID"         VARCHAR(64),
  "A_ID"            BIGINT,
  "LOCAL_IMG_URL"   VARCHAR(512),
  "GUID"            BIGINT
 )
  DATA CAPTURE NONE
 IN "EMP_TABLESPACE";

ALTER TABLE "OT_WEI_USERINFO"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE
  LOG INDEX BUILD NULL;

ALTER TABLE "LF_ADDRBOOKS"
  ADD CONSTRAINT "SQL151008135118890" PRIMARY KEY
   ("ADDR_ID"
   );

ALTER TABLE "LF_ALSMSRECORD"
  ADD CONSTRAINT "SQL151008140615400" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_APPMAINPAGEHIS"
  ADD CONSTRAINT "SQL151008140715360" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_APP_ACCOUNT"
  ADD CONSTRAINT "SQL151008140708220" PRIMARY KEY
   ("A_ID"
   );

ALTER TABLE "LF_APP_CLIDOWLOAD"
  ADD CONSTRAINT "SQL151008140716710" PRIMARY KEY
   ("CLID"
   );

ALTER TABLE "LF_APP_FOMEITEM"
  ADD CONSTRAINT "SQL151008140714050" PRIMARY KEY
   ("FIELD_ID"
   );

ALTER TABLE "LF_APP_FOMEVALVE"
  ADD CONSTRAINT "SQL151008140714260" PRIMARY KEY
   ("V_ID"
   );

ALTER TABLE "LF_APP_FOM_INFO"
  ADD CONSTRAINT "SQL151008140713380" PRIMARY KEY
   ("F_ID"
   );

ALTER TABLE "LF_APP_FOM_QUESN"
  ADD CONSTRAINT "SQL151008140713560" PRIMARY KEY
   ("Q_ID"
   );

ALTER TABLE "LF_APP_FOM_TYPE"
  ADD CONSTRAINT "SQL151008140713190" PRIMARY KEY
   ("TYPE_ID"
   );

ALTER TABLE "LF_APP_KEYWORD"
  ADD CONSTRAINT "SQL151008140709520" PRIMARY KEY
   ("K_ID"
   );

ALTER TABLE "LF_APP_LBS_PIOS"
  ADD CONSTRAINT "SQL151008140712570" PRIMARY KEY
   ("P_ID"
   );

ALTER TABLE "LF_APP_LBS_PUSH"
  ADD CONSTRAINT "SQL151008140712780" PRIMARY KEY
   ("PUSH_ID"
   );

ALTER TABLE "LF_APP_LBS_USER"
  ADD CONSTRAINT "SQL151008140712980" PRIMARY KEY
   ("UP_ID"
   );

ALTER TABLE "LF_APP_MOCACHE"
  ADD CONSTRAINT "SQL151008140716000" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_APP_MSGCACHE"
  ADD CONSTRAINT "SQL151008140715750" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_APP_MSGCONTENT"
  ADD CONSTRAINT "SQL151008140716190" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_APP_MTMSG"
  ADD CONSTRAINT "SQL151008140711220" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_APP_MTTASK"
  ADD CONSTRAINT "SQL151008140711460" PRIMARY KEY
   ("TASKID"
   );

ALTER TABLE "LF_APP_MW_CLIENT"
  ADD CONSTRAINT "SQL151008140708530" PRIMARY KEY
   ("WC_ID"
   );

ALTER TABLE "LF_APP_MW_CLIENT"
  ADD CONSTRAINT "APPCODEUNIQUE" UNIQUE
   ("APP_CODE"
   );

ALTER TABLE "LF_APP_MW_GROUP"
  ADD CONSTRAINT "SQL151008140710760" PRIMARY KEY
   ("G_ID"
   );

ALTER TABLE "LF_APP_OL_GROUP"
  ADD CONSTRAINT "SQL151008140711670" PRIMARY KEY
   ("GP_ID"
   );

ALTER TABLE "LF_APP_OL_MSG"
  ADD CONSTRAINT "SQL151008140712000" PRIMARY KEY
   ("M_ID"
   );

ALTER TABLE "LF_APP_OL_MSGHIS"
  ADD CONSTRAINT "SQL151008140712220" PRIMARY KEY
   ("M_ID"
   );

ALTER TABLE "LF_APP_REVENT"
  ADD CONSTRAINT "SQL151008140710050" PRIMARY KEY
   ("EVT_ID"
   );

ALTER TABLE "LF_APP_RIMG"
  ADD CONSTRAINT "SQL151008140709850" PRIMARY KEY
   ("RIMG_ID"
   );

ALTER TABLE "LF_APP_RPTCACHE"
  ADD CONSTRAINT "SQL151008140716420" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_APP_RTEXT"
  ADD CONSTRAINT "SQL151008140710250" PRIMARY KEY
   ("TET_ID"
   );

ALTER TABLE "LF_APP_SIT_INFO"
  ADD CONSTRAINT "SQL151008140714760" PRIMARY KEY
   ("S_ID"
   );

ALTER TABLE "LF_APP_SIT_PAGE"
  ADD CONSTRAINT "SQL151008140714940" PRIMARY KEY
   ("PAGE_ID"
   );

ALTER TABLE "LF_APP_SIT_PLANT"
  ADD CONSTRAINT "SQL151008140715150" PRIMARY KEY
   ("PLANT_ID"
   );

ALTER TABLE "LF_APP_SIT_TYPE"
  ADD CONSTRAINT "SQL151008140714500" PRIMARY KEY
   ("TYPE_ID"
   );

ALTER TABLE "LF_APP_TC_MOMSG"
  ADD CONSTRAINT "SQL151008140708970" PRIMARY KEY
   ("MSG_ID"
   );

ALTER TABLE "LF_APP_TC_MTMSG"
  ADD CONSTRAINT "SQL151008140709150" PRIMARY KEY
   ("MSG_ID"
   );

ALTER TABLE "LF_APP_TEMPLATE"
  ADD CONSTRAINT "SQL151008140709340" PRIMARY KEY
   ("T_ID"
   );

ALTER TABLE "LF_APP_TLINK"
  ADD CONSTRAINT "SQL151008140709670" PRIMARY KEY
   ("K_ID"
   );

ALTER TABLE "LF_APP_ULINK"
  ADD CONSTRAINT "SQL151008140708740" PRIMARY KEY
   ("U_ID"
   );

ALTER TABLE "LF_APP_VERIFY"
  ADD CONSTRAINT "SQL151008140710590" PRIMARY KEY
   ("VF_ID"
   );

ALTER TABLE "LF_APP_WC_GROUP"
  ADD CONSTRAINT "SQL151008140710930" PRIMARY KEY
   ("G_ID"
   );

ALTER TABLE "LF_AUTOREPLY"
  ADD CONSTRAINT "SQL151008140129540" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_BILLLOG"
  ADD CONSTRAINT "SQL151008135119610" PRIMARY KEY
   ("LOG_ID"
   );

ALTER TABLE "LF_BINDFLOW"
  ADD CONSTRAINT "SQL151008135217700" PRIMARY KEY
   ("BFID"
   );

ALTER TABLE "LF_BIRTHDAYMEMBER"
  ADD CONSTRAINT "SQL151008135214590" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_BIRTHDAYSETUP"
  ADD CONSTRAINT "SQL151008135214370" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_BLACKLIST"
  ADD CONSTRAINT "SQL151008135109280" PRIMARY KEY
   ("BL_ID"
   );

ALTER TABLE "LF_BUSINESS"
  ADD CONSTRAINT "SQL151008135116240" PRIMARY KEY
   ("BUS_ID"
   );

ALTER TABLE "LF_BUSMANAGER"
  ADD CONSTRAINT "SQL151008135117320" PRIMARY KEY
   ("BUS_ID"
   );

ALTER TABLE "LF_BUSPKGETAOCAN"
  ADD CONSTRAINT "SQL151008140721660" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_BUSTAIL"
  ADD CONSTRAINT "SQL151008140722790" PRIMARY KEY
   ("BUSTAIL_ID"
   );

ALTER TABLE "LF_BUS_PACKAGE"
  ADD CONSTRAINT "SQL151008140720860" PRIMARY KEY
   ("PACKAGE_ID"
   );

ALTER TABLE "LF_BUS_PACKAGE"
  ADD CONSTRAINT "PACKAGECODEUNIQUE" UNIQUE
   ("PACKAGE_CODE"
   );

ALTER TABLE "LF_BUS_PROCESS"
  ADD CONSTRAINT "SQL151008135118650" PRIMARY KEY
   ("BUSPRO_ID"
   );

ALTER TABLE "LF_BUS_TAILTMP"
  ADD CONSTRAINT "SQL151008140723000" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_BUS_TAOCAN"
  ADD CONSTRAINT "SQL151008140721140" PRIMARY KEY
   ("TAOCAN_ID"
   );

ALTER TABLE "LF_BUS_TAOCAN"
  ADD CONSTRAINT "TAOCANCODEUNIQUE" UNIQUE
   ("TAOCAN_CODE"
   );

ALTER TABLE "LF_CLIDEP_CONN"
  ADD CONSTRAINT "SQL151008135117920" PRIMARY KEY
   ("CONN_ID"
   );

ALTER TABLE "LF_CLIENT"
  ADD CONSTRAINT "SQL151008135109410" PRIMARY KEY
   ("CLIENT_ID"
   );

ALTER TABLE "LF_CLIENT"
  ADD CONSTRAINT "C_GUIDUNIQUE" UNIQUE
   ("GUID"
   );

ALTER TABLE "LF_CLIENTCLASS"
  ADD CONSTRAINT "SQL151008135109710" PRIMARY KEY
   ("CC_ID"
   );

ALTER TABLE "LF_CLIENT_DEP"
  ADD CONSTRAINT "SQL151008135117690" PRIMARY KEY
   ("DEP_ID"
   );

ALTER TABLE "LF_CONTRACT"
  ADD CONSTRAINT "SQL151008140720170" PRIMARY KEY
   ("CONTRACT_ID"
   );

ALTER TABLE "LF_CONTRACT_TAOCAN"
  ADD CONSTRAINT "SQL151008140720430" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_CORP"
  ADD CONSTRAINT "SQL151008135120870" PRIMARY KEY
   ("CORP_ID"
   );

ALTER TABLE "LF_CORP_CONF"
  ADD CONSTRAINT "SQL151008135209440" PRIMARY KEY
   ("CC_ID"
   );

ALTER TABLE "LF_CUSTFIELD"
  ADD CONSTRAINT "SQL151008135121720" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_CUSTFIELD_VALUE"
  ADD CONSTRAINT "SQL151008135121840" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_DBCONNECT"
  ADD CONSTRAINT "SQL151008135109830" PRIMARY KEY
   ("DB_ID"
   );

ALTER TABLE "LF_DEDUCTIONS_DISP"
  ADD CONSTRAINT "SQL151008140722510" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_DEDUCTIONS_DISP"
  ADD CONSTRAINT "MSGIDDISPUNIQUE" UNIQUE
   ("MSG_ID"
   );

ALTER TABLE "LF_DEDUCTIONS_LIST"
  ADD CONSTRAINT "SQL151008140721960" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_DEDUCTIONS_LIST"
  ADD CONSTRAINT "MSGIDUNIQUE" UNIQUE
   ("MSG_ID"
   );

ALTER TABLE "LF_DEP"
  ADD CONSTRAINT "SQL151008135109950" PRIMARY KEY
   ("DEP_ID"
   );

ALTER TABLE "LF_DEPPWDRECEIVER"
  ADD CONSTRAINT "SQL151008140130190" PRIMARY KEY
   ("DPR_ID"
   );

ALTER TABLE "LF_DEP_RECHARGE_LOG"
  ADD CONSTRAINT "SQL151008135122670" PRIMARY KEY
   ("LOG_ID"
   );

ALTER TABLE "LF_DEP_TAOCAN"
  ADD CONSTRAINT "SQL151008140720640" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_DEP_USER_BALANCE"
  ADD CONSTRAINT "SQL151008135122500" PRIMARY KEY
   ("BL_ID"
   );

ALTER TABLE "LF_DEP_USER_BALANCE"
  ADD CONSTRAINT "TARGETIDUNIQUE" UNIQUE
   ("TARGET_ID"
   );

ALTER TABLE "LF_DFADVANCED"
  ADD CONSTRAINT "SQL151008140453560" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_DOMINATION"
  ADD CONSTRAINT "SQL151008135110060" PRIMARY KEY
   ("DEP_ID",
    "USER_ID"
   );

ALTER TABLE "LF_EDIT"
  ADD CONSTRAINT "SQL151008135110250" PRIMARY KEY
   ("EDIT_ID"
   );

ALTER TABLE "LF_EMPLOYEE"
  ADD CONSTRAINT "SQL151008135110400" PRIMARY KEY
   ("EMPLOYEEID"
   );

ALTER TABLE "LF_EMPLOYEE"
  ADD CONSTRAINT "E_GUIDUNIQUE" UNIQUE
   ("GUID"
   );

ALTER TABLE "LF_EMPLOYEE_DEP"
  ADD CONSTRAINT "SQL151008135117800" PRIMARY KEY
   ("DEP_ID"
   );

ALTER TABLE "LF_EMPLOYEE_TYPE"
  ADD CONSTRAINT "SQL151008135121960" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_EMPLOYEE_TYPE"
  ADD CONSTRAINT "SQL151008135121970" UNIQUE
   ("NAME",
    "CORP_CODE"
   );

ALTER TABLE "LF_ENTERPRISE"
  ADD CONSTRAINT "SQL151008135117440" PRIMARY KEY
   ("OR_ID"
   );

ALTER TABLE "LF_EXAMINE_SMS"
  ADD CONSTRAINT "SQL151008135206600" PRIMARY KEY
   ("ES_ID"
   );

ALTER TABLE "LF_EXTERNAL_USER"
  ADD CONSTRAINT "SQL151008135120470" PRIMARY KEY
   ("EXUID"
   );

ALTER TABLE "LF_FLOW"
  ADD CONSTRAINT "SQL151008135110580" PRIMARY KEY
   ("F_ID"
   );

ALTER TABLE "LF_FLOWBINDOBJ"
  ADD CONSTRAINT "SQL151008140119280" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_FLOWBINDTYPE"
  ADD CONSTRAINT "SQL151008140119120" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_FLOWRECORD"
  ADD CONSTRAINT "SQL151008135110700" PRIMARY KEY
   ("FR_ID"
   );

ALTER TABLE "LF_GLOBAL_VARIABLE"
  ADD CONSTRAINT "SQL151008135116840" PRIMARY KEY
   ("GLOBALID"
   );

ALTER TABLE "LF_IMPOWER"
  ADD CONSTRAINT "SQL151008135110850" PRIMARY KEY
   ("ROLE_ID",
    "PRIVILEGE_ID"
   );

ALTER TABLE "LF_KEYWORDS"
  ADD CONSTRAINT "SQL151008135111040" PRIMARY KEY
   ("KW_ID"
   );

ALTER TABLE "LF_KEY_VALUE"
  ADD CONSTRAINT "SQL151008135121110" PRIMARY KEY
   ("KV_ID"
   );

ALTER TABLE "LF_LIST2GRO"
  ADD CONSTRAINT "SQL151008135111150" PRIMARY KEY
   ("L2G_ID"
   );

ALTER TABLE "LF_MACIP"
  ADD CONSTRAINT "SQL151008135214950" PRIMARY KEY
   ("LMIID"
   );

ALTER TABLE "LF_MALIST"
  ADD CONSTRAINT "SQL151008135111320" PRIMARY KEY
   ("MA_ID"
   );

ALTER TABLE "LF_MAPPING"
  ADD CONSTRAINT "SQL151008135121600" PRIMARY KEY
   ("MAP_ID"
   );

ALTER TABLE "LF_MATERIAL"
  ADD CONSTRAINT "SQL151008135118410" PRIMARY KEY
   ("MTAL_ID"
   );

ALTER TABLE "LF_MATERIAL_SORT"
  ADD CONSTRAINT "SQL151008135118530" PRIMARY KEY
   ("SORT_ID"
   );

ALTER TABLE "LF_MMSACCBIND"
  ADD CONSTRAINT "SQL151008135204970" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_MMSACCMANAGEMENT"
  ADD CONSTRAINT "SQL151008135204750" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_MMSBLIST"
  ADD CONSTRAINT "SQL151008135219380" PRIMARY KEY
   ("BL_ID"
   );

ALTER TABLE "LF_MMSINFO"
  ADD CONSTRAINT "SQL151008135117200" PRIMARY KEY
   ("MMSID"
   );

ALTER TABLE "LF_MMSMTTASK"
  ADD CONSTRAINT "SQL151008135118770" PRIMARY KEY
   ("MMS_ID"
   );

ALTER TABLE "LF_MMSTEMPLATE"
  ADD CONSTRAINT "SQL151008135118130" PRIMARY KEY
   ("MMS_ID"
   );

ALTER TABLE "LF_MMS_MTREPORT"
  ADD CONSTRAINT "SQL151008135120620" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_MOBFINANCIAL"
  ADD CONSTRAINT "SQL151008135120740" PRIMARY KEY
   ("MOBFID"
   );

ALTER TABLE "LF_MON_DGTACINFO"
  ADD CONSTRAINT "SQL151008140511180" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_MON_DHOST"
  ADD CONSTRAINT "SQL151008140509940" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_MON_DPROCE"
  ADD CONSTRAINT "SQL151008140510340" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_MON_DSPACINFO"
  ADD CONSTRAINT "SQL151008140510760" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_MON_ERR"
  ADD CONSTRAINT "SQL151008140511420" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_MON_ERRHIS"
  ADD CONSTRAINT "SQL151008140511600" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_MON_ONLCFG"
  ADD CONSTRAINT "SQL151008140511940" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_MON_ONLUSER"
  ADD CONSTRAINT "SQL151008140511760" PRIMARY KEY
   ("SESSEION_ID"
   );

ALTER TABLE "LF_MON_SGTACINFO"
  ADD CONSTRAINT "SQL151008140510990" PRIMARY KEY
   ("GATEACCOUNT"
   );

ALTER TABLE "LF_MON_SHOST"
  ADD CONSTRAINT "SQL151008140509770" PRIMARY KEY
   ("HOSTID"
   );

ALTER TABLE "LF_MON_SPGATEBUF"
  ADD CONSTRAINT "SQL151008140512370" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_MON_SPROCE"
  ADD CONSTRAINT "SQL151008140510170" PRIMARY KEY
   ("PROCEID"
   );

ALTER TABLE "LF_MON_SSPACINFO"
  ADD CONSTRAINT "SQL151008140510560" PRIMARY KEY
   ("SPACCOUNTID"
   );

ALTER TABLE "LF_MON_WBSBUF"
  ADD CONSTRAINT "SQL151008140512180" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_MOTASK"
  ADD CONSTRAINT "SQL151008135111440" PRIMARY KEY
   ("MO_ID"
   );

ALTER TABLE "LF_MO_SERVICE"
  ADD CONSTRAINT "SQL151008135116720" PRIMARY KEY
   ("MS_ID"
   );

ALTER TABLE "LF_MTRPT_EC"
  ADD CONSTRAINT "PK_LF_MTRPT_EC" PRIMARY KEY
   ("USERID",
    "TASKID",
    "SPGATE",
    "IYMD",
    "ERRORCODE",
    "Y",
    "IMONTH",
    "SPISUNCM",
    "SVRTYPE",
    "P1",
    "P2",
    "P3",
    "P4"
   );

ALTER TABLE "LF_MTTASK"
  ADD CONSTRAINT "SQL151008135111570" PRIMARY KEY
   ("MT_ID"
   );

ALTER TABLE "LF_MTTASK"
  ADD CONSTRAINT "MOBILEURLUNIQUE" UNIQUE
   ("MOBILE_URL"
   );

ALTER TABLE "LF_MTTASK"
  ADD CONSTRAINT "UQ_MTTASK" UNIQUE
   ("TASKID",
    "BATCHID"
   );

ALTER TABLE "LF_NOTICE"
  ADD CONSTRAINT "SQL151008135119850" PRIMARY KEY
   ("NOTICE_ID"
   );

ALTER TABLE "LF_ONLINE_USER"
  ADD CONSTRAINT "SQL151008135120350" PRIMARY KEY
   ("ONUID"
   );

ALTER TABLE "LF_OPERATE"
  ADD CONSTRAINT "SQL151008135111910" PRIMARY KEY
   ("OPERATE_ID"
   );

ALTER TABLE "LF_OPRATELOG"
  ADD CONSTRAINT "SQL151008135112030" PRIMARY KEY
   ("LOG_ID"
   );

ALTER TABLE "LF_PARAM"
  ADD CONSTRAINT "SQL151008135122080" PRIMARY KEY
   ("PARAM_ID"
   );

ALTER TABLE "LF_PERFECT_NOTIC"
  ADD CONSTRAINT "SQL151008135120090" PRIMARY KEY
   ("P_NOTIC_ID"
   );

ALTER TABLE "LF_PERFECT_NOTIC"
  ADD CONSTRAINT "PN_UNIQUE" UNIQUE
   ("TASKID"
   );

ALTER TABLE "LF_PERSONALCONFIG"
  ADD CONSTRAINT "SQL151008135116360" PRIMARY KEY
   ("PER_ID"
   );

ALTER TABLE "LF_POSITION"
  ADD CONSTRAINT "SQL151008135112140" PRIMARY KEY
   ("P_ID"
   );

ALTER TABLE "LF_PRIVILEGE"
  ADD CONSTRAINT "SQL151008135112410" PRIMARY KEY
   ("PRIVILEGE_ID"
   );

ALTER TABLE "LF_PRIV_LIST"
  ADD CONSTRAINT "SQL151008135112240" PRIMARY KEY
   ("USER_ID",
    "DEP_ID"
   );

ALTER TABLE "LF_PROCESS"
  ADD CONSTRAINT "SQL151008135112720" PRIMARY KEY
   ("PR_ID"
   );

ALTER TABLE "LF_PROCHARGES"
  ADD CONSTRAINT "SQL151008140721450" PRIMARY KEY
   ("RULE_ID"
   );

ALTER TABLE "LF_PRODUCTOR_CONT"
  ADD CONSTRAINT "SQL151008135121360" PRIMARY KEY
   ("IDEN_ID"
   );

ALTER TABLE "LF_PRODUCTS"
  ADD CONSTRAINT "SQL151008135119020" PRIMARY KEY
   ("PRO_ID"
   );

ALTER TABLE "LF_PROSENDCOUNT"
  ADD CONSTRAINT "SQL151008135119730" PRIMARY KEY
   ("CID"
   );

ALTER TABLE "LF_PRO_CON"
  ADD CONSTRAINT "SQL151008135112580" PRIMARY KEY
   ("DBCON_ID"
   );

ALTER TABLE "LF_P_N_UP"
  ADD CONSTRAINT "SQL151008135120210" PRIMARY KEY
   ("PNUP_ID"
   );

ALTER TABLE "LF_RECONCILIATION"
  ADD CONSTRAINT "SQL151008135112920" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_REPLY"
  ADD CONSTRAINT "SQL151008135113170" PRIMARY KEY
   ("RE_ID"
   );

ALTER TABLE "LF_RESOURCE"
  ADD CONSTRAINT "SQL151008135113330" PRIMARY KEY
   ("RESOURCE_ID"
   );

ALTER TABLE "LF_REVIEWER"
  ADD CONSTRAINT "SQL151008135113450" PRIMARY KEY
   ("F_ID",
    "MT_ID"
   );

ALTER TABLE "LF_REVIEWER2LEVEL"
  ADD CONSTRAINT "SQL151008135113620" PRIMARY KEY
   ("FRL_ID"
   );

ALTER TABLE "LF_REVIEWSWITCH"
  ADD CONSTRAINT "SQL151008140119000" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_ROLES"
  ADD CONSTRAINT "SQL151008135113790" PRIMARY KEY
   ("ROLE_ID"
   );

ALTER TABLE "LF_SENDGRO"
  ADD CONSTRAINT "SQL151008135113930" PRIMARY KEY
   ("SG_ID"
   );

ALTER TABLE "LF_SERMSG_DETAIL"
  ADD CONSTRAINT "SQL151008135114550" PRIMARY KEY
   ("SMD_ID"
   );

ALTER TABLE "LF_SERVICE"
  ADD CONSTRAINT "SQL151008135114090" PRIMARY KEY
   ("SER_ID"
   );

ALTER TABLE "LF_SERVICELOG"
  ADD CONSTRAINT "SQL151008135114240" PRIMARY KEY
   ("SL_ID"
   );

ALTER TABLE "LF_SERVICEMSG"
  ADD CONSTRAINT "SQL151008135114400" PRIMARY KEY
   ("SERMSGID"
   );

ALTER TABLE "LF_SKIN"
  ADD CONSTRAINT "SQL151008135435060" PRIMARY KEY
   ("SID"
   );

ALTER TABLE "LF_SPFEE"
  ADD CONSTRAINT "SQL151008140125990" PRIMARY KEY
   ("SF_ID"
   );

ALTER TABLE "LF_SP_DEP_BIND"
  ADD CONSTRAINT "SQL151008135116480" PRIMARY KEY
   ("DSG_ID"
   );

ALTER TABLE "LF_SQLWHERE"
  ADD CONSTRAINT "SQL151008135114690" PRIMARY KEY
   ("WH_ID"
   );

ALTER TABLE "LF_SUBNOALLOT"
  ADD CONSTRAINT "SQL151008135117080" PRIMARY KEY
   ("SUID"
   );

ALTER TABLE "LF_SUBNOALLOT_DETAIL"
  ADD CONSTRAINT "SQL151008135116960" PRIMARY KEY
   ("SUDID"
   );

ALTER TABLE "LF_SURVEY"
  ADD CONSTRAINT "SQL151008135118280" PRIMARY KEY
   ("SUV_ID"
   );

ALTER TABLE "LF_SURVEYTASK"
  ADD CONSTRAINT "SQL151008135121220" PRIMARY KEY
   ("IDEN_ID"
   );

ALTER TABLE "LF_SYSMTTASK"
  ADD CONSTRAINT "SQL151008140129340" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_SYSUSER"
  ADD CONSTRAINT "SQL151008135114850" PRIMARY KEY
   ("USER_ID"
   );

ALTER TABLE "LF_SYSUSER"
  ADD CONSTRAINT "GUIDUNIQUE" UNIQUE
   ("GUID"
   );

ALTER TABLE "LF_SYSUSER"
  ADD CONSTRAINT "USERCODEUNIQUE" UNIQUE
   ("USER_CODE"
   );

ALTER TABLE "LF_SYS_PARAM"
  ADD CONSTRAINT "SQL151008135122790" PRIMARY KEY
   ("PARAM_ID"
   );

ALTER TABLE "LF_SYS_PARAM"
  ADD CONSTRAINT "UQ_PARAM_ITEM" UNIQUE
   ("PARAM_ITEM"
   );

ALTER TABLE "LF_TAOCAN_CMD"
  ADD CONSTRAINT "SQL151008140723240" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_TASK"
  ADD CONSTRAINT "SQL151008135115000" PRIMARY KEY
   ("TAID"
   );

ALTER TABLE "LF_TASK"
  ADD CONSTRAINT "T_TASKIDUNIQUE" UNIQUE
   ("TASKID"
   );

ALTER TABLE "LF_TEMPLATE"
  ADD CONSTRAINT "SQL151008135115210" PRIMARY KEY
   ("TM_ID"
   );

ALTER TABLE "LF_THEME"
  ADD CONSTRAINT "SQL151008140120840" PRIMARY KEY
   ("TID"
   );

ALTER TABLE "LF_THIR_MENUCONTROL"
  ADD CONSTRAINT "SQL151008135119970" PRIMARY KEY
   ("TID"
   );

ALTER TABLE "LF_TIMER"
  ADD CONSTRAINT "SQL151008135115360" PRIMARY KEY
   ("TIMER_TASK_ID"
   );

ALTER TABLE "LF_TIMER_HISTORY"
  ADD CONSTRAINT "SQL151008135117570" PRIMARY KEY
   ("TA_ID"
   );

ALTER TABLE "LF_TMPLRELA"
  ADD CONSTRAINT "SQL151008140127230" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_UDGROUP"
  ADD CONSTRAINT "SQL151008135115510" PRIMARY KEY
   ("UDG_ID"
   );

ALTER TABLE "LF_USEDSUBNO"
  ADD CONSTRAINT "SQL151008135115630" PRIMARY KEY
   ("SUBNO_ID"
   );

ALTER TABLE "LF_USER2CLIENT"
  ADD CONSTRAINT "SQL151008135115750" PRIMARY KEY
   ("USER_ID",
    "CLIENT_ID"
   );

ALTER TABLE "LF_USER2ROLE"
  ADD CONSTRAINT "SQL151008135115950" PRIMARY KEY
   ("ROLE_ID",
    "USER_ID"
   );

ALTER TABLE "LF_USER2SKIN"
  ADD CONSTRAINT "SQL151008135435180" PRIMARY KEY
   ("USID"
   );

ALTER TABLE "LF_USERPARA"
  ADD CONSTRAINT "SQL151008135116120" PRIMARY KEY
   ("PARA_ID"
   );

ALTER TABLE "LF_USER_RPT"
  ADD CONSTRAINT "SQL151008135121480" PRIMARY KEY
   ("IDEN_ID"
   );

ALTER TABLE "LF_USER_SETTING"
  ADD CONSTRAINT "SQL151008135120990" PRIMARY KEY
   ("IDEN_ID"
   );

ALTER TABLE "LF_VERSION_EMPDB"
  ADD CONSTRAINT "SQL151008135116600" PRIMARY KEY
   ("DVID"
   );

ALTER TABLE "LF_VODINFO"
  ADD CONSTRAINT "SQL151008135119160" PRIMARY KEY
   ("VOD_ID"
   );

ALTER TABLE "LF_VODMOREC"
  ADD CONSTRAINT "SQL151008135119490" PRIMARY KEY
   ("REC_ID"
   );

ALTER TABLE "LF_VODMTREC"
  ADD CONSTRAINT "SQL151008135119360" PRIMARY KEY
   ("REC_ID"
   );

ALTER TABLE "LF_WC_ACCOUNT"
  ADD CONSTRAINT "SQL151008140454120" PRIMARY KEY
   ("A_ID"
   );

ALTER TABLE "LF_WC_KEYWORD"
  ADD CONSTRAINT "SQL151008140454360" PRIMARY KEY
   ("K_ID"
   );

ALTER TABLE "LF_WC_MENU"
  ADD CONSTRAINT "SQL151008140502060" PRIMARY KEY
   ("M_ID"
   );

ALTER TABLE "LF_WC_MSG"
  ADD CONSTRAINT "SQL151008140454240" PRIMARY KEY
   ("MSG_ID"
   );

ALTER TABLE "LF_WC_REVENT"
  ADD CONSTRAINT "SQL151008140454870" PRIMARY KEY
   ("EVT_ID"
   );

ALTER TABLE "LF_WC_RIMG"
  ADD CONSTRAINT "SQL151008140454740" PRIMARY KEY
   ("RIMG_ID"
   );

ALTER TABLE "LF_WC_RTEXT"
  ADD CONSTRAINT "SQL151008140455000" PRIMARY KEY
   ("TET_ID"
   );

ALTER TABLE "LF_WC_TEMPLATE"
  ADD CONSTRAINT "SQL151008140454620" PRIMARY KEY
   ("T_ID"
   );

ALTER TABLE "LF_WC_TLINK"
  ADD CONSTRAINT "SQL151008140454490" PRIMARY KEY
   ("K_ID"
   );

ALTER TABLE "LF_WC_ULINK"
  ADD CONSTRAINT "SQL151008140453920" PRIMARY KEY
   ("U_ID"
   );

ALTER TABLE "LF_WC_USERINFO"
  ADD CONSTRAINT "SQL151008140453770" PRIMARY KEY
   ("WC_ID"
   );

ALTER TABLE "LF_WC_VERIFY"
  ADD CONSTRAINT "SQL151008140501730" PRIMARY KEY
   ("VF_ID"
   );

ALTER TABLE "LF_WEIX_EMOJI"
  ADD CONSTRAINT "SQL151008140626460" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_WGPARAMCONFIG"
  ADD CONSTRAINT "SQL151008135122210" PRIMARY KEY
   ("PID"
   );

ALTER TABLE "LF_WGPARAMDEFINITION"
  ADD CONSTRAINT "SQL151008135122330" PRIMARY KEY
   ("PID"
   );

ALTER TABLE "LF_WX_BASEINFO"
  ADD CONSTRAINT "SQL151008140502650" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_WX_DATA"
  ADD CONSTRAINT "SQL151008140503350" PRIMARY KEY
   ("DID"
   );

ALTER TABLE "LF_WX_DATATYPE"
  ADD CONSTRAINT "SQL151008140503190" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_WX_PAGE"
  ADD CONSTRAINT "SQL151008140502790" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_WX_SENDCOUNT"
  ADD CONSTRAINT "SQL151008140503060" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_WX_SORT"
  ADD CONSTRAINT "SQL151008140502920" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "LF_WX_UPLOADFILE"
  ADD CONSTRAINT "SQL151008140503780" PRIMARY KEY
   ("ID"
   );

ALTER TABLE "OT_LBS_PIOS"
  ADD CONSTRAINT "SQL151008140619860" PRIMARY KEY
   ("P_ID"
   );

ALTER TABLE "OT_LBS_PUSHSET"
  ADD CONSTRAINT "SQL151008140619970" PRIMARY KEY
   ("PUSH_ID"
   );

ALTER TABLE "OT_LBS_USERPIOS"
  ADD CONSTRAINT "SQL151008140620760" PRIMARY KEY
   ("UP_ID"
   );

ALTER TABLE "OT_ONL_GROUP"
  ADD CONSTRAINT "SQL151008140620220" PRIMARY KEY
   ("GP_ID"
   );

ALTER TABLE "OT_ONL_MSG"
  ADD CONSTRAINT "SQL151008140620500" PRIMARY KEY
   ("M_ID"
   );

ALTER TABLE "OT_ONL_MSG_HIS"
  ADD CONSTRAINT "SQL151008140620630" PRIMARY KEY
   ("M_ID"
   );

ALTER TABLE "OT_ONL_SERVER"
  ADD CONSTRAINT "SQL151008140620100" PRIMARY KEY
   ("SER_ID"
   );

ALTER TABLE "OT_SIT_INFO"
  ADD CONSTRAINT "SQL151008140621090" PRIMARY KEY
   ("S_ID"
   );

ALTER TABLE "OT_SIT_PAGE"
  ADD CONSTRAINT "SQL151008140621230" PRIMARY KEY
   ("PAGE_ID"
   );

ALTER TABLE "OT_SIT_PLANT"
  ADD CONSTRAINT "SQL151008140621360" PRIMARY KEY
   ("PLANT_ID"
   );

ALTER TABLE "OT_SIT_TYPE"
  ADD CONSTRAINT "SQL151008140620890" PRIMARY KEY
   ("TYPE_ID"
   );

ALTER TABLE "OT_SYS_GLOBAL_VARIABLE"
  ADD CONSTRAINT "SQL151008140618330" PRIMARY KEY
   ("GLOBALID"
   );

ALTER TABLE "OT_WEI_ACCOUNT"
  ADD CONSTRAINT "SQL151008140618790" PRIMARY KEY
   ("A_ID"
   );

ALTER TABLE "OT_WEI_COUNT"
  ADD CONSTRAINT "SQL151008140621500" PRIMARY KEY
   ("COUNT_ID"
   );

ALTER TABLE "OT_WEI_GROUP"
  ADD CONSTRAINT "SQL151008140618560" PRIMARY KEY
   ("G_ID"
   );

ALTER TABLE "OT_WEI_KEYWORD"
  ADD CONSTRAINT "SQL151008140619030" PRIMARY KEY
   ("K_ID"
   );

ALTER TABLE "OT_WEI_MSG"
  ADD CONSTRAINT "SQL151008140618910" PRIMARY KEY
   ("MSG_ID"
   );

ALTER TABLE "OT_WEI_REVENT"
  ADD CONSTRAINT "SQL151008140619530" PRIMARY KEY
   ("EVT_ID"
   );

ALTER TABLE "OT_WEI_RIMG"
  ADD CONSTRAINT "SQL151008140619400" PRIMARY KEY
   ("RIMG_ID"
   );

ALTER TABLE "OT_WEI_RTEXT"
  ADD CONSTRAINT "SQL151008140619650" PRIMARY KEY
   ("TET_ID"
   );

ALTER TABLE "OT_WEI_SENDLOG"
  ADD CONSTRAINT "SQL151008140621650" PRIMARY KEY
   ("SEND_ID"
   );

ALTER TABLE "OT_WEI_TEMPLATE"
  ADD CONSTRAINT "SQL151008140619280" PRIMARY KEY
   ("T_ID"
   );

ALTER TABLE "OT_WEI_TLINK"
  ADD CONSTRAINT "SQL151008140619140" PRIMARY KEY
   ("K_ID"
   );

ALTER TABLE "OT_WEI_ULINK"
  ADD CONSTRAINT "SQL151008140618680" PRIMARY KEY
   ("U_ID"
   );

ALTER TABLE "OT_WEI_USERINFO"
  ADD CONSTRAINT "SQL151008140618450" PRIMARY KEY
   ("WC_ID"
   );

ALTER TABLE "LF_DOMINATION"
  ADD CONSTRAINT "FK_LF_DOM_LF_SYS" FOREIGN KEY
   ("USER_ID"
   )
    REFERENCES "LF_SYSUSER"
     ("USER_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_DOMINATION"
  ADD CONSTRAINT "FK_LF_DOMIN_LF_DEP" FOREIGN KEY
   ("DEP_ID"
   )
    REFERENCES "LF_DEP"
     ("DEP_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_EDIT"
  ADD CONSTRAINT "FK_EDIT_LF_PROCE" FOREIGN KEY
   ("PR_ID"
   )
    REFERENCES "LF_PROCESS"
     ("PR_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_IMPOWER"
  ADD CONSTRAINT "FK_IMPOW_LF_PRIVI" FOREIGN KEY
   ("PRIVILEGE_ID"
   )
    REFERENCES "LF_PRIVILEGE"
     ("PRIVILEGE_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_IMPOWER"
  ADD CONSTRAINT "FK_LF_IMPOWS_LF_R" FOREIGN KEY
   ("ROLE_ID"
   )
    REFERENCES "LF_ROLES"
     ("ROLE_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_LIST2GRO"
  ADD CONSTRAINT "FK_LF_UDG_LF_LIS" FOREIGN KEY
   ("UDG_ID"
   )
    REFERENCES "LF_UDGROUP"
     ("UDG_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_MATERIAL"
  ADD CONSTRAINT "FK_M_LF_M_S" FOREIGN KEY
   ("SORT_ID"
   )
    REFERENCES "LF_MATERIAL_SORT"
     ("SORT_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_MON_DGTACINFO"
  ADD CONSTRAINT "FK_LF_DGTACINFO_FK_LF_SGTACINFO" FOREIGN KEY
   ("GATEACCOUNT"
   )
    REFERENCES "LF_MON_SGTACINFO"
     ("GATEACCOUNT"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_MON_DHOST"
  ADD CONSTRAINT "FK_LF_DHOST_FK_LF_SHOST" FOREIGN KEY
   ("HOSTID"
   )
    REFERENCES "LF_MON_SHOST"
     ("HOSTID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_MON_DPROCE"
  ADD CONSTRAINT "FK_LF_DPROCE_FK_LF_DPROCE" FOREIGN KEY
   ("PROCEID"
   )
    REFERENCES "LF_MON_SPROCE"
     ("PROCEID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_MON_DSPACINFO"
  ADD CONSTRAINT "FK_LF_DSPACINFO_FK_LF_SSPACINFO" FOREIGN KEY
   ("SPACCOUNTID"
   )
    REFERENCES "LF_MON_SSPACINFO"
     ("SPACCOUNTID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_MO_SERVICE"
  ADD CONSTRAINT "FK_MS_PROCESS" FOREIGN KEY
   ("PR_ID"
   )
    REFERENCES "LF_PROCESS"
     ("PR_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_MO_SERVICE"
  ADD CONSTRAINT "FK_MSE_FK_SERVICE" FOREIGN KEY
   ("SER_ID"
   )
    REFERENCES "LF_SERVICE"
     ("SER_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_PERSONALCONFIG"
  ADD CONSTRAINT "FK_LF_PSC_FK_BUS" FOREIGN KEY
   ("BUS_ID"
   )
    REFERENCES "LF_BUSINESS"
     ("BUS_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_PRIV_LIST"
  ADD CONSTRAINT "FK_LF_PRIV_LF_DEP" FOREIGN KEY
   ("DEP_ID"
   )
    REFERENCES "LF_DEP"
     ("DEP_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_PRIV_LIST"
  ADD CONSTRAINT "FK_LF_PRIV_LF_SYS" FOREIGN KEY
   ("USER_ID"
   )
    REFERENCES "LF_SYSUSER"
     ("USER_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_PROCESS"
  ADD CONSTRAINT "FK_LF_PRO_LF_DBCON" FOREIGN KEY
   ("DB_ID"
   )
    REFERENCES "LF_DBCONNECT"
     ("DB_ID"
     )
    ON DELETE SET NULL
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_PROCESS"
  ADD CONSTRAINT "FK_LF_PRO_LF_SERVI" FOREIGN KEY
   ("SER_ID"
   )
    REFERENCES "LF_SERVICE"
     ("SER_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_PRO_CON"
  ADD CONSTRAINT "FK_LF_PC_LF_PROCE" FOREIGN KEY
   ("PR_ID"
   )
    REFERENCES "LF_PROCESS"
     ("PR_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_PRO_CON"
  ADD CONSTRAINT "FK_LF_PC_LF_PROS" FOREIGN KEY
   ("USEDPRID"
   )
    REFERENCES "LF_PROCESS"
     ("PR_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_REPLY"
  ADD CONSTRAINT "FK_LF_REPLY_LF_P" FOREIGN KEY
   ("PR_ID"
   )
    REFERENCES "LF_PROCESS"
     ("PR_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_REVIEWER"
  ADD CONSTRAINT "FK_LF_R_LF_F" FOREIGN KEY
   ("F_ID"
   )
    REFERENCES "LF_FLOW"
     ("F_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_REVIEWER2LEVEL"
  ADD CONSTRAINT "FK_LF_R2L_LF_FLOW" FOREIGN KEY
   ("F_ID"
   )
    REFERENCES "LF_FLOW"
     ("F_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_SENDGRO"
  ADD CONSTRAINT "FK_LF_SER_LF_SERVI" FOREIGN KEY
   ("SER_ID"
   )
    REFERENCES "LF_SERVICE"
     ("SER_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_SERVICE"
  ADD CONSTRAINT "FK_LF_SYSUS" FOREIGN KEY
   ("USER_ID"
   )
    REFERENCES "LF_SYSUSER"
     ("USER_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_SERVICE"
  ADD CONSTRAINT "FK_S_BUSMANAGER" FOREIGN KEY
   ("BUS_ID"
   )
    REFERENCES "LF_BUSMANAGER"
     ("BUS_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_SERVICELOG"
  ADD CONSTRAINT "FK_LF_SL_SERVICE" FOREIGN KEY
   ("SER_ID"
   )
    REFERENCES "LF_SERVICE"
     ("SER_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_SERVICEMSG"
  ADD CONSTRAINT "FK_LF_SM_LF_SGRO" FOREIGN KEY
   ("SG_ID"
   )
    REFERENCES "LF_SENDGRO"
     ("SG_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_SERVICEMSG"
  ADD CONSTRAINT "FK_LF_SMSG_LF_SV" FOREIGN KEY
   ("SER_ID"
   )
    REFERENCES "LF_SERVICE"
     ("SER_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_SQLWHERE"
  ADD CONSTRAINT "FK_LF_SW_LF_PROCE" FOREIGN KEY
   ("PR_ID"
   )
    REFERENCES "LF_PROCESS"
     ("PR_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_SYSUSER"
  ADD CONSTRAINT "FK_LF_SYS_LF_DEP" FOREIGN KEY
   ("DEP_ID"
   )
    REFERENCES "LF_DEP"
     ("DEP_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_TASK"
  ADD CONSTRAINT "FK_L_TASK_L_MTTAS" FOREIGN KEY
   ("MT_ID"
   )
    REFERENCES "LF_MTTASK"
     ("MT_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_TEMPLATE"
  ADD CONSTRAINT "FK_LF_TP_LF_SYSUS" FOREIGN KEY
   ("USER_ID"
   )
    REFERENCES "LF_SYSUSER"
     ("USER_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_UDGROUP"
  ADD CONSTRAINT "FK_LF_UD_LF_SYS" FOREIGN KEY
   ("USER_ID"
   )
    REFERENCES "LF_SYSUSER"
     ("USER_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_USER2CLIENT"
  ADD CONSTRAINT "FK_LF_U2C_LF_CLIEN" FOREIGN KEY
   ("CLIENT_ID"
   )
    REFERENCES "LF_CLIENT"
     ("CLIENT_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_USER2CLIENT"
  ADD CONSTRAINT "FK_LF_U2C_LF_DEP" FOREIGN KEY
   ("DEP_ID"
   )
    REFERENCES "LF_DEP"
     ("DEP_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_USER2CLIENT"
  ADD CONSTRAINT "FK_LF_U2C_LF_SYSUS" FOREIGN KEY
   ("USER_ID"
   )
    REFERENCES "LF_SYSUSER"
     ("USER_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_USER2ROLE"
  ADD CONSTRAINT "FK_LF_U2R_LF_ROLES" FOREIGN KEY
   ("ROLE_ID"
   )
    REFERENCES "LF_ROLES"
     ("ROLE_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_USER2ROLE"
  ADD CONSTRAINT "FK_LF_U2R_LF_SYSUS" FOREIGN KEY
   ("USER_ID"
   )
    REFERENCES "LF_SYSUSER"
     ("USER_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;

ALTER TABLE "LF_USERPARA"
  ADD CONSTRAINT "FK_LF_UP_LF_SV" FOREIGN KEY
   ("SER_ID"
   )
    REFERENCES "LF_SERVICE"
     ("SER_ID"
     )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    ENFORCED
    ENABLE QUERY OPTIMIZATION;



-- End of generated script for 192.169.1.174-db174-EMPDCD (db2admin)


-----IPCOMSTART--------

CREATE TABLE SENDQUEUE(
	"ID" INTEGER NOT NULL GENERATED ALWAYS
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 2147483647, NO CYCLE, NO ORDER),
	"PORT_NO" INTEGER NOT NULL DEFAULT -1,
	"MOBILE" VARCHAR(20) NOT NULL,
	"MSG_TYPE" INTEGER NOT NULL DEFAULT 0,
	"SHORT_MESSAGE" VARCHAR(300) NOT NULL,
	"URL" VARCHAR(200) ,
	"SEND_DATE" TIMESTAMP NOT NULL DEFAULT CURRENT TIMESTAMP,
	"CLIENTMSGID" VARCHAR(32) NOT NULL DEFAULT ''
) ;

CREATE TABLE RECEIPT(
	"ID" INTEGER NOT NULL GENERATED ALWAYS
     AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 2147483647, NO CYCLE, NO ORDER),
	"SRCADDR" VARCHAR(20) ,
	"DESADDR" VARCHAR(20) ,
	"MOTIME" TIMESTAMP NOT NULL DEFAULT CURRENT TIMESTAMP,
	"CLIENTMSGID" VARCHAR(32) ,
	"SPMSGID" VARCHAR(32) ,
	"STATUS" VARCHAR(7) 
) ;

CREATE TABLE HISTQUEUE(
	"ID" INTEGER NOT NULL GENERATED ALWAYS
    AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, MINVALUE 1, MAXVALUE 2147483647, NO CYCLE, NO ORDER),
	"PORT_NO" VARCHAR(20) ,
	"MOBILE" VARCHAR(20) ,
	"SHORT_MESSAGE" VARCHAR(200) ,
	"SEND_TIME" TIMESTAMP ,
	"REPEAT_SEND" INTEGER ,
	"STATUS" VARCHAR(10) ,
	"CLIENTMSGID" VARCHAR(32) NOT NULL DEFAULT '',
	"SPMSGID" VARCHAR(32) NOT NULL DEFAULT ''
) ;

-----IPCOMEND--------


-- Start of generated script for 192.169.1.174-db174-EMPDCD (db2admin)
--  Oct-08-2015 at 14:33:30

CREATE PROCEDURE "COSTRECOVERY"
 (IN "VARSYSDEPID" BIGINT, 
  IN "VARDEPID" BIGINT, 
  IN "VARUSERNAME" VARCHAR(100), 
  IN "VARCOUNT" INTEGER, 
  IN "VARCORPCODE" VARCHAR(100), 
  IN "VARCOATTYPE" INTEGER, 
  OUT "VARRETURNCOUNT" INTEGER
 ) 
  SPECIFIC "COSTRECOVERY"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN      
    DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VARPARENTID BIGINT;
	DECLARE VARBLCOUNT BIGINT;
	DECLARE VARYXCOUNT INT;
	 if VARCOUNT = 0 or VARCOUNT is null then
        --短信充值/回收数目不能为空
         SET VARRETURNCOUNT=-2;
         return;
     end if;
      --判断是否为admin，admin为顶级机构的操作员
      if VARUSERNAME<>'admin' then
          SET VARPARENTID=VARSYSDEPID;
      else
          select superior_id into VARPARENTID  from lf_dep where dep_id=VARDEPID;
      end if;
      if SQLCODE<>0 then
         	--获取操作员上级机构失败
         	SET VARRETURNCOUNT=-3;
         	rollback;
         	return;
	  end if;
	  
	   if VARUSERNAME<>'admin' or (VARUSERNAME='admin' and VARDEPID<>VARSYSDEPID) then
         --充值
         if VARCOATTYPE=1 then
            update lf_dep_user_balance set sms_balance=sms_balance-VARCOUNT where corp_code=VARCORPCODE and sms_balance>=VARCOUNT and target_id=VARPARENTID;
             GET DIAGNOSTICS VARYXCOUNT = ROW_COUNT;
             if VARYXCOUNT=0 then
                 select count(bl_id) into VARBLCOUNT from lf_dep_user_balance  where corp_code=VARCORPCODE and target_id=VARPARENTID;
                 if SQLCODE<>0 then
         		 	--获取用户短信余额记录失败
         			SET VARRETURNCOUNT=-6;
         			rollback;
         			return;
	  			end if;
                  
                 if VARBLCOUNT=0 then
                    --机构下没有可用短信余额
                    SET VARRETURNCOUNT=-4;
                 else
                   --充值数据大于短信可分配余额
                    SET VARRETURNCOUNT=-5;
                 end if;
                 rollback;
                 return;
             end if;
         else
           --回收
             --回收将回收的加到父及机构上
             update lf_dep_user_balance set sms_balance=sms_balance+VARCOUNT where corp_code=VARCORPCODE and target_id=VARPARENTID;
             GET DIAGNOSTICS VARYXCOUNT = ROW_COUNT;
             if VARYXCOUNT=0 then
                 select count(bl_id) into VARBLCOUNT from lf_dep_user_balance  where corp_code=VARCORPCODE and target_id=VARPARENTID;
                if SQLCODE<>0 then
                   --获取用户短信余额记录失败
                   SET VARRETURNCOUNT=-6;
                   rollback;
                   return;
				 end if;

                 if VARBLCOUNT=0 then
                    --机构下没有可用短信余额
                    SET VARRETURNCOUNT=-4;
                    rollback;
                    return;
                 end if;
             end if;
           end if;
      end if;
	  --充值
      if VARCOATTYPE=1 then
        update lf_dep_user_balance set sms_balance=sms_balance+VARCOUNT where corp_code=VARCORPCODE and target_id=VARDEPID;
        GET DIAGNOSTICS VARYXCOUNT = ROW_COUNT;
        if VARYXCOUNT=0 then
          --如果子的机构没有充过值则插入一条充值记录
          insert into lf_dep_user_balance(target_id,sms_balance,sms_count,mms_balance,mms_count,corp_code)
           values(VARDEPID,VARCOUNT,0,0,0,VARCORPCODE);
        end if;
       else
          update lf_dep_user_balance set sms_balance=sms_balance-VARCOUNT where corp_code=VARCORPCODE and sms_balance>=VARCOUNT and target_id=VARDEPID;
          GET DIAGNOSTICS VARYXCOUNT = ROW_COUNT;
          if VARYXCOUNT=0 then
              select count(bl_id) into VARBLCOUNT from lf_dep_user_balance  where corp_code=VARCORPCODE and target_id=VARDEPID;
              if SQLCODE<>0 then
                   --获取用户短信余额记录失败
                   SET VARRETURNCOUNT=-6;
                   rollback;
                   return;
			 end if;
              if VARBLCOUNT=0 then
                --机构没有进行充值过
                SET VARRETURNCOUNT=-7;
              else
                --回收短信数大于机构可分配数目
                SET VARRETURNCOUNT=-5;
              end if;
              rollback;
              return;
          end if;
       end if;
      --短信充值/回收成功
      SET VARRETURNCOUNT=0;
      commit;
END;



CREATE PROCEDURE "CREATEWXTABLE"
 (IN "PIYM" INTEGER
 ) 
  SPECIFIC "SQL151008140458000"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN
	DECLARE PISTR VARCHAR(4000);
	DECLARE PITABLENAME VARCHAR(20);
    SET PITABLENAME='LFWCMSG'||CAST(PIYM AS CHAR(6));
    SET PISTR='CREATE TABLE '||PITABLENAME||
    '(MSG_ID   bigint PRIMARY KEY  NOT NULL , 
  	  MSG_TYPE smallint not null,
      WC_ID  bigint not null,
      A_ID bigint not null,
      TYPE smallint not null,
      MSG_XML VARCHAR(4000) not null,
      MSG_TEXT VARCHAR(4000) not null,
      PARENT_ID bigint,
      CORP_CODE  VARCHAR(64) not null,
      CREATETIME TIMESTAMP not null
     )IN EMP_TABLESPACE';

	EXECUTE IMMEDIATE PISTR;
 END;


CREATE PROCEDURE "FEEDEDUCTION"
 (IN "VARDEPID" BIGINT, 
  IN "VARSENDCOUNT" BIGINT, 
  OUT "RETURNCOUNT" INTEGER
 ) 
  SPECIFIC "FEEDEDUCTION"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN          
	DECLARE BLCOUNT INT;
	DECLARE YXCOUNT INT;
 	if VARSENDCOUNT=0 then
		--短信发送或回收条数不能为空
		SET RETURNCOUNT=-5;
	else
		if VARSENDCOUNT>0 then
			update LF_DEP_USER_BALANCE set SMS_BALANCE=SMS_BALANCE-VARSENDCOUNT,SMS_COUNT=SMS_COUNT+VARSENDCOUNT where TARGET_ID=VARDEPID and SMS_BALANCE>=VARSENDCOUNT;
			GET DIAGNOSTICS YXCOUNT = ROW_COUNT;
			if YXCOUNT>0 then
			   --短信扣费成功
			   SET RETURNCOUNT=0;
			else
			   select count(BL_ID) into BLCOUNT from  LF_DEP_USER_BALANCE where TARGET_ID=VARDEPID;
		       if BLCOUNT=0 then
			     --用户所属机构没有充值
			     SET RETURNCOUNT=-4;
			   else
				 --短信余额不足
				 SET RETURNCOUNT=-2;
			   end if;
			end if;
		else
			update LF_DEP_USER_BALANCE set SMS_BALANCE=SMS_BALANCE-VARSENDCOUNT,SMS_COUNT=SMS_COUNT+VARSENDCOUNT where TARGET_ID=VARDEPID and SMS_COUNT+VARSENDCOUNT>0;
			GET DIAGNOSTICS YXCOUNT = ROW_COUNT;
			if YXCOUNT>0 then
			   --短信回收成功
			   SET RETURNCOUNT=1;
			else
			   select count(BL_ID) into BLCOUNT from  LF_DEP_USER_BALANCE where TARGET_ID=VARDEPID;
		       if BLCOUNT=0 then
			      --用户所属机构没有充值
			      SET RETURNCOUNT=-4;
			   else
				  --短信回收发送条数异常
				  SET RETURNCOUNT=-8;
			   end if;
			end if;
		end if;
	end if;
END;

CREATE PROCEDURE "GETCLIDEPLEVEL"
 (IN "LEV" INTEGER, 
  IN "PID" BIGINT, 
  OUT "MAXLEV" INTEGER
 ) 
  SPECIFIC "GETCLIDEPLEVEL"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN          
     DECLARE I INT;
     DECLARE rowcount INT;
	declare wcount bigint;
     SET I = 0;
     IF Lev = 1 then
		  set I =1; 
	 end if;
	 SELECT COALESCE(count(*),0) into wcount FROM LF_Client_DEP  WHERE (DEP_ID = PID);
	 if wcount=0 then
		set I =0;
        set rowcount=0;
	 else
		SELECT PARENT_ID into rowcount FROM LF_CLIENT_DEP  WHERE (DEP_ID = PID);
     end if;
     WHILE rowcount <> 0 do
          SET I = I+1;
        SELECT PARENT_ID into rowcount FROM LF_CLIENT_DEP WHERE (DEP_ID = rowcount);
     END WHILE;
     set MaxLev=I;   
END;

CREATE PROCEDURE "GETEMPDEPLEVEL"
 (IN "LEV" INTEGER, 
  IN "PID" BIGINT, 
  OUT "MAXLEV" INTEGER
 ) 
  SPECIFIC "GETEMPDEPLEVEL"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN          
     DECLARE I INT;
     DECLARE rowcount INT;
	declare wcount bigint;
     SET I = 0;
     IF Lev = 1 then
		  set I =1; 
	 end if;
	 SELECT COALESCE(count(*),0) into wcount FROM LF_EMPLOYEE_DEP  WHERE (DEP_ID = PID);
	 if wcount=0 then
		set I =0;
        set rowcount=0;
	 else
		SELECT PARENT_ID into rowcount FROM LF_EMPLOYEE_DEP  WHERE (DEP_ID = PID);
     end if;
     WHILE rowcount <> 0 do
          SET I = I+1;
        SELECT PARENT_ID into rowcount FROM LF_EMPLOYEE_DEP WHERE (DEP_ID = rowcount);
     END WHILE;
     set MaxLev=I;   
END;

CREATE PROCEDURE "GETUSERDEPLEVEL"
 (IN "LEV" INTEGER, 
  IN "PID" BIGINT, 
  OUT "MAXLEV" INTEGER
 ) 
  SPECIFIC "GETUSERDEPLEVEL"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN          
     DECLARE I INT;
     DECLARE rowcount INT;
	declare wcount bigint;
     SET I = 0;
     IF Lev = 1 then
		  set I =1; 
	 end if;
	 SELECT COALESCE(count(*),0) into wcount FROM LF_DEP  WHERE (DEP_ID = PID);
	 if wcount=0 then
		set I =0;
        set rowcount=0;
	 else
		SELECT SUPERIOR_ID into rowcount FROM LF_DEP  WHERE (DEP_ID = PID);
     end if;
     WHILE rowcount <> 0 do
          SET I = I+1;
        SELECT SUPERIOR_ID into rowcount FROM LF_DEP WHERE (DEP_ID = rowcount);
     END WHILE;
     set MaxLev=I;   
END;

CREATE PROCEDURE "MMSCOSTRECOVERY"
 (IN "VARSYSDEPID" BIGINT, 
  IN "VARDEPID" BIGINT, 
  IN "VARUSERNAME" VARCHAR(100), 
  IN "VARCOUNT" INTEGER, 
  IN "VARCORPCODE" VARCHAR(100), 
  IN "VARCOATTYPE" INTEGER, 
  OUT "VARRETURNCOUNT" INTEGER
 ) 
  SPECIFIC "MMSCOSTRECOVERY"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN      
    DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VARPARENTID BIGINT;
	DECLARE VARBLCOUNT BIGINT;
	DECLARE VARYXCOUNT INT;
	 if VARCOUNT = 0 or VARCOUNT is null then
        --短信充值/回收数目不能为空
         SET VARRETURNCOUNT=-2;
         return;
     end if;
      --判断是否为admin，admin为顶级机构的操作员
      if VARUSERNAME<>'admin' then
          SET VARPARENTID=VARSYSDEPID;
      else
          select superior_id into VARPARENTID  from lf_dep where dep_id=VARDEPID;
      end if;
      if SQLCODE<>0 then
         	--获取操作员上级机构失败
         	SET VARRETURNCOUNT=-3;
         	rollback;
         	return;
	  end if;
	  
	   if VARUSERNAME<>'admin' or (VARUSERNAME='admin' and VARDEPID<>VARSYSDEPID) then
         --充值
         if VARCOATTYPE=1 then
            update lf_dep_user_balance set mms_balance=mms_balance-VARCOUNT where corp_code=VARCORPCODE and mms_balance>=VARCOUNT and target_id=VARPARENTID;
             GET DIAGNOSTICS VARYXCOUNT = ROW_COUNT;
             if VARYXCOUNT=0 then
                 select count(bl_id) into VARBLCOUNT from lf_dep_user_balance  where corp_code=VARCORPCODE and target_id=VARPARENTID;
                 if SQLCODE<>0 then
         		 	--获取用户短信余额记录失败
         			SET VARRETURNCOUNT=-6;
         			rollback;
         			return;
	  			end if;
                  
                 if VARBLCOUNT=0 then
                    --机构下没有可用短信余额
                    SET VARRETURNCOUNT=-4;
                 else
                   --充值数据大于短信可分配余额
                    SET VARRETURNCOUNT=-5;
                 end if;
                 rollback;
                 return;
             end if;
         else
           --回收
             --回收将回收的加到父及机构上
             update lf_dep_user_balance set mms_balance=mms_balance+VARCOUNT where corp_code=VARCORPCODE and target_id=VARPARENTID;
             GET DIAGNOSTICS VARYXCOUNT = ROW_COUNT;
             if VARYXCOUNT=0 then
                 select count(bl_id) into VARBLCOUNT from lf_dep_user_balance  where corp_code=VARCORPCODE and target_id=VARPARENTID;
                if SQLCODE<>0 then
                   --获取用户短信余额记录失败
                   SET VARRETURNCOUNT=-6;
                   rollback;
                   return;
				 end if;

                 if VARBLCOUNT=0 then
                    --机构下没有可用短信余额
                    SET VARRETURNCOUNT=-4;
                    rollback;
                    return;
                 end if;
             end if;
           end if;
      end if;
	  --充值
      if VARCOATTYPE=1 then
        update lf_dep_user_balance set mms_balance=mms_balance+VARCOUNT where corp_code=VARCORPCODE and target_id=VARDEPID;
        GET DIAGNOSTICS VARYXCOUNT = ROW_COUNT;
        if VARYXCOUNT=0 then
          --如果子的机构没有充过值则插入一条充值记录
          insert into lf_dep_user_balance(target_id,sms_balance,sms_count,mms_balance,mms_count,corp_code)
           values(VARDEPID,0,0,VARCOUNT,0,VARCORPCODE);
        end if;
       else
          update lf_dep_user_balance set mms_balance=mms_balance-VARCOUNT where corp_code=VARCORPCODE and mms_balance>=VARCOUNT and target_id=VARDEPID;
          GET DIAGNOSTICS VARYXCOUNT = ROW_COUNT;
          if VARYXCOUNT=0 then
              select count(bl_id) into VARBLCOUNT from lf_dep_user_balance  where corp_code=VARCORPCODE and target_id=VARDEPID;
              if SQLCODE<>0 then
                   --获取用户短信余额记录失败
                   SET VARRETURNCOUNT=-6;
                   rollback;
                   return;
			 end if;
              if VARBLCOUNT=0 then
                --机构没有进行充值过
                SET VARRETURNCOUNT=-7;
              else
                --回收短信数大于机构可分配数目
                SET VARRETURNCOUNT=-5;
              end if;
              rollback;
              return;
          end if;
       end if;
      --短信充值/回收成功
      SET VARRETURNCOUNT=0;
      commit;
END;


CREATE PROCEDURE "MMSFEEDEDUCTION"
 (IN "VARDEPID" BIGINT, 
  IN "VARSENDCOUNT" BIGINT, 
  OUT "RETURNCOUNT" INTEGER
 ) 
  SPECIFIC "MMSFEEDEDUCTION"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN          
	DECLARE BLCOUNT INT;
	DECLARE YXCOUNT INT;
 	if VARSENDCOUNT=0 then
		--彩信发送或回收条数不能为空
		SET RETURNCOUNT=-5;
	else
		if VARSENDCOUNT>0 then
			update LF_DEP_USER_BALANCE set MMS_BALANCE=MMS_BALANCE-VARSENDCOUNT,MMS_COUNT=MMS_COUNT+VARSENDCOUNT where TARGET_ID=VARDEPID and MMS_BALANCE>=VARSENDCOUNT;
			GET DIAGNOSTICS YXCOUNT = ROW_COUNT;
			if YXCOUNT>0 then
			   --彩信扣费成功
			   SET RETURNCOUNT=0;
			else
			   select count(BL_ID) into BLCOUNT from  LF_DEP_USER_BALANCE where TARGET_ID=VARDEPID;
		       if BLCOUNT=0 then
			     --用户所属机构没有充值
			     SET RETURNCOUNT=-4;
			   else
				 --彩信余额不足
				 SET RETURNCOUNT=-2;
			   end if;
			end if;
		else
			update LF_DEP_USER_BALANCE set MMS_BALANCE=MMS_BALANCE-VARSENDCOUNT,MMS_COUNT=MMS_COUNT+VARSENDCOUNT where TARGET_ID=VARDEPID and MMS_COUNT+VARSENDCOUNT>0;
			GET DIAGNOSTICS YXCOUNT = ROW_COUNT;
			if YXCOUNT>0 then
			   --彩信回收成功
			   SET RETURNCOUNT=1;
			else
			   select count(BL_ID) into BLCOUNT from  LF_DEP_USER_BALANCE where TARGET_ID=VARDEPID;
		       if BLCOUNT=0 then
			      --用户所属机构没有充值
			      SET RETURNCOUNT=-4;
			   else
				  --彩信回收发送条数异常
				  SET RETURNCOUNT=-8;
			   end if;
			end if;
		end if;
	end if;
END;


CREATE PROCEDURE "PRC_SUMMAPP" ( ) 
  SPECIFIC "PRC_SUMMAPP"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN
  DECLARE SQLCODE INTEGER DEFAULT 0;
  DECLARE PARAMVALUE VARCHAR(64);
  	 SELECT PARAM_VALUE INTO PARAMVALUE FROM LF_SYS_PARAM WHERE PARAM_ITEM='isAppSummFilish';
	 IF PARAMVALUE='0' THEN
	 	UPDATE LF_SYS_PARAM SET PARAM_VALUE='1' WHERE PARAM_ITEM='isAppSummFilish';
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   RETURN;
		END IF;

		MERGE INTO LF_APP_MTTASK M
   		USING(SELECT TASKID,
   		  COALESCE(COUNT(CASE RPT_STATE WHEN '0' THEN 1 ELSE NULL END),0) succount,
		   COALESCE(COUNT(CASE RPT_STATE WHEN '1' THEN 1 ELSE NULL END),0) faicount,
	  	  COALESCE(COUNT(CASE RPT_STATE WHEN '0' THEN 1 ELSE NULL END),0) readcount
   		FROM LF_APP_MTMSG where TASKID IS NOT NULL AND CREATETIME>=TO_DATE(CHAR(CURRENT DATE-3 DAYS),'yyyy-MM-dd') GROUP BY TASKID) T
   		ON(M.TASKID=T.TASKID)
   		WHEN MATCHED THEN
    		UPDATE SET SUC_COUNT = T.succount ,FAI_COUNT = T.faicount,READ_COUNT = T.readcount,UNREAD_COUNT=0;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isAppSummFilish';
		   RETURN;
		END IF;
	
		UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isAppSummFilish';
		COMMIT;
  END IF;
  END;



CREATE PROCEDURE "PRO_GET_INT_ID"
 (IN "FILDID" SMALLINT, 
  IN "GETCOUNT" INTEGER, 
  OUT "GVALUE" BIGINT
 ) 
  SPECIFIC "PRO_GET_INT_ID"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN
	DECLARE EXIT handler FOR SQLEXCEPTION
	BEGIN
		--开始异常处理
		ROLLBACK;
		SET GVALUE = 0;
	END;

	SET GVALUE = 0;
	--没指定行id，则返回0
	IF(FILDID IS NULL OR FILDID = 0) THEN
	BEGIN
		SET GVALUE = 0;
		RETURN;
	END;
	END IF;
	
	--先更新表新值
	UPDATE LF_GLOBAL_VARIABLE SET GLOBALVALUE = GLOBALVALUE + GETCOUNT WHERE GLOBALID = FILDID;
	
	--查询出当前使用值for db29.7
	--SELECT GLOBALVALUE INTO GVALUE FROM LF_GLOBAL_VARIABLE WHERE GLOBALID = FILDID FOR UPDATE WITH RR;
	--查询出当前使用值for db2 9.5/9.7
	SELECT GLOBALVALUE INTO GVALUE FROM LF_GLOBAL_VARIABLE WHERE GLOBALID = FILDID WITH RR USE AND KEEP UPDATE LOCKS;

	IF(GVALUE IS NULL OR GVALUE = 0) THEN
		--若没初始化数据，则这里插一条
		INSERT INTO LF_GLOBAL_VARIABLE(globalid,globalkey,globalvalue) values(FILDID,'',1000000+GETCOUNT);
	END IF;
	
	COMMIT;

  END;



-- End of generated script for 192.169.1.174-db174-EMPDCD (db2admin)


CREATE PROCEDURE H_SUMMARY() 
  SPECIFIC H_SUMMARY
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN
	DECLARE str varchar(4000);
	DECLARE processflag  INT;
	DECLARE currindex BIGINT;
    DECLARE maxindex BIGINT;
	DECLARE USERID VARCHAR(11);
	declare TASKID integer;
	declare SPGATE varchar(21);
	declare ERRORCODE char(7);
	declare Y int;
	declare IMONTH integer;
	declare ICOUNT integer;
	declare IYMD integer;
	declare SPISUNCM integer;
	DECLARE SVRTYPE VARCHAR(64);
	declare P1 varchar(64);
	declare P2 varchar(64);
	declare P3 varchar(64);
	declare P4 varchar(64);

	declare GLOBAL TEMPORARY table SESSION.temp_statistics 
	( USERID Varchar(11),TASKID integer,SPGATE Varchar(21),ERRORCODE CHAR(7),Y INT,IMONTH integer,ICOUNT integer,IYMD integer,SPISUNCM integer,
	SVRTYPE VARCHAR(64),P1 VARCHAR(64),P2 VARCHAR(64),P3 VARCHAR(64),P4 VARCHAR(64)) ON COMMIT DELETE ROWS NOT LOGGED WITH REPLACE;
	set processflag = 2;
   set currindex   =0;
   set maxindex	=0;
   --delete from lf_mtrpt_ec where to_date(char(IYMD),'yyyymmdd')<(CURRENT DATE - 2 DAYS);       
	select VALUE(min(ID),0),VALUE(max(ID),0)into currindex,maxindex  from MT_TASK  where (DATE(SENDTIME) between (CURRENT DATE - processflag DAYS) AND (CURRENT DATE));

end;
COMMIT;

CREATE PROCEDURE "PRC_SUMM" ( ) 
  SPECIFIC "PRC_SUMM"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN
  DECLARE SQLCODE INTEGER DEFAULT 0;
  DECLARE PARAMVALUE VARCHAR(64);
  DECLARE HPARAMVALUE VARCHAR(64);
  SELECT PARAM_VALUE INTO HPARAMVALUE FROM LF_SYS_PARAM WHERE PARAM_ITEM='isHdataFilish';
  IF HPARAMVALUE='0' THEN
  	 SELECT PARAM_VALUE INTO PARAMVALUE FROM LF_SYS_PARAM WHERE PARAM_ITEM='isSummFilish';
	 IF PARAMVALUE='0' THEN
	 	UPDATE LF_SYS_PARAM SET PARAM_VALUE='1' WHERE PARAM_ITEM='isSummFilish';
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   RETURN;
		END IF;
		DELETE FROM LF_TASKREPORT;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		INSERT INTO LF_TASKREPORT(R_TASKID,R_BATCHID,R_TASKTYPE,R_ICOUNT,R_SUCC,R_FAIL1,R_FAIL2,R_NRET) 
		SELECT TASKID,BATCHID,TASKTYPE,0,0,0,0,0 FROM LF_MTTASK WHERE TIMER_TIME>TO_DATE(CHAR(CURRENT DATE),'yyyy-MM-dd') AND MS_TYPE<>2;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		MERGE INTO LF_TASKREPORT M
   		USING(SELECT TASKID,COUNT(ID) ICOUNT,
   		  COALESCE(COUNT(CASE RTRIM(ERRORCODE) WHEN 'DELIVRD' THEN '1' WHEN '0' THEN '1' ELSE NULL END),0) RSUCC,
	  	  COALESCE(COUNT(CASE SUBSTR(ERRORCODE,1,3) WHEN 'E1:' THEN 1 WHEN 'E2:' THEN 1 ELSE NULL END),0) RFAIL1,
	  	  (COUNT(ID)-COALESCE(COUNT(CASE RTRIM(ERRORCODE) WHEN 'DELIVRD' THEN '1' WHEN '0' THEN '1' ELSE NULL END),0)
	  	  -COALESCE(COUNT(CASE SUBSTR(ERRORCODE,1,3) WHEN 'E1:' THEN 1 WHEN 'E2:' THEN 1 ELSE NULL END),0)
	  	  -SUM(CASE RTRIM(ERRORCODE) WHEN '' THEN 1 ELSE 0 END)) RFAIL2,
	  	  SUM(CASE RTRIM(ERRORCODE) WHEN '' THEN 1 ELSE 0 END) RNRET
   		FROM MT_TASK where SENDTIME>TO_DATE(CHAR(CURRENT DATE),'yyyy-MM-dd') GROUP BY TASKID) T
   		ON(M.R_TASKID=T.TASKID and M.R_TASKTYPE=1)
   		WHEN MATCHED THEN
    	UPDATE SET R_ICOUNT = R_ICOUNT+T.ICOUNT,R_SUCC = R_SUCC+T.RSUCC ,R_FAIL1 =R_FAIL1+ T.RFAIL1,R_FAIL2=R_FAIL2+T.RFAIL2,R_NRET=R_NRET+T.RNRET;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		
		MERGE INTO LF_TASKREPORT M
   		USING(SELECT BATCHID,COUNT(ID) ICOUNT,
   		  COALESCE(COUNT(CASE RTRIM(ERRORCODE) WHEN 'DELIVRD' THEN '1' WHEN '0' THEN '1' ELSE NULL END),0) RSUCC,
	  	  COALESCE(COUNT(CASE SUBSTR(ERRORCODE,1,3) WHEN 'E1:' THEN 1 WHEN 'E2:' THEN 1 ELSE NULL END),0) RFAIL1,
	  	  (COUNT(ID)-COALESCE(COUNT(CASE RTRIM(ERRORCODE) WHEN 'DELIVRD' THEN '1' WHEN '0' THEN '1' ELSE NULL END),0)
	  	  -COALESCE(COUNT(CASE SUBSTR(ERRORCODE,1,3) WHEN 'E1:' THEN 1 WHEN 'E2:' THEN 1 ELSE NULL END),0)
	  	  -SUM(CASE RTRIM(ERRORCODE) WHEN '' THEN 1 ELSE 0 END)) RFAIL2,
	  	  SUM(CASE RTRIM(ERRORCODE) WHEN '' THEN 1 ELSE 0 END) RNRET
   		FROM MT_TASK where SENDTIME>TO_DATE(CHAR(CURRENT DATE),'yyyy-MM-dd') GROUP BY BATCHID) T
   		ON(M.R_BATCHID=T.BATCHID and M.R_TASKTYPE=2)
   		WHEN MATCHED THEN
    	UPDATE SET R_ICOUNT = R_ICOUNT+T.ICOUNT,R_SUCC = R_SUCC+T.RSUCC ,R_FAIL1 =R_FAIL1+ T.RFAIL1,R_FAIL2=R_FAIL2+T.RFAIL2,R_NRET=R_NRET+T.RNRET;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		
		MERGE INTO LF_MTTASK M
   		USING(SELECT SUM(R_ICOUNT) AS R_ICOUNT ,sum(R_SUCC) AS R_SUCC,sum(R_FAIL1) AS R_FAIL1,sum(R_FAIL2) AS R_FAIL2,sum(R_NRET) AS R_NRET,R_TASKID FROM LF_TASKREPORT GROUP BY R_TASKID) T
   		ON(M.TASKID=T.R_TASKID and M.TASKTYPE=1 and M.MS_TYPE<>2)
   		WHEN MATCHED THEN
    		 UPDATE SET ICOUNT2=T.R_ICOUNT,SUC_COUNT=T.R_SUCC,FAI_COUNT=T.R_FAIL1,RFAIL2=T.R_FAIL2,RNRET=T.R_NRET;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		
		MERGE INTO LF_MTTASK M
   		USING(SELECT SUM(R_ICOUNT) AS R_ICOUNT ,sum(R_SUCC) AS R_SUCC,sum(R_FAIL1) AS R_FAIL1,sum(R_FAIL2) AS R_FAIL2,sum(R_NRET) AS R_NRET,R_BATCHID FROM LF_TASKREPORT GROUP BY R_BATCHID) T
   		ON(M.BATCHID=T.R_BATCHID and M.TASKTYPE=2 and M.MS_TYPE<>2)
   		WHEN MATCHED THEN
    		 UPDATE SET ICOUNT2=T.R_ICOUNT,SUC_COUNT=T.R_SUCC,FAI_COUNT=T.R_FAIL1,RFAIL2=T.R_FAIL2,RNRET=T.R_NRET;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		
		DELETE FROM LF_TASKREPORT;
		UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		COMMIT;
	 END IF;
  END IF;
  END;




CREATE PROCEDURE "PRC_SUMMONE" ( ) 
  SPECIFIC "PRC_SUMMONE"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN
  DECLARE SQLCODE INTEGER DEFAULT 0;
  DECLARE PARAMINTVALUE INT;
  DECLARE PARAMVALUE VARCHAR(64);
  IF NOT EXISTS(SELECT * FROM LF_TASKREPORT) then
  		SET PARAMINTVALUE=4;
		SELECT PARAM_VALUE INTO PARAMVALUE from LF_SYS_PARAM WHERE PARAM_ITEM='SummDay';
		IF PARAMVALUE<>'' and PARAMVALUE IS NOT NULL THEN
			SET PARAMINTVALUE=INT(PARAMVALUE);
		END IF;
  
  	 	INSERT INTO LF_TASKREPORT(R_TASKID,R_BATCHID,R_ICOUNT,R_SUCC,R_FAIL1,R_FAIL2,R_NRET) 
	 	SELECT TASKID,BATCHID,COALESCE(SUM(ICOUNT),0),COALESCE(SUM(RSUCC),0),COALESCE(SUM(RFAIL1),0),COALESCE(SUM(RFAIL2),0),COALESCE(SUM(RNRET),0)
           		FROM MT_DATAREPORT WHERE IYMD>BIGINT(REPLACE(CHAR(CURRENT DATE - PARAMINTVALUE DAYS),'-',''))  GROUP BY TASKID,BATCHID;
	 	IF SQLCODE<>0 AND SQLCODE<>100 THEN
	 	   ROLLBACK;
		   DELETE FROM LF_TASKREPORT;
		   RETURN;
		END IF;	
       MERGE INTO LF_TASKREPORT M
       USING(SELECT TASKID,BATCHID,COALESCE(SUM(ICOUNT),0) ICOUNT,COALESCE(SUM(RSUCC),0) RSUCC,COALESCE(SUM(RFAIL1),0) RFAIL1,COALESCE(SUM(RFAIL2),0) RFAIL2,COALESCE(SUM(RNRET),0) RNRET
           		FROM MT_DATAREPORT WHERE IYMD<=BIGINT(REPLACE(CHAR(CURRENT DATE - PARAMINTVALUE DAYS),'-',''))  GROUP BY TASKID,BATCHID) T
       on(M.R_TASKID=T.TASKID and M.R_BATCHID=T.BATCHID)
       WHEN MATCHED THEN
          UPDATE SET R_ICOUNT=R_ICOUNT+T.ICOUNT,R_SUCC=R_SUCC+T.RSUCC,R_FAIL1=R_FAIL1+T.RFAIL1,R_FAIL2=R_FAIL2+T.RFAIL2,R_NRET=R_NRET+T.RNRET;
	   IF SQLCODE<>0 AND SQLCODE<>100 THEN
	 	   ROLLBACK;
		   DELETE FROM LF_TASKREPORT;
		   RETURN;
	   END IF;	
				
      MERGE INTO LF_MTTASK M
      USING(SELECT SUM(R_ICOUNT) AS R_ICOUNT ,sum(R_SUCC) AS R_SUCC,sum(R_FAIL1) AS R_FAIL1,sum(R_FAIL2) AS R_FAIL2,sum(R_NRET) AS R_NRET,R_TASKID FROM LF_TASKREPORT GROUP BY R_TASKID) T
      ON(M.TASKID=T.R_TASKID and M.TASKTYPE=1 and M.MS_TYPE<>2)
      WHEN MATCHED THEN
    	UPDATE SET ICOUNT2=T.R_ICOUNT,SUC_COUNT=T.R_SUCC,FAI_COUNT=T.R_FAIL1,RFAIL2=T.R_FAIL2,RNRET=T.R_NRET;
	  IF SQLCODE<>0 AND SQLCODE<>100 THEN
	 	   ROLLBACK;
		   DELETE FROM LF_TASKREPORT;
		   RETURN;
	  END IF;
	  
	  
	   MERGE INTO LF_MTTASK M
      USING(SELECT SUM(R_ICOUNT) AS R_ICOUNT ,sum(R_SUCC) AS R_SUCC,sum(R_FAIL1) AS R_FAIL1,sum(R_FAIL2) AS R_FAIL2,sum(R_NRET) AS R_NRET,R_BATCHID FROM LF_TASKREPORT GROUP BY R_BATCHID) T
      ON(M.BATCHID=T.R_BATCHID and M.TASKTYPE=2 and M.MS_TYPE<>2)
      WHEN MATCHED THEN
    	UPDATE SET ICOUNT2=T.R_ICOUNT,SUC_COUNT=T.R_SUCC,FAI_COUNT=T.R_FAIL1,RFAIL2=T.R_FAIL2,RNRET=T.R_NRET;
	  IF SQLCODE<>0 AND SQLCODE<>100 THEN
	 	   ROLLBACK;
		   DELETE FROM LF_TASKREPORT;
		   RETURN;
	  END IF;
	  
  	 DELETE FROM LF_TASKREPORT;
  END IF;
COMMIT;
END;


CREATE PROCEDURE "PRC_MMSSUMM" ( ) 
  SPECIFIC "PRC_MMSSUMM"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN
  DECLARE SQLCODE INTEGER DEFAULT 0;
  DECLARE PARAMVALUE VARCHAR(64);
  DECLARE HPARAMVALUE VARCHAR(64);
  SELECT PARAM_VALUE INTO HPARAMVALUE FROM LF_SYS_PARAM WHERE PARAM_ITEM='isHdataFilish';
  IF HPARAMVALUE='0' THEN
  	 SELECT PARAM_VALUE INTO PARAMVALUE FROM LF_SYS_PARAM WHERE PARAM_ITEM='ismSummFilish';
	 IF PARAMVALUE='0' THEN
	 	UPDATE LF_SYS_PARAM SET PARAM_VALUE='1' WHERE PARAM_ITEM='ismSummFilish';
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   RETURN;
		END IF;
		DELETE FROM LF_MMSTASKREPORT;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='ismSummFilish';
		   RETURN;
		END IF;
		INSERT INTO LF_MMSTASKREPORT(R_TASKID,R_ICOUNT,R_SUCC,R_FAIL1,R_FAIL2,R_NRET) 
		SELECT TASKID,0,0,0,0,0 FROM LF_MTTASK WHERE TIMER_TIME>TO_DATE(CHAR(CURRENT DATE),'yyyy-MM-dd') AND MS_TYPE=2;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='ismSummFilish';
		   RETURN;
		END IF;
		MERGE INTO LF_MMSTASKREPORT M
   		USING(SELECT TASKID,COUNT(ID) ICOUNT,
   		  COALESCE(COUNT(CASE RTRIM(ERRORCODE) WHEN 'DELIVRD' THEN '1' WHEN '0' THEN '1' ELSE NULL END),0) RSUCC,
	  	  COALESCE(COUNT(CASE SUBSTR(ERRORCODE,1,3) WHEN 'E1:' THEN 1 WHEN 'E2:' THEN 1 ELSE NULL END),0) RFAIL1,
	  	  (COUNT(ID)-COALESCE(COUNT(CASE RTRIM(ERRORCODE) WHEN 'DELIVRD' THEN '1' WHEN '0' THEN '1' ELSE NULL END),0)
	  	  -COALESCE(COUNT(CASE SUBSTR(ERRORCODE,1,3) WHEN 'E1:' THEN 1 WHEN 'E2:' THEN 1 ELSE NULL END),0)
	  	  -SUM(CASE RTRIM(ERRORCODE) WHEN '' THEN 1 ELSE 0 END)) RFAIL2,
	  	  SUM(CASE RTRIM(ERRORCODE) WHEN '' THEN 1 ELSE 0 END) RNRET
   		FROM MMS_TASK where SENDTIME>TO_DATE(CHAR(CURRENT DATE),'yyyy-MM-dd') GROUP BY TASKID) T
   		ON(M.R_TASKID=T.TASKID)
   		WHEN MATCHED THEN
    	UPDATE SET R_ICOUNT = R_ICOUNT+T.ICOUNT,R_SUCC = R_SUCC+T.RSUCC ,R_FAIL1 =R_FAIL1+ T.RFAIL1,R_FAIL2=R_FAIL2+T.RFAIL2,R_NRET=R_NRET+T.RNRET;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='ismSummFilish';
		   RETURN;
		END IF;
		
		MERGE INTO LF_MTTASK M
   		USING(SELECT SUM(R_ICOUNT) AS R_ICOUNT ,sum(R_SUCC) AS R_SUCC,sum(R_FAIL1) AS R_FAIL1,sum(R_FAIL2) AS R_FAIL2,sum(R_NRET) AS R_NRET,R_TASKID FROM LF_MMSTASKREPORT GROUP BY R_TASKID) T
   		ON(M.TASKID=T.R_TASKID and M.MS_TYPE=2)
   		WHEN MATCHED THEN
    		 UPDATE SET ICOUNT2=T.R_ICOUNT,SUC_COUNT=T.R_SUCC,FAI_COUNT=T.R_FAIL1,RFAIL2=T.R_FAIL2,RNRET=T.R_NRET;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='ismSummFilish';
		   RETURN;
		END IF;
		DELETE FROM LF_MMSTASKREPORT;
		UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='ismSummFilish';
		COMMIT;
	 END IF;
  END IF;
  END;


CREATE PROCEDURE "PRC_MMSSUMMONE" ( ) 
  SPECIFIC "PRC_MMSSUMMONE"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN
  DECLARE SQLCODE INTEGER DEFAULT 0;
  DECLARE PARAMINTVALUE INT;
  DECLARE PARAMVALUE VARCHAR(64);
  IF NOT EXISTS(SELECT * FROM LF_MMSTASKREPORT) then
  		SET PARAMINTVALUE=4;
		SELECT PARAM_VALUE INTO PARAMVALUE from LF_SYS_PARAM WHERE PARAM_ITEM='MsSummDay';
		IF PARAMVALUE<>'' and PARAMVALUE IS NOT NULL THEN
			SET PARAMINTVALUE=INT(PARAMVALUE);
		END IF;
  
  	 	INSERT INTO LF_MMSTASKREPORT(R_TASKID,R_ICOUNT,R_SUCC,R_FAIL1,R_FAIL2,R_NRET) 
	 	SELECT TASKID,COALESCE(SUM(ICOUNT),0),	COALESCE(SUM(RSUCC),0),COALESCE(SUM(RFAIL1),0),COALESCE(SUM(RFAIL2),0),COALESCE(SUM(RNRET),0)
           		FROM MMS_DATAREPORT WHERE IYMD>BIGINT(REPLACE(CHAR(CURRENT DATE - PARAMINTVALUE DAYS),'-',''))  GROUP BY TASKID;
	 	IF SQLCODE<>0 AND SQLCODE<>100 THEN
	 	   ROLLBACK;
		   DELETE FROM LF_MMSTASKREPORT;
		   RETURN;
		END IF;	
		
       MERGE INTO LF_MMSTASKREPORT M
       USING(SELECT TASKID,COALESCE(SUM(ICOUNT),0) ICOUNT,COALESCE(SUM(RSUCC),0) RSUCC,COALESCE(SUM(RFAIL1),0) RFAIL1,COALESCE(SUM(RFAIL2),0) RFAIL2,COALESCE(SUM(RNRET),0) RNRET
           		FROM MMS_DATAREPORT WHERE IYMD<=BIGINT(REPLACE(CHAR(CURRENT DATE - PARAMINTVALUE DAYS),'-',''))  GROUP BY TASKID) T
       on(M.R_TASKID=T.TASKID)
       WHEN MATCHED THEN
          UPDATE SET R_ICOUNT=R_ICOUNT+T.ICOUNT,R_SUCC=R_SUCC+T.RSUCC,R_FAIL1=R_FAIL1+T.RFAIL1,R_FAIL2=R_FAIL2+T.RFAIL2,R_NRET=R_NRET+T.RNRET;
	   IF SQLCODE<>0 AND SQLCODE<>100 THEN
	 	   ROLLBACK;
		   DELETE FROM LF_MMSTASKREPORT;
		   RETURN;
	   END IF;	
				
      MERGE INTO LF_MTTASK M
      USING(SELECT SUM(R_ICOUNT) AS R_ICOUNT ,sum(R_SUCC) AS R_SUCC,sum(R_FAIL1) AS R_FAIL1,sum(R_FAIL2) AS R_FAIL2,sum(R_NRET) AS R_NRET,R_TASKID FROM LF_MMSTASKREPORT GROUP BY R_TASKID) T
      ON(M.TASKID=T.R_TASKID AND M.MS_TYPE=2)
      WHEN MATCHED THEN
    	UPDATE SET ICOUNT2=T.R_ICOUNT,SUC_COUNT=T.R_SUCC,FAI_COUNT=T.R_FAIL1,RFAIL2=T.R_FAIL2,RNRET=T.R_NRET;
	  IF SQLCODE<>0 AND SQLCODE<>100 THEN
	 	   ROLLBACK;
		   DELETE FROM LF_MMSTASKREPORT;
		   RETURN;
	  END IF;
  	 DELETE FROM LF_MMSTASKREPORT;
  END IF;
COMMIT;
END;



CREATE PROCEDURE "PRC_SUMMWY" ( ) 
  SPECIFIC "PRC_SUMMWY"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN
  DECLARE SQLCODE INTEGER DEFAULT 0;
  DECLARE PARAMVALUE VARCHAR(64);
  DECLARE HPARAMVALUE VARCHAR(64);
  SELECT PARAM_VALUE INTO HPARAMVALUE FROM LF_SYS_PARAM WHERE PARAM_ITEM='isHdataFilish';
  IF HPARAMVALUE='0' THEN
  	 SELECT PARAM_VALUE INTO PARAMVALUE FROM LF_SYS_PARAM WHERE PARAM_ITEM='isSummFilish';
	 IF PARAMVALUE='0' THEN
	 	UPDATE LF_SYS_PARAM SET PARAM_VALUE='1' WHERE PARAM_ITEM='isSummFilish';
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   RETURN;
		END IF;
		DELETE FROM LF_TASKREPORT;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		
		INSERT INTO LF_TASKREPORT(R_TASKID,R_BATCHID,R_TASKTYPE,R_ICOUNT,R_SUCC,R_FAIL1,R_FAIL2,R_NRET) 
		SELECT TASKID,BATCHID,TASKTYPE,0,0,0,0,0 FROM LF_MTTASK WHERE TIMER_TIME>TO_DATE(CHAR(CURRENT DATE),'yyyy-MM-dd') AND MS_TYPE<>2;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		
		--符合条件的记录填到表LF_TASKREPORT，taskid的任务
		MERGE INTO LF_TASKREPORT M
   		USING(SELECT TASKID,COUNT(ID) ICOUNT,
   		  COALESCE(COUNT(CASE RTRIM(ERRORCODE) WHEN 'DELIVRD' THEN '1' WHEN '0' THEN '1' ELSE NULL END),0) RSUCC,
	  	  COALESCE(COUNT(CASE SUBSTR(ERRORCODE,1,3) WHEN 'E1:' THEN 1 WHEN 'E2:' THEN 1 ELSE NULL END),0) RFAIL1,
	  	  (COUNT(ID)-COALESCE(COUNT(CASE RTRIM(ERRORCODE) WHEN 'DELIVRD' THEN '1' WHEN '0' THEN '1' ELSE NULL END),0)
	  	  -COALESCE(COUNT(CASE SUBSTR(ERRORCODE,1,3) WHEN 'E1:' THEN 1 WHEN 'E2:' THEN 1 ELSE NULL END),0)
	  	  -SUM(CASE RTRIM(ERRORCODE) WHEN '' THEN 1 ELSE 0 END)) RFAIL2,
	  	  SUM(CASE RTRIM(ERRORCODE) WHEN '' THEN 1 ELSE 0 END) RNRET
   		FROM MT_TASK where SENDTIME>TO_DATE(CHAR(CURRENT DATE),'yyyy-MM-dd') and SPGATE in (select spgate from XT_GATE_QUEUE where spgate like '200%') 
		GROUP BY TASKID) T
   		ON(M.R_TASKID=T.TASKID and M.R_TASKTYPE=1)
   		WHEN MATCHED THEN
    	UPDATE SET R_ICOUNT = R_ICOUNT+T.ICOUNT,R_SUCC = R_SUCC+T.RSUCC ,R_FAIL1 =R_FAIL1+ T.RFAIL1,R_FAIL2=R_FAIL2+T.RFAIL2,R_NRET=R_NRET+T.RNRET;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		
		--符合条件的记录填到表LF_TASKREPORT，batchid的任务
		MERGE INTO LF_TASKREPORT M
   		USING(SELECT BATCHID,COUNT(ID) ICOUNT,
   		  COALESCE(COUNT(CASE RTRIM(ERRORCODE) WHEN 'DELIVRD' THEN '1' WHEN '0' THEN '1' ELSE NULL END),0) RSUCC,
	  	  COALESCE(COUNT(CASE SUBSTR(ERRORCODE,1,3) WHEN 'E1:' THEN 1 WHEN 'E2:' THEN 1 ELSE NULL END),0) RFAIL1,
	  	  (COUNT(ID)-COALESCE(COUNT(CASE RTRIM(ERRORCODE) WHEN 'DELIVRD' THEN '1' WHEN '0' THEN '1' ELSE NULL END),0)
	  	  -COALESCE(COUNT(CASE SUBSTR(ERRORCODE,1,3) WHEN 'E1:' THEN 1 WHEN 'E2:' THEN 1 ELSE NULL END),0)
	  	  -SUM(CASE RTRIM(ERRORCODE) WHEN '' THEN 1 ELSE 0 END)) RFAIL2,
	  	  SUM(CASE RTRIM(ERRORCODE) WHEN '' THEN 1 ELSE 0 END) RNRET
   		FROM MT_TASK where SENDTIME>TO_DATE(CHAR(CURRENT DATE),'yyyy-MM-dd') and SPGATE in (select spgate from XT_GATE_QUEUE where spgate like '200%') 
		GROUP BY BATCHID) T
   		ON(M.R_BATCHID=T.BATCHID and M.R_TASKTYPE=2)
   		WHEN MATCHED THEN
    	UPDATE SET R_ICOUNT = R_ICOUNT+T.ICOUNT,R_SUCC = R_SUCC+T.RSUCC ,R_FAIL1 =R_FAIL1+ T.RFAIL1,R_FAIL2=R_FAIL2+T.RFAIL2,R_NRET=R_NRET+T.RNRET;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		
		--更新信息到lf_mttask表的WYSENDINFO字段，taskid的任务
		MERGE INTO LF_MTTASK M
   		USING(SELECT SUM(R_ICOUNT) AS R_ICOUNT ,sum(R_SUCC) AS R_SUCC,sum(R_FAIL1) AS R_FAIL1,sum(R_FAIL2) AS R_FAIL2,sum(R_NRET) AS R_NRET,R_TASKID FROM LF_TASKREPORT GROUP BY R_TASKID) T
   		ON(M.TASKID=T.R_TASKID and M.TASKTYPE=1 and M.MS_TYPE<>2 and T.R_ICOUNT>0)
   		WHEN MATCHED THEN
    		 UPDATE SET M.WYSENDINFO=(char(T.R_ICOUNT)||'/'||char(T.R_SUCC)||'/'||char(T.R_FAIL1)||'/'||char(T.R_FAIL2));
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		
		--更新信息到lf_mttask表的WYSENDINFO字段，batchid的任务
		MERGE INTO LF_MTTASK M
   		USING(SELECT SUM(R_ICOUNT) AS R_ICOUNT ,sum(R_SUCC) AS R_SUCC,sum(R_FAIL1) AS R_FAIL1,sum(R_FAIL2) AS R_FAIL2,sum(R_NRET) AS R_NRET,R_BATCHID FROM LF_TASKREPORT GROUP BY R_BATCHID) T
   		ON(M.BATCHID=T.R_BATCHID and M.TASKTYPE=2 and M.MS_TYPE<>2 and T.R_ICOUNT>0)
   		WHEN MATCHED THEN
    		 UPDATE SET M.WYSENDINFO=(char(T.R_ICOUNT)||'/'||char(T.R_SUCC)||'/'||char(T.R_FAIL1)||'/'||char(T.R_FAIL2));
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		
		DELETE FROM LF_TASKREPORT;
		UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		COMMIT;
	 END IF;
  END IF;
  END;


CREATE PROCEDURE "PRC_SUMMONEWY" ( ) 
  SPECIFIC "PRC_SUMMONEWY"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN
  DECLARE SQLCODE INTEGER DEFAULT 0;
  DECLARE PARAMINTVALUE INT;
  DECLARE PARAMVALUE VARCHAR(64);
  IF NOT EXISTS(SELECT * FROM LF_TASKREPORT) then
  		SET PARAMINTVALUE=4;
		SELECT PARAM_VALUE INTO PARAMVALUE from LF_SYS_PARAM WHERE PARAM_ITEM='SummDay';
		IF PARAMVALUE<>'' and PARAMVALUE IS NOT NULL THEN
			SET PARAMINTVALUE=INT(PARAMVALUE);
		END IF;
  
		--先把n天内 且符合条件的记录填到表LF_TASKREPORT
  	 	INSERT INTO LF_TASKREPORT(R_TASKID,R_BATCHID,R_ICOUNT,R_SUCC,R_FAIL1,R_FAIL2,R_NRET) 
	 	SELECT TASKID,BATCHID,COALESCE(SUM(ICOUNT),0),COALESCE(SUM(RSUCC),0),COALESCE(SUM(RFAIL1),0),COALESCE(SUM(RFAIL2),0),COALESCE(SUM(RNRET),0)
           		FROM MT_DATAREPORT WHERE IYMD>BIGINT(REPLACE(CHAR(CURRENT DATE - PARAMINTVALUE DAYS),'-',''))  
				and SPGATE in (select spgate from XT_GATE_QUEUE where spgate like '200%')
				GROUP BY TASKID,BATCHID;
	 	IF SQLCODE<>0 AND SQLCODE<>100 THEN
	 	   ROLLBACK;
		   DELETE FROM LF_TASKREPORT;
		   RETURN;
		END IF;	
		
		--把n天前 且符合条件的总数记录更新到表LF_TASKREPORT
		MERGE INTO LF_TASKREPORT M
		USING(SELECT TASKID,BATCHID,COALESCE(SUM(ICOUNT),0) ICOUNT,COALESCE(SUM(RSUCC),0) RSUCC,COALESCE(SUM(RFAIL1),0) RFAIL1,COALESCE(SUM(RFAIL2),0) RFAIL2,COALESCE(SUM(RNRET),0) RNRET
           		FROM MT_DATAREPORT WHERE IYMD<=BIGINT(REPLACE(CHAR(CURRENT DATE - PARAMINTVALUE DAYS),'-',''))  
				and SPGATE in (select spgate from XT_GATE_QUEUE where spgate like '200%')
				GROUP BY TASKID,BATCHID) T
       on(M.R_TASKID=T.TASKID and M.R_BATCHID=T.BATCHID)
       WHEN MATCHED THEN
          UPDATE SET R_ICOUNT=R_ICOUNT+T.ICOUNT,R_SUCC=R_SUCC+T.RSUCC,R_FAIL1=R_FAIL1+T.RFAIL1,R_FAIL2=R_FAIL2+T.RFAIL2,R_NRET=R_NRET+T.RNRET;
	   IF SQLCODE<>0 AND SQLCODE<>100 THEN
	 	   ROLLBACK;
		   DELETE FROM LF_TASKREPORT;
		   RETURN;
	   END IF;	
		
		--更新信息到lf_mttask表的WYSENDINFO字段，taskid的任务		
      MERGE INTO LF_MTTASK M
      USING(SELECT SUM(R_ICOUNT) AS R_ICOUNT ,sum(R_SUCC) AS R_SUCC,sum(R_FAIL1) AS R_FAIL1,sum(R_FAIL2) AS R_FAIL2,sum(R_NRET) AS R_NRET,R_TASKID FROM LF_TASKREPORT GROUP BY R_TASKID) T
      ON(M.TASKID=T.R_TASKID and M.TASKTYPE=1 and M.MS_TYPE<>2 and T.R_ICOUNT>0)
      WHEN MATCHED THEN
    	UPDATE SET WYSENDINFO=(char(T.R_ICOUNT)||'/'||char(T.R_SUCC)||'/'||char(T.R_FAIL1)||'/'||char(T.R_FAIL2));
	  IF SQLCODE<>0 AND SQLCODE<>100 THEN
	 	   ROLLBACK;
		   DELETE FROM LF_TASKREPORT;
		   RETURN;
	  END IF;
	  
	  --更新信息到lf_mttask表的WYSENDINFO字段，batchid的任务
	   MERGE INTO LF_MTTASK M
      USING(SELECT SUM(R_ICOUNT) AS R_ICOUNT ,sum(R_SUCC) AS R_SUCC,sum(R_FAIL1) AS R_FAIL1,sum(R_FAIL2) AS R_FAIL2,sum(R_NRET) AS R_NRET,R_BATCHID FROM LF_TASKREPORT GROUP BY R_BATCHID) T
      ON(M.BATCHID=T.R_BATCHID and M.TASKTYPE=2 and M.MS_TYPE<>2 and T.R_ICOUNT>0)
      WHEN MATCHED THEN
    	UPDATE SET WYSENDINFO=(char(T.R_ICOUNT)||'/'||char(T.R_SUCC)||'/'||char(T.R_FAIL1)||'/'||char(T.R_FAIL2));
	  IF SQLCODE<>0 AND SQLCODE<>100 THEN
	 	   ROLLBACK;
		   DELETE FROM LF_TASKREPORT;
		   RETURN;
	  END IF;
	  
  	 DELETE FROM LF_TASKREPORT;
  END IF;
COMMIT;
END;



--创建三年历史表
BEGIN ATOMIC 
DECLARE PINUM  INTEGER;
DECLARE PICURNUM INTEGER;
DECLARE PIYM INTEGER;
DECLARE ERRO_NUM INTEGER;
DECLARE PITABLENAME VARCHAR(20);

SET PINUM=36;
SET ERRO_NUM=0;
SET PICURNUM=0;
  WHILE PICURNUM<PINUM DO
    SET PIYM=CAST((SUBSTR(CHAR(CURRENT TIMESTAMP + PICURNUM MONTHS),1,4)||SUBSTR(CHAR(CURRENT TIMESTAMP + PICURNUM MONTHS),6,2))AS INT);
	  SET PITABLENAME='LFWCMSG'||CAST(PIYM AS CHAR(6));
	IF NOT EXISTS (SELECT tabname from syscat.tables where tabname=PITABLENAME) THEN
       CALL CREATEWXTABLE(PIYM);      
	 END IF;--END OF IF TACNT=0    
	 SET PICURNUM=PICURNUM+1;
  END WHILE;
END;


-- Start of generated script for 192.169.1.174-db174-EMPDCD (db2admin)
--  Oct-08-2015 at 14:52:26

CREATE UNIQUE INDEX "APPCODEUNIQUE"
  ON "LF_APP_MW_CLIENT"
 ("APP_CODE" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE UNIQUE INDEX "C_GUIDUNIQUE"
  ON "LF_CLIENT"
 ("GUID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE UNIQUE INDEX "E_GUIDUNIQUE"
  ON "LF_EMPLOYEE"
 ("GUID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "FK_LF_CLI_RELATIONS_LF_CLI_FK"
  ON "LF_CLIENT"
 ("CC_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "FK_LF_CLI_RELATIONS_LF_DEP_FK"
  ON "LF_CLIENT"
 ("DEP_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "FK_LF_EDI_RELATIONS_LF_PRO_FK"
  ON "LF_EDIT"
 ("PR_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "FK_LF_FLO_RELATIONS_LF_MTT_FK"
  ON "LF_FLOWRECORD"
 ("MT_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "FK_LF_LIS_RELATIONS_LF_EMP_FK"
  ON "LF_EMPLOYEE"
 ("DEP_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "FK_LF_LIS_RELATIONS_LF_SYS_FK"
  ON "LF_LIST2GRO"
 ("UDG_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "FK_LF_MTT_RELATIONS_LF_SYS_FK"
  ON "LF_MTTASK"
 ("USER_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "FK_LF_PRI_RELATIONS_LF_OPE_FK"
  ON "LF_PRIVILEGE"
 ("OPERATE_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "FK_LF_PRI_RELATIONS_LF_RES_FK"
  ON "LF_PRIVILEGE"
 ("RESOURCE_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "FK_LF_PRO_RELATIONS_LF_DBC_FK"
  ON "LF_PROCESS"
 ("DB_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "FK_LF_PRO_RELATIONS_LF_PRO_FK"
  ON "LF_PRO_CON"
 ("PR_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "FK_LF_PRO_RELATIONS_LF_SEN_FK"
  ON "LF_PROCESS"
 ("SG_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "FK_LF_PRO_RELATIONS_LF_SER_FK"
  ON "LF_PROCESS"
 ("SER_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "FK_LF_REV_RELATIONS_LF_FLO_FK"
  ON "LF_REVIEWER2LEVEL"
 ("F_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "FK_LF_REV_RELATIONS_LF_SYS_FK"
  ON "LF_REVIEWER2LEVEL"
 ("USER_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "FK_LF_SERVI_RELATIONS_LF_SERVI"
  ON "LF_SERVICELOG"
 ("SER_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "FK_LF_SQL_RELATIONS_LF_PRO_FK"
  ON "LF_SQLWHERE"
 ("PR_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "FK_LF_SYS_RELATIONS_LF_DEP_FK"
  ON "LF_SYSUSER"
 ("DEP_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "FK_LF_SYS_RELATIONS_LF_POS_FK"
  ON "LF_EMPLOYEE"
 ("P_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE UNIQUE INDEX "GUIDUNIQUE"
  ON "LF_SYSUSER"
 ("GUID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "INDEX_LF_CI_CORP_CODE"
  ON "LF_CLIENT"
 ("CORP_CODE" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "INDEX_LF_CI_NAME"
  ON "LF_CLIENT"
 ("NAME" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "INDEX_LF_CI_PHONE"
  ON "LF_CLIENT"
 ("PHONE" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "INDEX_LF_CI_SP_CLI_ID"
  ON "LF_CLIENT_DEP_SP"
 ("CLIENT_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "INDEX_LF_CI_SP_DEP_ID"
  ON "LF_CLIENT_DEP_SP"
 ("DEP_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "INDEX_LF_MTTASK_CCODE"
  ON "LF_MTTASK"
 ("CORP_CODE" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "INDEX_LF_MTTASK_RESTATE"
  ON "LF_MTTASK"
 ("RE_STATE" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "INDEX_LF_MTTASK_SENDSTATE"
  ON "LF_MTTASK"
 ("SENDSTATE" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "INDEX_LF_MTTASK_SPUSER"
  ON "LF_MTTASK"
 ("SP_USER" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "INDEX_LF_MTTASK_SUBSTATE"
  ON "LF_MTTASK"
 ("SUB_STATE" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "INDEX_LF_MTTASK_SUBTIME"
  ON "LF_MTTASK"
 ("SUBMITTIME" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "INDEX_LF_MTTASK_TASKID"
  ON "LF_MTTASK"
 ("TASKID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "INDEX_LF_MTTASK_TASKTYPE"
  ON "LF_MTTASK"
 ("TASKTYPE" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "IND_MMSACCBIND_CODE"
  ON "LF_MMSACCBIND"
 ("CORP_CODE" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "IND_MMSACCBIND_USER_ID"
  ON "LF_MMSACCBIND"
 ("USER_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "IND_MMSACCMANAGEMENT_USERID"
  ON "LF_MMSACCMANAGEMENT"
 ("MMS_USERID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "IX_ALSMS_MSGID"
  ON "LF_ALSMSRECORD"
 ("MSGID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "IX_LF_MTRPT_EC"
  ON "LF_MTRPT_EC"
 ("TASKID" ASC
 )
  PCTFREE 10
  DISALLOW REVERSE SCANS;

CREATE INDEX "IX_LF_TASK_USERID"
  ON "LF_TASK"
 ("USER_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "I_LF_DEDUCTIONS_LIST_D"
  ON "LF_DEDUCTIONS_LIST"
 ("CONTRACT_DEP" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "I_LF_DEDUCTIONS_LIST_M"
  ON "LF_DEDUCTIONS_LIST"
 ("IMONTH" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "I_LF_DEDUCTIONS_LIST_U"
  ON "LF_DEDUCTIONS_LIST"
 ("CONTRACT_USER" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "I_LF_DEDUCTIONS_LIST_Y"
  ON "LF_DEDUCTIONS_LIST"
 ("IYEAR" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LE_SER2MSG_FK"
  ON "LF_SERVICEMSG"
 ("SER_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_ADDSERVICE_FK"
  ON "LF_SERVICE"
 ("USER_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_ADDTEMPLETE_FK"
  ON "LF_TEMPLATE"
 ("USER_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE UNIQUE INDEX "LF_DEP_USER_BALANCE_I_TARID"
  ON "LF_DEP_USER_BALANCE"
 ("TARGET_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_DOMINATION_FK"
  ON "LF_DOMINATION"
 ("DEP_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_DOMINATION_FK2"
  ON "LF_DOMINATION"
 ("USER_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_IMPOWER_FK"
  ON "LF_IMPOWER"
 ("ROLE_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_IMPOWER_FK2"
  ON "LF_IMPOWER"
 ("PRIVILEGE_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_MMSADDTEMP_FK"
  ON "LF_MMSTEMPLATE"
 ("USER_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_MTMSG_TASK_FK"
  ON "LF_TASK"
 ("MT_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_PRIV_LIST_FK"
  ON "LF_PRIV_LIST"
 ("USER_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_PRIV_LIST_FK2"
  ON "LF_PRIV_LIST"
 ("DEP_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_PRO_REPLY_FK"
  ON "LF_REPLY"
 ("PR_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_REVIEWER_FK"
  ON "LF_REVIEWER"
 ("F_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_REVIEWER_FK2"
  ON "LF_REVIEWER"
 ("MT_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_SER2GRO_FK"
  ON "LF_SENDGRO"
 ("SER_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_SERVICE_TASK_FK"
  ON "LF_TASK"
 ("SL_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_SL_RELLATION_SMD_FK"
  ON "LF_SERMSG_DETAIL"
 ("SL_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_USER2CLIENT_FK"
  ON "LF_USER2CLIENT"
 ("USER_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_USER2CLIENT_FK2"
  ON "LF_USER2CLIENT"
 ("CLIENT_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_USER2CLIENT_FK3"
  ON "LF_USER2CLIENT"
 ("DEP_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_USER2ROLE_FK"
  ON "LF_USER2ROLE"
 ("ROLE_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_USER2ROLE_FK2"
  ON "LF_USER2ROLE"
 ("USER_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_WGPARAMCONFIG_I_PARAMSUBNUM"
  ON "LF_WGPARAMCONFIG"
 ("PARAMSUBNUM" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE INDEX "LF_WGPARAMCONFIG_I_PARAMVALUE"
  ON "LF_WGPARAMCONFIG"
 ("PARAMVALUE" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE UNIQUE INDEX "MOBILEURLUNIQUE"
  ON "LF_MTTASK"
 ("MOBILE_URL" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE UNIQUE INDEX "MSGIDDISPUNIQUE"
  ON "LF_DEDUCTIONS_DISP"
 ("MSG_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE UNIQUE INDEX "MSGIDUNIQUE"
  ON "LF_DEDUCTIONS_LIST"
 ("MSG_ID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE UNIQUE INDEX "PACKAGECODEUNIQUE"
  ON "LF_BUS_PACKAGE"
 ("PACKAGE_CODE" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE UNIQUE INDEX "PK_LF_MTRPT_EC"
  ON "LF_MTRPT_EC"
 ("USERID"    ASC,
  "TASKID"    ASC,
  "SPGATE"    ASC,
  "IYMD"      ASC,
  "ERRORCODE" ASC,
  "Y"         ASC,
  "IMONTH"    ASC,
  "SPISUNCM"  ASC,
  "SVRTYPE"   ASC,
  "P1"        ASC,
  "P2"        ASC,
  "P3"        ASC,
  "P4"        ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE UNIQUE INDEX "PN_UNIQUE"
  ON "LF_PERFECT_NOTIC"
 ("TASKID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE UNIQUE INDEX "TAOCANCODEUNIQUE"
  ON "LF_BUS_TAOCAN"
 ("TAOCAN_CODE" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE UNIQUE INDEX "T_TASKIDUNIQUE"
  ON "LF_TASK"
 ("TASKID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE UNIQUE INDEX "UQ_MTTASK"
  ON "LF_MTTASK"
 ("TASKID" ASC,
  "BATCHID" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE UNIQUE INDEX "UQ_PARAM_ITEM"
  ON "LF_SYS_PARAM"
 ("PARAM_ITEM" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;

CREATE UNIQUE INDEX "USERCODEUNIQUE"
  ON "LF_SYSUSER"
 ("USER_CODE" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;



-- End of generated script for 192.169.1.174-db174-EMPDCD (db2admin)

-- Start of generated script for 192.169.1.174-db174-EMPDCD (db2admin)
--  Oct-08-2015 at 14:55:04

CREATE TRIGGER "CONTRACTSTATE_LF_CONTRACT_TRIG"
  AFTER
  UPDATE
  ON "LF_CONTRACT"
  REFERENCING
    NEW AS "O"
  FOR EACH ROW
  MODE DB2SQL
  BEGIN ATOMIC
    IF O.CONTRACT_ID<>0 THEN
      UPDATE LF_DEDUCTIONS_DISP SET CONTRACT_STATE=O.CONTRACT_STATE
        WHERE CONTRACT_ID=O.CONTRACT_ID;
      UPDATE LF_DEDUCTIONS_LIST SET CONTRACT_STATE=O.CONTRACT_STATE
        WHERE CONTRACT_ID=O.CONTRACT_ID;
    END IF;
  END;



-- End of generated script for 192.169.1.174-db174-EMPDCD (db2admin)



CREATE TRIGGER TIG_MMS_TEMPLATE
  AFTER
  UPDATE OF
    "AUDITSTATUS","SUBMITSTATUS"
  ON "MMS_TEMPLATE"
  REFERENCING
    OLD AS "OLDROW"
    NEW AS "NEWROW"
  FOR EACH ROW
  MODE DB2SQL
  BEGIN ATOMIC
    if oldrow.SUBMITSTATUS<>newrow.SUBMITSTATUS then
      UPDATE LF_TEMPLATE SET SUBMITSTATUS=newrow.SUBMITSTATUS,ERROR_CODE=
        newrow.ERRCODE
        where EMP_TEMPLID=newrow.Emp_tmplid;
    end if;
    if oldrow.AUDITSTATUS<>newrow.AUDITSTATUS then
      UPDATE LF_TEMPLATE SET AUDITSTATUS=newrow.AUDITSTATUS,SUBMITSTATUS=
        newrow.SUBMITSTATUS,ERROR_CODE=newrow.ERRCODE,SP_TEMPLID=newrow.TmplId
        where EMP_TEMPLID=newrow.Emp_tmplid;
    end if;
  end;

COMMIT;




CREATE TRIGGER "INSERT_LF_MTTASK_TRIG"
  AFTER
  INSERT
  ON "BATCH_MT_REQ"
  REFERENCING
    NEW AS "O"
  FOR EACH ROW
  MODE DB2SQL
  BEGIN ATOMIC
    DECLARE MOBLIETYPE INT;
    DECLARE UU BIGINT;
    DEClARE TIMESTAMP1 TIMESTAMP;
    DECLARE MSGLEN INT;
    --内容长度
    DECLARE QMLEN INT;
    --签名长度
    DECLARE TIMERSTATUS INT;
    set TIMESTAMP1=O.RECVTIME;
    IF O.TASKTYPE = 2 THEN
      if O.SENDTYPE > 1 then
        set MOBLIETYPE=2;
        --动态短信
      elseif O.SENDTYPE = 1 then
        set MSGLEN = COALESCE(length(O.MSG),0);
        set QMLEN = COALESCE((
          select SIGNLEN
            from xt_gate_queue
            where spgate in (
                select spgate
                  from gt_port_used
                  where userid =O.userid)
            FETCH FIRST 1 ROWS ONLY),0);
        if MSGLEN + QMLEN >70 then
          set MOBLIETYPE = 1;
          --长短信
        else
          set MOBLIETYPE = 0;
          --短信
        end if;
      end if;
      set UU=COALESCE((
        select USER_ID
          from LF_SYSUSER
          where USER_CODE=O.P1),0);
      if O.ATTIME<>'              ' then
        set TIMESTAMP1=to_date(O.ATTIME,'YYYY-MM-DD HH24:MI:SS');
        set TIMERSTATUS=1;
      else
        set TIMERSTATUS=0;
      end if;
      INSERT INTO LF_MTTASK(USER_ID,TASKID,MSG,SP_USER,TITLE,TASKTYPE,BMTTYPE,
        SENDSTATE,SUB_STATE,RE_STATE,TIMER_TIME,BUS_CODE,SUB_COUNT,EFF_COUNT,
        MOBILE_URL,SUBMITTIME,MOBILE_TYPE,MS_TYPE,TIMER_STATUS,BATCHID,ISRETRY)
        values(UU,O.TASKID,O.MSG,O.USERID,O.TITLE,O.TASKTYPE,SENDTYPE,0,2,1,
          TIMESTAMP1,O.SVRTYPE,O.TOTALNUM,O.TOTALNUM, O.REMOTEURL,O.RECVTIME,
          MOBLIETYPE,1,TIMERSTATUS,O.BATCHID,0);
    END IF;
  END;


CREATE TRIGGER UPDATETIME_LF_MTTASK_TRIG
  AFTER
  INSERT
  ON BATCH_MT_REQ_HIS
  REFERENCING
    NEW AS "O"
  FOR EACH ROW
  MODE DB2SQL
  BEGIN ATOMIC
  DEClARE TIMESTAMP1 TIMESTAMP;
	IF(O.errorcode='ACCEPTD') then
	 set TIMESTAMP1=O.RECVTIME;
	   		   if O.ATTIME<>'              ' then
			   set TIMESTAMP1=to_date(O.ATTIME,'YYYY-MM-DD HH24:MI:SS');
			   end if;
	  if O.TASKTYPE=1 then
		UPDATE LF_MTTASK SET SENDSTATE=3, STARTSENDTIME=TIMESTAMP1,ENDSENDTIME=O.SENDTIME WHERE TASKID=O.TASKID;
	  else
	   UPDATE LF_MTTASK SET SENDSTATE=3, STARTSENDTIME=TIMESTAMP1,ENDSENDTIME=O.SENDTIME WHERE BATCHID=O.BATCHID;
	  end if;
   END IF;
  END;

CREATE TRIGGER UPDATETIME_LF_MTTASK_TRIG1
  AFTER
  UPDATE
  ON BATCH_MT_REQ_HIS
  REFERENCING
    NEW AS "O"
  FOR EACH ROW
  MODE DB2SQL
  BEGIN ATOMIC
  DEClARE TIMESTAMP1 TIMESTAMP;
	IF(O.errorcode='ACCEPTD') then
	 set TIMESTAMP1=O.RECVTIME;
	   		   if O.ATTIME<>'              ' then
			   set TIMESTAMP1=to_date(O.ATTIME,'YYYY-MM-DD HH24:MI:SS');
			   end if;
	  if O.TASKTYPE=1 then
		UPDATE LF_MTTASK SET SENDSTATE=3, STARTSENDTIME=TIMESTAMP1,ENDSENDTIME=O.SENDTIME WHERE TASKID=O.TASKID;
	  else
	   UPDATE LF_MTTASK SET SENDSTATE=3, STARTSENDTIME=TIMESTAMP1,ENDSENDTIME=O.SENDTIME WHERE BATCHID=O.BATCHID;
	  end if;
   END IF;
  END;



insert into LF_BUSMANAGER (BUS_CODE, BUS_NAME, BUS_DESCRIPTION, CLASS_NAME, CORP_CODE, BUS_TYPE, RISELEVEL, CREATE_TIME, UPDATE_TIME, DEP_ID, USER_ID, STATE)
values ('M00000', '默认业务', '默认业务', null, '0', 0, -99, CURRENT TIMESTAMP, CURRENT TIMESTAMP, 1, 2, 0);


insert into LF_CLIDEP_CONN (USER_ID, DEP_CODE_THIRD, CONN_ID, DEP_ID)
values (2, '0000000000000000', 1, 1);


insert into LF_CLIENTCLASS (CC_NAME)
values ('VIP');


insert into LF_CLIENT_DEP (DEP_CODE, DEP_NAME, DEP_PCODE, DEP_LEVEL, ADD_TYPE, CORP_CODE, PARENT_ID, DEP_CODE_THIRD, DEP_PATH)
values ('0000000000000000', 'emp', '-1', 1, 0, '100001', 0, null, '1/');
insert into LF_CLIENT_DEP (DEP_ID, DEP_CODE, DEP_NAME, DEP_PCODE, DEP_LEVEL, ADD_TYPE, CORP_CODE, PARENT_ID, DEP_CODE_THIRD, DEP_PATH)
values (-10, null, 'APP未挂接用户', null, 2, null, '100001', 1, null, '1/-10/');


insert into LF_CORP (CORP_CODE, CORP_NAME, MOBILE, PHONE, ADDRESS, LINKMAN, E_MAILS, USER_NAME, LGO_URL, ISBALANCE, SUBNO_DIGIT, CUR_SUBNO)
values ('100001', '梦网科技发展有限公司', null, null, null, null, null, null, null, 0, 4, '0');


insert into LF_CORP_CONF ( CORP_CODE, PARAM_KEY, PARAM_VALUE)
values ('100001', 'dep.maxlevel', '10');
insert into LF_CORP_CONF (CORP_CODE, PARAM_KEY, PARAM_VALUE)
values ('100001', 'dep.maxchild', '100');
insert into LF_CORP_CONF (CORP_CODE, PARAM_KEY, PARAM_VALUE)
values ('100001', 'dep.maxdep', '10000');
insert into LF_CORP_CONF (CORP_CODE, PARAM_KEY, PARAM_VALUE)
values ('100001', 'dep.maxchargelevel', '5');


insert into LF_DBCONNECT (DBCON_NAME, DBCON_IP, DB_TYPE, SERVICE_NAME, DB_NAME, PORT, DB_USER, DB_PWD, CON_STR, COMMENTS, DBCONN_TYPE, CORP_CODE)
values ('EMP数据库', '192.168.1.215', 'Oracle', null, 'emp', '1521', 'emp', 'emp', 'jdbc:oracle:thin:@(description=(address=(host=192.169.1.184)(protocol=tcp)(port=1521))(connect_data=(service_name=emp)))', null, 0, null);


insert into LF_DEP (DEP_ID, DEP_NAME, DEP_CONTACT, DEP_LEVEL, DEP_CODE, DEP_RESP, SUPERIOR_ID, DEP_CODE_THIRD, CORP_CODE, DEP_DIRECT, DEP_STATE, DEP_PATH, UP_DEPID)
values (1, 'emp', '梦网科技', 1, '0000000000000000', 'emp', 0, '0000000000000000', '100001', null, 1, '1/', null);

insert into LF_SYSUSER (USER_ID, DEP_ID, USER_NAME, NAME, SEX, BIRTHDAY, MOBILE, OPH, QQ, E_MAIL, MSN, PASSWORD, USER_STATE, REG_TIME, HOLDER, COMMENTS, WORK_STATE, MANUAL_INPUT, USER_TYPE, UDG_ID, CLIENT_STATE, EMPLOYEEID, GUID, ON_LINE, CORP_CODE, P_ID, EMPLOYEE_NO, REC_STATE, HIDEPH_STATE, DEP_CODE, LASTUPDDTIM, HR_STATUS, FAX, ALLOW_LOGIN, POST_ID, PERMISSION_TYPE, USER_CODE, ISEXISTSUBNO, UP_GUID, IS_REVIEWER, DUTIES, IS_AUDITED, CONTROLFLAG, PWDUPDATETIME, PWDERRORTIMES, WORKNUMBER, FINDPWDTIMES, FINDPWDDATE, IS_CUSTOME)
values (1, 1, '无效用户', '无效用户', 1, null, null, null, null, null, null, 'b9d11b3be25f5a1a7dc8ca04cd310b28', 0, CURRENT TIMESTAMP, null, null, 1, 0, 1, null, null, null, -1, 0, null, null, null, 0, 0, null, null, 'A', null, 0, null, 2, '-1', null, null, null, null, 2, '0000', CURRENT TIMESTAMP, 0, null, null, null, null);
insert into LF_SYSUSER (USER_ID, DEP_ID, USER_NAME, NAME, SEX, BIRTHDAY, MOBILE, OPH, QQ, E_MAIL, MSN, PASSWORD, USER_STATE, REG_TIME, HOLDER, COMMENTS, WORK_STATE, MANUAL_INPUT, USER_TYPE, UDG_ID, CLIENT_STATE, EMPLOYEEID, GUID, ON_LINE, CORP_CODE, P_ID, EMPLOYEE_NO, REC_STATE, HIDEPH_STATE, DEP_CODE, LASTUPDDTIM, HR_STATUS, FAX, ALLOW_LOGIN, POST_ID, PERMISSION_TYPE, USER_CODE, ISEXISTSUBNO, UP_GUID, IS_REVIEWER, DUTIES, IS_AUDITED, CONTROLFLAG, PWDUPDATETIME, PWDERRORTIMES, WORKNUMBER, FINDPWDTIMES, FINDPWDDATE, IS_CUSTOME)
values (2, 1, 'admin', 'admin', 1, null, null, null, null, null, null, 'b9d11b3be25f5a1a7dc8ca04cd310b28', 1, CURRENT TIMESTAMP, null, null, 1, 0, 1, 0, 0, 0, 0, 0, '100001', null, null, 0, 0, null, null, 'A', null, 0, null, 2, '0', null, null, null, null, 2, '0000', CURRENT TIMESTAMP, 0, null, null, null, 1);


insert into LF_DOMINATION (DEP_ID, USER_ID)
values (1, 1);
insert into LF_DOMINATION (DEP_ID, USER_ID)
values (1, 2);

insert into LF_EMPDEP_CONN (USER_ID, DEP_CODE_THIRD, CONN_ID, DEP_ID)
values (2, '0000000000000000', 1, 1);


insert into LF_EMPLOYEE_DEP (DEP_CODE, DEP_NAME, DEP_PCODE, DEP_EFF_STATUS, DEP_LEVEL, ADD_TYPE, CORP_CODE, PARENT_ID, DEP_CODE_THIRD, DEP_PATH, UP_DEPID)
values ('0000000000000000', 'emp', '-1', 'A', 1, 0, '100001', 0, null, '1/', null);


insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (1, 'taskId', 10000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (2, 'guid', 4, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (3, 'serialNum', 0, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (4, 'orderCode', null, '0');
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (6, 'batchNumber', null, '0');
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (16, 'F_ID', 10000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (8, 'DID', 10000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (9, 'A_ID', 10000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (10, 'T_ID', 10000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (11, 'K_ID', 10000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (12, 'RIMG_ID', 10000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (13, 'WC_ID', 10000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (14, 'MSG_ID', 10000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (20, 'MT_ID', 10000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (17, 'CODE', 10000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (18, 'ID', 10000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (19, 'USER_ID', 2, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (30, 'PERFECTSIGNTIMER', null, '(完美通知 ,%s次):');
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (31, 'PERFECTSIGNNAME', null, '(完美通知 ,%s):');
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (32, 'SAMESMSDEPSIGNLEFT', null, '(');
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (33, 'SAMESMSDEPSIGNRIGHT', null, ')');
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (34, 'SAMESMSNAMESIGNLEFT', null, '(');
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (35, 'SAMESMSNAMESIGNRIGHT', null, ')');
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (36, 'BIRTHWISHNAMESIGNLEFT', null, '(');
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (37, 'BIRTHWISHNAMESIGNRIGHT', null, ')');
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (41, 'LOGRETENTIONTIME', 6, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (42, 'SPECIALCHAR', null, '91,92,93,94,123,124,125,126');
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (43, 'REPLACECHAR', null, '0,1,2,3,4,5,6,7,8,9,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127');
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (21, 'refreshTime', 30000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (22, 'timeInterval', 20000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (23, 'networkRrror', 180, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (509, 'A_ID', 10000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (510, 'T_ID', 10000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (511, 'K_ID', 10000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (512, 'RIMG_ID', 10000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (513, 'WC_ID', 10000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (514, 'MSG_ID', 10000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (520, 'MT_ID', 10000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (521, 'G_ID', 10000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (532, 'S_ID', 100, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (533, 'PAGE_ID', 100, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (550, 'GP_ID', 1, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (24, 'G_ID', 1, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (25, 'S_ID', 10000, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (26, 'GPMEM_ID', 1, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (27, 'msgcacheid', 1, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (28, 'mocacheid', 1, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (29, 'rptcacheid', 1, null);
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (38, 'BUCKLEFEETASKTIME', null, '3:30');
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (39, 'BUCKLEUPFEETASKTIME', null, '4:30');
insert into LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE)
values (40, 'ORDERDELIMITER', null, '#');


insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2125, 40, null, '修改', '2500-1030-3', '关注时的回复', '企业微信', '2500-1030', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2126, 40, null, '发布', '2500-1060-1', '自定义菜单', '企业微信', '2500-1060', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (791, 32, 1, '查看', '2400-1000-0', '静态网讯发送', '网讯发送', '2400-1000', '/wx_send.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1011, 32, 1, '查看', '2400-1080-0', '动态网讯发送', '网讯发送', '2400-1080', '/wx_senddsm.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (792, 33, 1, '查看', '2600-1010-0', '网讯编辑', '网讯管理', '2600-1010', '/wx_manger.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (793, 33, null, '新建', '2600-1010-1', '网讯编辑', '网讯管理', '2600-1010', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (794, 33, null, '删除', '2600-1010-2', '网讯编辑', '网讯管理', '2600-1010', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (795, 33, null, '编辑', '2600-1010-3', '网讯编辑', '网讯管理', '2600-1010', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (796, 33, null, '发送', '2600-1010-4', '网讯编辑', '网讯管理', '2600-1010', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2045, 33, 1, '查看', '2600-1050-0', '互动项管理', '网讯管理', '2600-1050', '/wx_trustdata.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2046, 33, null, '新建', '2600-1050-1', '互动项管理', '网讯管理', '2600-1050', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (803, 33, null, '删除', '2600-1050-2', '互动项管理', '网讯管理', '2600-1050', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (804, 33, null, '修改', '2600-1050-3', '互动项管理', '网讯管理', '2600-1050', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (811, 33, 1, '查看', '2600-1070-0', '网讯素材', '网讯管理', '2600-1070', '/wx_attached.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (812, 33, null, '新建', '2600-1070-1', '网讯素材', '网讯管理', '2600-1070', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (813, 33, null, '删除', '2600-1070-2', '网讯素材', '网讯管理', '2600-1070', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (814, 33, null, '修改', '2600-1070-3', '网讯素材', '网讯管理', '2600-1070', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1001, 33, 1, '查看', '2600-1080-0', '网讯模板', '网讯管理', '2600-1080', '/wx_template.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1002, 33, null, '新建', '2600-1080-1', '网讯模板', '网讯管理', '2600-1080', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1003, 33, null, '删除', '2600-1080-2', '网讯模板', '网讯管理', '2600-1080', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1004, 33, null, '修改', '2600-1080-3', '网讯模板', '网讯管理', '2600-1080', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (797, 33, 1, '查看', '2600-1090-0', '网讯审核', '网讯管理', '2600-1090', '/wx_check.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (991, 33, 1, '查看', '2600-1060-0', '问卷管理', '网讯管理', '2600-1060', '/wx_survey.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (992, 33, null, '新建', '2600-1060-1', '问卷管理', '网讯管理', '2600-1060', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (993, 33, null, '删除', '2600-1060-2', '问卷管理', '网讯管理', '2600-1060', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (994, 33, null, '修改', '2600-1060-3', '问卷管理', '网讯管理', '2600-1060', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (806, 34, 1, '查看', '2400-1040-0', '业务审核', '业务数据', '2400-1040', '/wx_trustcheck.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1021, 36, 1, '查看', '2700-2010-0', '网讯回复统计', '网讯查询统计', '2700-2010', '/wx_count.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1031, 36, 1, '查看', '2700-2000-0', '网讯访问统计', '网讯查询统计', '2700-2000', '/wx_visitreport.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1041, 36, 1, '查看', '2700-2100-0', '网讯发送查询', '网讯查询统计', '2700-2100', '/wx_taskreport.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2060, 36, 1, '查看', '2700-1090-0', '网讯发送统计', '网讯查询统计', '2700-1090', '/wx_wmsTaskRecord.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2085, 33, null, '复制', '2600-1010-5', '网讯编辑', '网讯管理', '2600-1010', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2086, 33, null, '设置模板', '2600-1010-6', '网讯编辑', '网讯管理', '2600-1010', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2087, 33, null, '类别管理', '2600-1050-4', '互动项管理', '网讯管理', '2600-1050', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2093, 32, null, '发送', '2400-1000-1', '静态网讯发送', '网讯发送', '2400-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2094, 32, null, '发送', '2400-1080-1', '动态网讯发送', '网讯发送', '2400-1080', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2131, 42, 1, '查看', '2800-1300-0', '监控视图', '监控视图', '2800-1300', '/mon_mainMon.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2113, 43, 1, '查看', '2900-1000-0', '实时告警详情', '监控详情', '2900-1000', '/mon_realTimeAlarm.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2114, 43, 1, '查看', '2900-1100-0', '历史告警详情', '监控详情', '2900-1100', '/mon_hisMon.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2115, 43, 1, '查看', '2900-1200-0', '通道账号监控详情', '监控详情', '2900-1200', '/mon_gateAcctMon.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2117, 43, 1, '查看', '2900-1400-0', 'SP账号监控详情', '监控详情', '2900-1400', '/mon_spAcctMon.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2118, 43, 1, '查看', '2900-1500-0', '主机监控详情', '监控详情', '2900-1500', '/mon_hostMon.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2119, 43, 1, '查看', '2900-1600-0', '程序监控详情', '监控详情', '2900-1600', '/mon_prcMon.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2120, 43, 1, '查看', '2900-1700-0', '在线用户数', '监控详情', '2900-1700', '/mon_onlineUserNum.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2121, 44, 1, '查看', '3000-1000-0', '通道账号监控设置', '监控管理', '3000-1000', '/mon_gateAcctMonCfg.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2123, 44, 1, '查看', '3000-1200-0', 'SP账号监控设置', '监控管理', '3000-1200', '/mon_spAcctMonCfg.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2128, 44, 1, '查看', '3000-1300-0', '主机监控设置', '监控管理', '3000-1300', '/mon_hostMonCfg.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2129, 44, 1, '查看', '3000-1400-0', '程序监控设置', '监控管理', '3000-1400', '/mon_prcMonCfg.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2130, 44, 1, '查看', '3000-1500-0', '在线用户数设置', '监控管理', '3000-1500', '/mon_onlUserNumCfg.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2141, 43, null, '处理', '2900-1000-1', '实时告警详情', '监控详情', '2900-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2142, 43, null, '批量处理', '2900-1000-2', '实时告警详情', '监控详情', '2900-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2132, 44, null, '设置', '3000-1000-1', '通道账号监控设置', '监控管理', '3000-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2133, 44, null, '设置', '3000-1200-1', 'SP账号监控设置', '监控管理', '3000-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2134, 44, null, '新建', '3000-1300-1', '主机监控设置', '监控管理', '3000-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2135, 44, null, '设置', '3000-1300-2', '主机监控设置', '监控管理', '3000-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2136, 44, null, '删除', '3000-1300-3', '主机监控设置', '监控管理', '3000-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2137, 44, null, '新建', '3000-1400-1', '程序监控设置', '监控管理', '3000-1400', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2138, 44, null, '设置', '3000-1400-2', '程序监控设置', '监控管理', '3000-1400', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2139, 44, null, '删除', '3000-1400-3', '程序监控设置', '监控管理', '3000-1400', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2140, 44, null, '设置', '3000-1500-1', '在线用户数设置', '监控管理', '3000-1500', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2200, 27, 1, '查看', '3500-1000-0', '网优群发历史', '数据查询', '3500-1000', '/wyq_historyRecord.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2201, 27, 1, '查看', '3500-1100-0', '网优下行记录', '数据查询', '3500-1100', '/wyq_mtRecord.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2202, 29, 1, '查看', '1500-2050-0', '网优统计报表', '统计报表', '1500-2050', '/wyq_statisticalReport.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2210, 45, 1, '查看', '3600-1000-0', '网优通道管理', '网优管理', '3600-1000', '/wy_gateManage.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2222, 45, null, '新增', '3600-1000-1', '网优通道管理', '网优管理', '3600-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2223, 45, null, '修改', '3600-1000-2', '网优通道管理', '网优管理', '3600-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2211, 45, 1, '查看', '3600-1100-0', '网优路由绑定', '网优管理', '3600-1100', '/wy_routeManage.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2231, 45, null, '绑定', '3600-1100-1', '网优路由绑定', '网优管理', '3600-1100', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2212, 45, 1, '查看', '3600-1200-0', '国家代码管理', '网优管理', '3600-1200', '/wy_areaCodeManage.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2216, 45, null, '新增', '3600-1200-1', '国家代码管理', '网优管理', '3600-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2217, 45, null, '删除', '3600-1200-2', '国家代码管理', '网优管理', '3600-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2213, 45, 1, '查看', '3600-1300-0', '携号转网错误代码', '网优管理', '3600-1300', '/wy_mnpErrCodeManage.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2224, 45, null, '修改', '3600-1300-1', '携号转网错误代码', '网优管理', '3600-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2229, 45, null, '手动添加', '3600-1300-3', '携号转网错误代码', '网优管理', '3600-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2230, 45, null, '删除', '3600-1300-4', '携号转网错误代码', '网优管理', '3600-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2214, 45, 1, '查看', '3600-1400-0', '携号转网号码管理', '网优管理', '3600-1400', '/wy_mnpManage.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2225, 45, null, '手动添加', '3600-1400-1', '携号转网号码管理', '网优管理', '3600-1400', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2226, 45, null, '文件导入', '3600-1400-2', '携号转网号码管理', '网优管理', '3600-1400', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2227, 45, null, '修改', '3600-1400-3', '携号转网号码管理', '网优管理', '3600-1400', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2228, 45, null, '删除', '3600-1400-4', '携号转网号码管理', '网优管理', '3600-1400', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2215, 45, 1, '查看', '3600-1500-0', '特殊号码管理', '网优管理', '3600-1500', '/wy_spePhoneManage.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2218, 45, null, '手动添加', '3600-1500-1', '特殊号码管理', '网优管理', '3600-1500', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2219, 45, null, '文件导入', '3600-1500-2', '特殊号码管理', '网优管理', '3600-1500', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2220, 45, null, '修改', '3600-1500-3', '特殊号码管理', '网优管理', '3600-1500', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2221, 45, null, '删除', '3600-1500-4', '特殊号码管理', '网优管理', '3600-1500', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2300, 47, 1, '查看', '3700-1000-0', '公众帐号管理', '帐号管理', '3700-1000', '/weix_acctManager.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2301, 48, 1, '查看', '3800-1000-0', '微信群发', '群发管理', '3800-1000', '/yxgl_fzqfManager.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2302, 48, 1, '查看', '3800-1100-0', '微信群发历史', '群发管理', '3800-1100', '/yxgl_sendHistory.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2303, 49, 1, '查看', '3900-1000-0', '关注回复', '内容回复管理', '3900-1000', '/weix_focusReply.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2304, 49, 1, '查看', '3900-1100-0', '默认回复', '内容回复管理', '3900-1100', '/weix_defaultReply.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2305, 49, 1, '查看', '3900-1200-0', '关键字回复', '内容回复管理', '3900-1200', '/weix_keywordReply.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2306, 49, 1, '查看', '3900-1300-0', '地理位置采集', '内容回复管理', '3900-1300', '/weix_lbsManager.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2307, 49, 1, '查看', '3900-1400-0', '自定义菜单', '内容回复管理', '3900-1400', '/weix_defineMenu.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2400, 50, 1, '查看', '4300-1000-0', '创建微站', '微站管理', '4300-1000', '/wzgl_siteManager.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2308, 51, 1, '查看', '4000-1000-0', '用户列表', '用户管理', '4000-1000', '/user_contactManager.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2309, 51, 1, '查看', '4000-1100-0', '用户增长', '用户管理', '4000-1100', '/yhzz_growReport.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2310, 51, 1, '查看', '4000-1200-0', '用户属性', '用户管理', '4000-1200', '/yhsx_userAttrReport.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2311, 51, 1, '查看', '4000-1300-0', '群组管理', '用户管理', '4000-1300', '/user_groupManager.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2312, 52, 1, '查看', '4100-1000-0', '历史消息', '客服系统', '4100-1000', '/curp_serverMsg.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2313, 53, 1, '查看', '4200-1000-0', '客服列表', '客服管理', '4200-1000', '/zxkf_custList.htm');


insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2500, 58, 1, '查看', '4500-1000-0', '在线座席', '在线座席', '4500-1000', '/zxkf_cust.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2600, 60, 1, '查看', '4700-1000-0', 'APP首页发布', '信息发布', '4700-1000', '/app_homeedit.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2601, 60, 1, '查看', '4700-1100-0', 'APP信息发送', '信息发布', '4700-1100', '/app_msgsend.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2602, 61, 1, '查看', '4700-1200-0', 'APP发送任务查询', '数据查询', '4700-1200', '/app_mttaskselect.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2603, 61, 1, '查看', '4700-1300-0', 'APP发送记录查询', '数据查询', '4700-1300', '/app_mtrecordselect.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2604, 61, 1, '查看', '4700-1400-0', 'APP上行记录查询', '数据查询', '4700-1400', '/app_morecordselect.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2608, 61, 1, '查看', '4700-1450-0', 'APP短信群发历史', '数据查询', '4700-1450', '/app_smsTaskRecord.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2605, 62, 1, '查看', '4700-1500-0', 'APP用户管理', '基础数据', '4700-1500', '/app_climanager.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2606, 62, 1, '查看', '4700-1600-0', 'APP企业帐号管理', '基础数据', '4700-1600', '/app_acctmanager.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2607, 62, 1, '查看', '4700-1700-0', 'APP客户端下载', '基础数据', '4700-1700', '/app_clidownload.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2609, 62, null, '修改', '4700-1700-1', 'APP客户端下载', '基础数据', '4700-1700', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2700, 65, 1, '查看', '4800-1000-0', '业务模板配置', '业务管理', '4800-1000', '/ydyw_busTempConf.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2701, 65, null, '配置', '4800-1000-1', '业务模板配置', '业务管理', '4800-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2702, 65, null, '修改配置', '4800-1000-2', '业务模板配置', '业务管理', '4800-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2703, 65, null, '删除', '4800-1000-3', '业务模板配置', '业务管理', '4800-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2704, 65, 1, '查看', '4800-1100-0', '业务贴尾管理', '业务管理', '4800-1100', '/ydyw_postTailMgr.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2705, 65, null, '新建', '4800-1100-1', '业务贴尾管理', '业务管理', '4800-1100', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2706, 65, null, '修改', '4800-1100-2', '业务贴尾管理', '业务管理', '4800-1100', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2707, 65, null, '删除', '4800-1100-3', '业务贴尾管理', '业务管理', '4800-1100', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2708, 65, 1, '查看', '4800-1200-0', '业务包管理', '业务管理', '4800-1200', '/ydyw_busPkgMgr.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2709, 65, null, '新建', '4800-1200-1', '业务包管理', '业务管理', '4800-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2710, 65, null, '修改', '4800-1200-2', '业务包管理', '业务管理', '4800-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2711, 65, 1, '查看', '4800-1300-0', '业务套餐管理', '业务管理', '4800-1300', '/ydyw_busTaocanMgr.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2712, 65, null, '新建', '4800-1300-1', '业务套餐管理', '业务管理', '4800-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2713, 65, null, '修改', '4800-1300-2', '业务套餐管理', '业务管理', '4800-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2714, 65, 1, '查看', '4800-1400-0', '套餐指令设置', '业务管理', '4800-1400', '/ydyw_pkgInstructionSet.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2715, 65, null, '新建', '4800-1400-1', '套餐指令设置', '业务管理', '4800-1400', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2716, 65, null, '修改', '4800-1400-2', '套餐指令设置', '业务管理', '4800-1400', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2717, 65, null, '删除', '4800-1400-3', '套餐指令设置', '业务管理', '4800-1400', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2718, 65, null, '全局设置', '4800-1400-4', '套餐指令设置', '业务管理', '4800-1400', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2719, 67, 1, '查看', '4900-1000-0', '客户签约管理', '签约计费查询', '4900-1000', '/ydyw_crmSignQuery.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2720, 67, null, '签约', '4900-1000-1', '客户签约管理', '签约计费查询', '4900-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2721, 67, null, '编辑', '4900-1000-2', '客户签约管理', '签约计费查询', '4900-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2722, 67, null, '恢复/取消签约', '4900-1000-3', '客户签约管理', '签约计费查询', '4900-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2723, 67, 1, '查看', '4900-1100-0', '客户计费查询', '签约计费查询', '4900-1100', '/ydyw_crmBillQuery.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2724, 67, 1, '查看', '4900-1200-0', '客户退费管理', '签约计费查询', '4900-1200', '/ydyw_crmRfMgr.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2725, 67, null, '退费', '4900-1200-1', '客户退费管理', '签约计费查询', '4900-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2726, 69, 1, '查看', '5000-1100-0', '机构计费统计', '签约统计报表', '5000-1100', '/ydyw_depBillQuery.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2727, 69, 1, '查看', '5000-1200-0', '业务套餐计费统计', '签约统计报表', '5000-1200', '/ydyw_chargeStatsRpt.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (293, 11, null, '删除', '1700-1500-2', '个人群组', '员工通讯录管理', '1700-1500', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (294, 11, null, '修改', '1700-1500-3', '个人群组', '员工通讯录管理', '1700-1500', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (201, 10, 1, '查看', '1600-1000-0', '机构管理', '操作员管理', '1600-1000', '/opt_department.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (295, 11, null, '文件导入', '1700-1500-4', '个人群组', '员工通讯录管理', '1700-1500', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (202, 10, null, '新建', '1600-1000-1', '机构管理', '操作员管理', '1600-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (296, 11, null, '手动输入', '1700-1500-5', '个人群组', '员工通讯录管理', '1700-1500', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (301, 10, 1, '查看', '1600-1800-0', '操作日志', '操作员管理', '1600-1800', '/opl_OprateMonitor.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (306, 28, 1, '查看', '1800-1200-0', '通道账号监控', '网关运行监控', '1800-1200', '/mon_accountGateMonitor.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (336, 13, 1, '查看', '1900-1200-0', '号段管理', '网关前端配置', '1900-1200', '/seg_phoneNo.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (338, 13, null, '修改', '1900-1200-3', '号段管理', '网关前端配置', '1900-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (203, 10, null, '删除', '1600-1000-2', '机构管理', '操作员管理', '1600-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (341, 13, 1, '查看', '1900-1300-0', '短彩SP账户', '网关前端配置', '1900-1300', '/pag_userData.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (342, 13, null, '新建', '1900-1300-1', '短彩SP账户', '网关前端配置', '1900-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (344, 13, null, '修改', '1900-1300-3', '短彩SP账户', '网关前端配置', '1900-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (346, 13, 1, '查看', '1900-1400-0', '账户通道配置', '网关前端配置', '1900-1400', '/par_route.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (347, 13, null, '新建', '1900-1400-1', '账户通道配置', '网关前端配置', '1900-1400', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (348, 13, null, '删除', '1900-1400-2', '账户通道配置', '网关前端配置', '1900-1400', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (349, 13, null, '修改', '1900-1400-3', '账户通道配置', '网关前端配置', '1900-1400', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (351, 13, 1, '查看', '1900-1500-0', '账户充值/回收', '网关前端配置', '1900-1500', '/w_userfee.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (352, 13, null, '充值', '1900-1500-1', '账户充值/回收', '网关前端配置', '1900-1500', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (353, 13, null, '回收', '1900-1500-2', '账户充值/回收', '网关前端配置', '1900-1500', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (355, 13, null, '查看日志', '1900-1500-b', '账户充值/回收', '网关前端配置', '1900-1500', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (500, 14, 1, '查看', '2000-1000-0', '参数属性管理', '网关后端配置', '2000-1000', '/gw_paramConf.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (511, 14, 1, '查看', '2000-1100-0', '网关运行参数配置', '网关后端配置', '2000-1100', '/gat_webgate.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (521, 14, 1, '查看', '2000-1500-0', '通道运行参数配置', '网关后端配置', '2000-1500', '/gat_spgate.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (531, 14, 1, '查看', '2000-1300-0', '通道管理', '网关后端配置', '2000-1300', '/pas_passage.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (541, 14, 1, '查看', '2000-1400-0', '通道账户管理', '网关后端配置', '2000-1400', '/gat_userdata.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (280, 20, null, '权限绑定', '1580-1300-1', '通讯录权限管理', '客户通讯录管理', '1580-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (277, 20, 1, '查看', '1580-1300-0', '通讯录权限管理', '客户通讯录管理', '1580-1300', '/cli_permissions.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (278, 20, 1, '查看', '1580-1400-0', '个人群组', '客户通讯录管理', '1580-1400', '/grp_cliGroupManage.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (204, 10, null, '修改', '1600-1000-3', '机构管理', '操作员管理', '1600-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (211, 10, 1, '查看', '1600-1300-0', '角色设置', '操作员管理', '1600-1300', '/opt_role.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (212, 10, null, '新建', '1600-1300-1', '角色设置', '操作员管理', '1600-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (213, 10, null, '删除', '1600-1300-2', '角色设置', '操作员管理', '1600-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (214, 10, null, '修改', '1600-1300-3', '角色设置', '操作员管理', '1600-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (216, 10, 1, '查看', '1600-1200-0', '操作员管理', '操作员管理', '1600-1200', '/opt_sysuser.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (217, 10, null, '新建', '1600-1200-1', '操作员管理', '操作员管理', '1600-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (218, 10, null, '修改', '1600-1200-3', '操作员管理', '操作员管理', '1600-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (221, 10, 1, '查看', '1600-1500-0', '操作员角色管理', '操作员管理', '1600-1500', '/u_sysuserRoles.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (222, 10, null, '修改', '1600-1500-3', '操作员角色管理', '操作员管理', '1600-1500', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (226, 10, 1, '查看', '1600-1600-0', '个人信息管理', '操作员管理', '1600-1600', '/u_editPersonalInfo.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (271, 11, 1, '查看', '1700-1000-0', '员工通讯录', '员工通讯录管理', '1700-1000', '/epl_employeeBook.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (572, 11, null, '新建', '1700-1000-1', '员工通讯录', '员工通讯录管理', '1700-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (573, 11, null, '删除', '1700-1000-2', '员工通讯录', '员工通讯录管理', '1700-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (574, 11, null, '修改', '1700-1000-3', '员工通讯录', '员工通讯录管理', '1700-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (578, 11, null, '转为操作员', '1700-1000-4', '员工通讯录', '员工通讯录管理', '1700-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (276, 20, 1, '查看', '1580-1200-0', '客户通讯录', '客户通讯录管理', '1580-1200', '/cli_addrBook.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (575, 20, null, '新建', '1580-1200-1', '客户通讯录', '客户通讯录管理', '1580-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (576, 20, null, '删除', '1580-1200-2', '客户通讯录', '客户通讯录管理', '1580-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (577, 20, null, '修改', '1580-1200-3', '客户通讯录', '客户通讯录管理', '1580-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (281, 11, 1, '查看', '1700-1300-0', '自定义通讯录', '员工通讯录管理', '1700-1300', '/eqa_custormAddrBook.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (282, 11, null, '新建', '1700-1300-1', '自定义通讯录', '员工通讯录管理', '1700-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (284, 20, null, '删除', '1580-1300-2', '通讯录权限管理', '客户通讯录管理', '1580-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (318, 8, 1, '查看', '1350-1350-0', '模板审批', '审批管理', '1350-1350', '/tef_smsTemInfoReview.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (319, 8, 1, '查看', '1350-1400-0', '彩信模板审批', '审批管理', '1350-1400', '/ir_mmsTemInfoReview.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (583, 15, 1, '查看', '1260-1000-0', '电子工资单', '移动财务', '1260-1000', '/ycw_electronicPayroll.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (584, 15, 1, '查看', '1260-1100-0', '报销提醒', '移动财务', '1260-1100', '/ycw_reimbursementRemind.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (585, 15, 1, '查看', '1260-1200-0', '回款通知', '移动财务', '1260-1200', '/ycw_backFundsNotice.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (283, 11, null, '删除', '1700-1300-2', '自定义通讯录', '员工通讯录管理', '1700-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (286, 11, 1, '查看', '1700-1400-0', '通讯录权限管理', '员工通讯录管理', '1700-1400', '/epl_permissions.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (287, 11, null, '权限绑定', '1700-1400-1', '通讯录权限管理', '员工通讯录管理', '1700-1400', null);


insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (288, 11, null, '删除', '1700-1400-2', '通讯录权限管理', '员工通讯录管理', '1700-1400', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (545, 21, 1, '查看', '1000-1400-0', '短信助手', '短信助手', '1000-1400', '/im_iframe.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (3, 1, 1, '查看', '1050-1050-0', '不同内容群发', '企业短信', '1050-1050', '/dsm_ssendDiffSMS.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (16, 22, 1, '查看', '2300-1000-0', '客户群组群发', '客服短信', '2300-1000', '/kfs_sendClientSMS.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (21, 2, 1, '查看', '1100-1000-0', '静态彩信发送', '彩信应用', '1100-1000', '/smm_sameMms.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (31, 2, 1, '查看', '1100-1900-0', '定时信息查看', '彩信应用', '1100-1900', '/mmt_mmsTimerTask.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (550, 4, 1, '查看', '1203-1000-0', '上行业务管理', '业务管理', '1203-1000', '/eng_moService.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (551, 4, 1, '查看', '1203-1200-0', '下行业务管理', '业务管理', '1203-1200', '/eng_mtService.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (552, 4, null, '新建', '1203-1200-1', '下行业务管理', '业务管理', '1203-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (553, 4, null, '删除', '1203-1200-2', '下行业务管理', '业务管理', '1203-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (554, 4, null, '业务信息', '1203-1200-24', '下行业务管理', '业务管理', '1203-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (570, 4, null, '触发条件', '1203-1200-30', '下行业务管理', '业务管理', '1203-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (571, 4, null, '步骤管理', '1203-1200-29', '下行业务管理', '业务管理', '1203-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (555, 4, 1, '查看', '1203-1300-0', '下行业务监控', '业务管理', '1203-1300', '/eng_timerControl.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (556, 4, null, '删除', '1203-1300-2', '下行业务监控', '业务管理', '1203-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (557, 4, null, '更改状态', '1203-1300-33', '下行业务监控', '业务管理', '1203-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (558, 4, 1, '查看', '1203-1400-0', '业务服务日志', '业务管理', '1203-1400', '/eng_servicelog.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (71, 8, 1, '查看', '1400-0900-0', '短信模板管理', '参数维护', '1400-0900', '/tem_smsTemplate.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (291, 11, 1, '查看', '1700-1500-0', '个人群组', '员工通讯录管理', '1700-1500', '/grp_groupManage.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (292, 11, null, '新建', '1700-1500-1', '个人群组', '员工通讯录管理', '1700-1500', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (78, 2, null, '删除', '1100-1500-2', '模板编辑', '彩信应用', '1100-1500', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (676, 1, 1, '查看', '1050-1060-0', '员工相同内容发送', '企业短信', '1050-1060', '/per_sendNot.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (72, 8, null, '新建', '1400-0900-1', '短信模板管理', '参数维护', '1400-0900', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (73, 8, null, '删除', '1400-0900-2', '短信模板管理', '参数维护', '1400-0900', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (74, 8, null, '修改', '1400-0900-3', '短信模板管理', '参数维护', '1400-0900', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (76, 2, 1, '查看', '1100-1500-0', '模板编辑', '彩信应用', '1100-1500', '/tem_mmsTemplate.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (77, 2, null, '新建', '1100-1500-1', '模板编辑', '彩信应用', '1100-1500', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (81, 2, 1, '查看', '1100-1700-0', '彩信素材', '彩信应用', '1100-1700', '/mat_mmsMaterial.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (82, 2, null, '新建', '1100-1700-1', '彩信素材', '彩信应用', '1100-1700', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (83, 2, null, '删除', '1100-1700-2', '彩信素材', '彩信应用', '1100-1700', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (84, 2, null, '修改', '1100-1700-3', '彩信素材', '彩信应用', '1100-1700', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (630, 25, 1, '查看', '1290-1000-1', '创建投票', '移动投票', '1290-1000', '/wx_votecreate.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (91, 6, 1, '查看', '1900-1230-0', '关键字设置', '信息安全', '1900-1230', '/key_keywordSvt.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (92, 6, null, '新建', '1900-1230-1', '关键字设置', '信息安全', '1900-1230', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (93, 6, null, '删除', '1900-1230-2', '关键字设置', '信息安全', '1900-1230', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (94, 6, null, '修改', '1900-1230-3', '关键字设置', '信息安全', '1900-1230', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (96, 6, 1, '查看', '1900-1260-0', '短信黑名单', '信息安全', '1900-1260', '/bla_blacklistSvt.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (97, 6, null, '新建', '1900-1260-1', '短信黑名单', '信息安全', '1900-1260', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (98, 6, null, '删除', '1900-1260-2', '短信黑名单', '信息安全', '1900-1260', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (99, 6, null, '修改', '1900-1260-3', '短信黑名单', '信息安全', '1900-1260', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (101, 8, 1, '查看', '1400-1300-0', '尾号管理', '参数维护', '1400-1300', '/tai_subno.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (102, 8, null, '绑定子号', '1400-1300-1', '尾号管理', '参数维护', '1400-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (103, 8, null, '删除', '1400-1300-2', '尾号管理', '参数维护', '1400-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (104, 8, null, '修改', '1400-1300-3', '尾号管理', '参数维护', '1400-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (106, 8, 1, '查看', '1400-1400-0', '业务类型管理', '参数维护', '1400-1400', '/bit_busType.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (107, 8, null, '新建', '1400-1400-1', '业务类型管理', '参数维护', '1400-1400', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (677, 1, 1, '查看', '1050-1070-0', '员工不同内容发送', '企业短信', '1050-1070', '/per_sendNot.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (109, 8, null, '修改', '1400-1400-3', '业务类型管理', '参数维护', '1400-1400', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (678, 1, 1, '查看', '1050-1080-0', '客户相同内容发送', '企业短信', '1050-1080', '/per_sendNot.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (679, 1, 1, '查看', '1050-1090-0', '客户不同内容发送', '企业短信', '1050-1090', '/per_sendNot.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (690, 28, 1, '查看', '1800-1400-0', 'SP账号监控', '网关运行监控', '1800-1400', '/mon_accountAccessMonitor.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (691, 28, 1, '查看', '1800-1500-0', '系统运行监控', '网关运行监控', '1800-1500', '/mon_systemRuntimerMonitor.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (110, 8, 1, '查看', '1400-1500-0', '数据源配置', '参数维护', '1400-1500', '/dat_datasourceConf.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (111, 8, null, '新建', '1400-1500-1', '数据源配置', '参数维护', '1400-1500', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (112, 8, null, '删除', '1400-1500-2', '数据源配置', '参数维护', '1400-1500', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (113, 8, null, '修改', '1400-1500-3', '数据源配置', '参数维护', '1400-1500', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (121, 27, 1, '查看', '1520-1000-0', '系统上行记录', '数据查询', '1520-1000', '/que_sysMoRecord.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (126, 27, 1, '查看', '1520-1200-0', '系统下行记录', '数据查询', '1520-1200', '/que_sysMtRecord.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (656, 22, 1, '查看', '2300-1100-0', '相同内容群发', '客服短信', '2300-1100', '/ssm_ssendBatchSMS.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (669, 5, 1, '查看', '1050-1300-0', '完美通知发送', '完美通知', '1050-1300', '/per_sendNot.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (712, 27, 1, '查看', '1520-1900-0', '下行滞留记录', '数据查询', '1520-1900', '/r_remainMtRecord.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (708, 10, null, '重置密码', '1600-1200-5', '操作员管理', '操作员管理', '1600-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (156, 29, 1, '查看', '1500-1601-0', '运营商统计报表', '统计报表', '1500-1601', '/rep_spisuncmMtReport.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (660, 30, null, '新建', '1750-1000-1', '企业管理', '企业管理', '1750-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (631, 25, 1, '查看', '1290-1100-1', '投票管理', '移动投票', '1290-1100', '/wx_votemanger.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (632, 25, 1, '查看', '1290-1200-1', '投票统计', '移动投票', '1290-1200', '/wx_votecount.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (661, 30, null, '修改', '1750-1000-3', '企业管理', '企业管理', '1750-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (624, 20, null, '删除', '1580-1400-2', '个人群组', '客户通讯录管理', '1580-1400', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (623, 20, null, '重命名', '1580-1400-3', '个人群组', '客户通讯录管理', '1580-1400', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (626, 20, null, '添加成员', '1580-1400-4', '个人群组', '客户通讯录管理', '1580-1400', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (627, 20, null, '移除成员', '1580-1400-5', '个人群组', '客户通讯录管理', '1580-1400', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (625, 20, null, '新建', '1580-1400-1', '个人群组', '客户通讯录管理', '1580-1400', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (636, 30, 1, '查看', '1750-1000-0', '企业管理', '企业管理', '1750-1000', '/cor_manager.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (637, 30, 1, '查看', '1750-1100-0', '短信发送账户绑定', '企业管理', '1750-1100', '/cor_corpSp.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (638, 11, 1, '查看', '1700-1620-0', '职位管理', '员工通讯录管理', '1700-1620', '/epl_position.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (709, 27, 1, '查看', '1520-1700-0', '群发历史查询', '数据查询', '1520-1700', '/smt_smsTaskRecord.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (640, 11, null, '新建', '1700-1620-1', '职位管理', '员工通讯录管理', '1700-1620', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (641, 11, null, '删除', '1700-1620-2', '职位管理', '员工通讯录管理', '1700-1620', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (642, 11, null, '修改', '1700-1620-3', '职位管理', '员工通讯录管理', '1700-1620', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (662, 30, null, '管理', '1750-1000-4', '企业管理', '企业管理', '1750-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (713, 8, 1, '查看', '1400-1600-0', '自定参数管理', '参数维护', '1400-1600', '/par_selParam.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (646, 2, 1, '查看', '1100-1800-0', '发送信息查看', '彩信应用', '1100-1800', '/mmt_mmsTask.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (710, 1, 1, '查看', '1050-1200-0', '群发任务查看', '企业短信', '1050-1200', '/smt_smsSendedBox.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (711, 22, 1, '查看', '2300-1400-0', '群发任务查看', '客服短信', '2300-1400', '/smt_smsSendedBox2.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (714, 8, null, '新增参数定义', '1400-1600-1', '自定参数管理', '参数维护', '1400-1600', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (650, 8, 1, '查看', '1350-1230-0', '信息审批', '审批管理', '1350-1230', '/msg_smsInfoReview.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (651, 8, 1, '查看', '1350-1250-0', '彩信审批', '审批管理', '1350-1250', '/ir_mmsInfoReview.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (639, 20, 1, '查看', '1580-1250-0', '客户属性管理', '客户通讯录管理', '1580-1250', '/cli_custFieldManger.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (647, 20, null, '添加属性', '1580-1250-1', '客户属性管理', '客户通讯录管理', '1580-1250', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (652, 29, 1, '查看', '1500-2001-0', '操作员统计报表', '统计报表', '1500-2001', '/rep_sysUserReport.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (663, 30, null, '新建', '1750-1100-1', '短信发送账户绑定', '企业管理', '1750-1100', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (715, 29, 1, '查看', '1500-1901-0', '机构统计报表', '统计报表', '1500-1901', '/rep_sysDepReport.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (655, 22, 1, '查看', '2300-1200-0', '不同内容群发', '客服短信', '2300-1200', '/dsm_sendDiffSMS.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (664, 30, null, '激活/失效', '1750-1100-2', '短信发送账户绑定', '企业管理', '1750-1100', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (665, 1, 1, '查看', '1050-1000-0', '相同内容群发', '企业短信', '1050-1000', '/ssm_sendBatchSMS.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (716, 8, null, '修改参数定义', '1400-1600-2', '自定参数管理', '参数维护', '1400-1600', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (667, 14, null, '新建', '2000-1300-1', '通道管理', '网关后端配置', '2000-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (668, 14, null, '修改', '2000-1300-3', '通道管理', '网关后端配置', '2000-1300', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (670, 5, 1, '查看', '1050-1400-0', '完美通知查看', '完美通知', '1050-1400', '/per_queryNotHis.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (671, 29, 1, '查看', '1500-1701-0', 'SP账号统计报表', '统计报表', '1500-1701', '/rep_spMtReport.htm');


insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (717, 8, null, '修改参数值', '1400-1600-3', '自定参数管理', '参数维护', '1400-1600', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (648, 20, null, '修改属性', '1580-1250-2', '客户属性管理', '客户通讯录管理', '1580-1250', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (649, 20, null, '删除属性', '1580-1250-3', '客户属性管理', '客户通讯录管理', '1580-1250', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (659, 20, null, '添加属性值', '1580-1250-4', '客户属性管理', '客户通讯录管理', '1580-1250', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (674, 20, null, '删除属性值', '1580-1250-5', '客户属性管理', '客户通讯录管理', '1580-1250', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (675, 10, null, '转为员工', '1600-1200-4', '操作员管理', '操作员管理', '1600-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (718, 8, null, '删除参数值', '1400-1600-4', '自定参数管理', '参数维护', '1400-1600', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (719, 8, null, '新增参数值', '1400-1600-5', '自定参数管理', '参数维护', '1400-1600', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (721, 29, 1, '查看', '1500-2100-0', '自定参数统计报表', '统计报表', '1500-2100', '/rep_dynParamReport.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (722, 10, 1, '查看', '1600-1320-0', '充值/回收管理', '操作员管理', '1600-1320', '/cha_balanceMgr.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (723, 10, 1, '查看', '1600-1700-0', '充值/回收日志', '操作员管理', '1600-1700', '/cha_balanceLog.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (724, 10, null, '充值', '1600-1320-1', '充值/回收管理', '操作员管理', '1600-1320', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (725, 10, null, '回收', '1600-1320-2', '充值/回收管理', '操作员管理', '1600-1320', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (726, 13, 1, '查看', '1900-1350-0', '彩信SP账户', '网关前端配置', '1900-1350', '/w_mmsUserData.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (728, 13, null, '新建', '1900-1350-1', '彩信SP账户', '网关前端配置', '1900-1350', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (729, 13, null, '修改', '1900-1350-2', '彩信SP账户', '网关前端配置', '1900-1350', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (740, 13, 1, '查看', '1900-1450-0', 'SP账户绑定', '网关前端配置', '1900-1450', '/pgb_spBind.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (741, 11, 1, '查看', '1050-1055-0', '手工群发', '企业短信', '1050-1055', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (742, 10, 1, '查看', '1600-1450-0', '企业快快单发', '操作员管理', '1600-1450', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (743, 8, 1, '查看', '1350-1450-0', '审批提醒', '审批管理', '1350-1450', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (750, 10, null, '查看', '1600-1900-0', '运营商余额查看', '操作员管理', '1600-1900', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (755, 10, null, '初始化密码', '1600-1200-6', '操作员管理', '操作员管理', '1600-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (757, 27, 1, '查看', '1520-1800-0', '个人收件箱', '数据查询', '1520-1800', '/inb_reciveBox.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (758, 8, 1, '查看', '1400-1700-0', '模块参数配置', '参数维护', '1400-1700', '/mep_menuParamConfig.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (759, 8, null, '全局参数配置', '1400-1700-1', '模块参数配置', '参数维护', '1400-1700', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (760, 8, null, '审核参数配置', '1400-1700-2', '模块参数配置', '参数维护', '1400-1700', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (770, 16, 1, '查看', '1050-1700-0', '生日祝福管理', '员工生日祝福', '1050-1700', '/bir_birthdaySendEMP.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (771, 3, 1, '查看', '2300-1500-0', '生日祝福管理', '客户生日祝福', '2300-1500', '/bir_birthdaySendClient.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (772, 10, 1, '查看', '1600-1350-0', '高级安全设置', '操作员管理', '1600-1350', '/ctr_securectrl.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (773, 10, null, '注销/恢复', '1600-1200-7', '操作员管理', '操作员管理', '1600-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (774, 10, null, '新增', '1600-1350-1', '高级安全设置', '操作员管理', '1600-1350', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (775, 10, null, '修改', '1600-1350-2', '高级安全设置', '操作员管理', '1600-1350', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (776, 10, null, '删除', '1600-1350-3', '高级安全设置', '操作员管理', '1600-1350', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (780, 8, 1, '查看', '1350-1500-0', '审批流程管理', '审批管理', '1350-1500', '/p_bindFlow.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (781, 10, null, '查看', '1600-2000-0', '手机号码可见', '操作员管理', '1600-2000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (785, 6, 1, '查看', '1900-1280-0', '彩信黑名单', '信息安全', '1900-1280', '/bla_mmsblacklistSvt.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (786, 6, null, '新建', '1900-1280-1', '彩信黑名单', '信息安全', '1900-1280', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (787, 6, null, '删除', '1900-1280-2', '彩信黑名单', '信息安全', '1900-1280', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (788, 6, null, '修改', '1900-1280-3', '彩信黑名单', '信息安全', '1900-1280', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (783, 29, 1, '查看', '1500-2200-0', '错误码统计报表', '统计报表', '1500-2200', '/r_errrorCodeReport.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (784, 29, 1, '查看', '1500-2300-0', '对账统计报表', '统计报表', '1500-2300', '/r_accountCheckReport.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (789, 2, 1, '查看', '1100-1100-0', '动态彩信发送', '彩信应用', '1100-1100', '/dmm_sendDynMMS.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (790, 23, 1, '查看', '1650-1000-0', '公告列表', '公告', '1650-1000', '/not_notice.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1051, 11, 1, '查看', '1700-1200-0', '员工机构管理', '员工通讯录管理', '1700-1200', '/epl_empDep.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1052, 11, null, '新建', '1700-1200-1', '员工机构管理', '员工通讯录管理', '1700-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1053, 11, null, '删除', '1700-1200-2', '员工机构管理', '员工通讯录管理', '1700-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1054, 11, null, '修改', '1700-1200-3', '员工机构管理', '员工通讯录管理', '1700-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1055, 11, null, '调整', '1700-1200-8', '员工机构管理', '员工通讯录管理', '1700-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1056, 11, null, '合并', '1700-1200-9', '员工机构管理', '员工通讯录管理', '1700-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1057, 11, null, '排序', '1700-1200-10', '员工机构管理', '员工通讯录管理', '1700-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1061, 1, null, '模板内容', '1050-1050-4', '不同内容群发', '企业短信', '1050-1050', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1062, 1, null, '手动输入内容', '1050-1050-5', '不同内容群发', '企业短信', '1050-1050', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1063, 1, null, '模板内容', '1050-1000-4', '相同内容群发', '企业短信', '1050-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1064, 1, null, '手动输入内容', '1050-1000-5', '相同内容群发', '企业短信', '1050-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1065, 1, null, '手动输入号码', '1050-1000-6', '相同内容群发', '企业短信', '1050-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1066, 1, null, '文件导入', '1050-1000-7', '相同内容群发', '企业短信', '1050-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1067, 1, null, '选择人员', '1050-1000-8', '相同内容群发', '企业短信', '1050-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1068, 22, null, '模板内容', '2300-1100-4', '相同内容群发', '客服短信', '2300-1100', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1069, 22, null, '手动输入内容', '2300-1100-5', '相同内容群发', '客服短信', '2300-1100', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1070, 22, null, '手动输入号码', '2300-1100-6', '相同内容群发', '客服短信', '2300-1100', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1071, 22, null, '文件导入', '2300-1100-7', '相同内容群发', '客服短信', '2300-1100', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1072, 22, null, '模板内容', '2300-1200-4', '不同内容群发', '客服短信', '2300-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1073, 22, null, '手动输入内容', '2300-1200-5', '不同内容群发', '客服短信', '2300-1200', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1081, 8, 1, '查看', '1350-1220-0', '审核流程管理', '审批管理', '1350-1220', '/aud_auditpro.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1082, 8, 1, '新建', '1350-1220-1', '审核流程管理', '审批管理', '1350-1220', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1083, 8, 1, '删除', '1350-1220-2', '审核流程管理', '审批管理', '1350-1220', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1084, 8, 1, '修改', '1350-1220-3', '审核流程管理', '审批管理', '1350-1220', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2051, 13, 1, '查看', '1900-1500-0', '指令路由配置', '网关前端配置', '1900-1500', '/pag_orderBind.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2052, 13, null, '新增', '1900-1500-1', '指令路由配置', '网关前端配置', '1900-1500', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2053, 13, null, '修改', '1900-1500-2', '指令路由配置', '网关前端配置', '1900-1500', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2054, 13, null, '删除', '1900-1500-3', '指令路由配置', '网关前端配置', '1900-1500', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2071, 27, 1, '查看', '1520-1900-0', '短信滞留记录', '数据查询', '1520-1900', '/rep_remainMtRecord.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2095, 29, null, 'EMP发送', '1500-1901-1', '机构统计报表', '统计报表', '1500-1901', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2096, 29, null, 'HTTP接入', '1500-1901-2', '机构统计报表', '统计报表', '1500-1901', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2097, 29, null, 'EMP应用', '1500-1701-1', 'SP账号统计报表', '统计报表', '1500-1701', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2098, 29, null, 'EMP接入', '1500-1701-2', 'SP账号统计报表', '统计报表', '1500-1701', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2099, 29, 1, '查看', '1500-2010-0', '业务类型统计报表', '统计报表', '1500-2010', '/rep_busReport.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2100, 29, 1, '查看', '1500-2020-0', '区域统计报表', '统计报表', '1500-2020', '/rep_areaReport.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2101, 41, 1, '查看', '1550-1000-0', '总体发送趋势', '数据分析', '1550-1000', '/grpt_totalGreport.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2102, 41, 1, '查看', '1550-1100-0', '区域发送对比', '数据分析', '1550-1100', '/grpt_areaGreport.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2103, 41, 1, '查看', '1550-1200-0', 'SP账号发送对比', '数据分析', '1550-1200', '/grpt_spuserGreport.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2104, 41, 1, '查看', '1550-1300-0', '业务类型发送对比', '数据分析', '1550-1300', '/grpt_busGreport.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2105, 29, null, 'EMP发送', '1500-2010-1', '业务类型统计报表', '统计报表', '1500-2010', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2106, 29, null, 'HTTP接入', '1500-2010-2', '业务类型统计报表', '统计报表', '1500-2010', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2107, 4, 1, '查看', '1203-1230-0', '上行业务记录', '业务管理', '1203-1230', '/eng_serMoTask.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2108, 8, 1, '查看', '1400-1800-1', '个性化界面设置', '参数维护', '1400-1800', '/par_indexCfg.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2109, 4, 1, '查看', '1203-1260-0', '下行业务记录', '业务管理', '1203-1260', '/eng_serMtTask.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2027, 4, null, '新建', '1203-1000-1', '上行业务管理', '业务管理', '1203-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2028, 4, null, '删除', '1203-1000-2', '上行业务管理', '业务管理', '1203-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2029, 4, null, '业务信息', '1203-1000-3', '上行业务管理', '业务管理', '1203-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2030, 4, null, '步骤管理', '1203-1000-4', '上行业务管理', '业务管理', '1203-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2127, 4, null, '设置', '1203-1000-5', '上行业务管理', '业务管理', '1203-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2145, 29, null, 'DB接入', '1500-1901-3', '机构统计报表', '统计报表', '1500-1901', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2146, 29, null, '直连接入', '1500-1901-4', '机构统计报表', '统计报表', '1500-1901', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2147, 29, null, 'DB接入', '1500-2010-3', '业务类型统计报表', '统计报表', '1500-2010', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2148, 29, null, '直连接入', '1500-2010-4', '业务类型统计报表', '统计报表', '1500-2010', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1085, 6, null, '导出', '1900-1260-4', '短信黑名单', '信息安全', '1900-1260', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1086, 6, null, '导出', '1900-1280-4', '彩信黑名单', '信息安全', '1900-1280', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1087, 11, null, '导出', '1700-1000-5', '员工通讯录', '员工通讯录管理', '1700-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1088, 20, null, '导出', '1580-1200-5', '客户通讯录', '客户通讯录管理', '1580-1200', null);


insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (1089, 10, null, '企业所有机构总余额', '1600-1320-3', '充值/回收管理', '操作员管理', '1600-1320', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2001, 40, 1, '查看', '2500-1000-0', '公众帐号管理', '企业微信', '2500-1000', '/cwc_acctmanager.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2002, 40, null, '新建', '2500-1000-1', '公众帐号管理', '企业微信', '2500-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2003, 40, null, '删除', '2500-1000-2', '公众帐号管理', '企业微信', '2500-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2004, 40, null, '修改', '2500-1000-3', '公众帐号管理', '企业微信', '2500-1000', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2011, 40, 1, '查看', '2500-1010-0', '回复管理', '企业微信', '2500-1010', '/cwc_replymanger.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2012, 40, null, '新建', '2500-1010-1', '回复管理', '企业微信', '2500-1010', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2013, 40, null, '删除', '2500-1010-2', '回复管理', '企业微信', '2500-1010', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2014, 40, null, '修改', '2500-1010-3', '回复管理', '企业微信', '2500-1010', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2021, 40, 1, '查看', '2500-1020-0', '默认回复', '企业微信', '2500-1020', '/cwc_defaultrep.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2022, 40, null, '新建', '2500-1020-1', '默认回复', '企业微信', '2500-1020', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2023, 40, null, '删除', '2500-1020-2', '默认回复', '企业微信', '2500-1020', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2024, 40, null, '修改', '2500-1020-3', '默认回复', '企业微信', '2500-1020', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2031, 40, 1, '查看', '2500-1030-0', '关注时的回复', '企业微信', '2500-1030', '/cwc_focusrep.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2032, 40, null, '新建', '2500-1030-1', '关注时的回复', '企业微信', '2500-1030', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2041, 40, 1, '查看', '2500-1040-0', '上行消息', '企业微信', '2500-1040', '/cwc_msgrep.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2042, 40, null, '删除', '2500-1040-2', '上行消息', '企业微信', '2500-1040', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2043, 40, null, '回复', '2500-1040-4', '上行消息', '企业微信', '2500-1040', null);
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2081, 40, 1, '查看', '2500-1050-0', '微信关注列表', '企业微信', '2500-1050', '/cwc_usermanger.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2090, 40, 1, '查看', '2500-1060-0', '自定义菜单', '企业微信', '2500-1060', '/dfm_definemenu.htm');
insert into LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
values (2124, 40, null, '删除', '2500-1030-2', '关注时的回复', '企业微信', '2500-1030', null);


insert into LF_ROLES (ROLE_ID, ROLE_NAME, COMMENTS, CORP_CODE, CREATE_GUID)
values (1, 'super', '111', null, null);
insert into LF_ROLES (ROLE_ID, ROLE_NAME, COMMENTS, CORP_CODE, CREATE_GUID)
values (2, '系统总管理员', '系统总管理员', null, null);
insert into LF_ROLES (ROLE_ID, ROLE_NAME, COMMENTS, CORP_CODE, CREATE_GUID)
values (3, '内置角色', '该角色不使用', null, null);
insert into LF_ROLES (ROLE_ID, ROLE_NAME, COMMENTS, CORP_CODE, CREATE_GUID)
values (4, '超级管理员', null, '100001', 0);
insert into LF_ROLES (ROLE_ID, ROLE_NAME, COMMENTS, CORP_CODE, CREATE_GUID)
values (5, '审核员', null, '100001', 0);
insert into LF_ROLES (ROLE_ID, ROLE_NAME, COMMENTS, CORP_CODE, CREATE_GUID)
values (6, '开户员', null, '100001', 0);
insert into LF_ROLES (ROLE_ID, ROLE_NAME, COMMENTS, CORP_CODE, CREATE_GUID)
values (7, '充值员', null, '100001', 0);
insert into LF_ROLES (ROLE_ID, ROLE_NAME, COMMENTS, CORP_CODE, CREATE_GUID)
values (8, '发送员', null, '100001', 0);
insert into LF_ROLES (ROLE_ID, ROLE_NAME, COMMENTS, CORP_CODE, CREATE_GUID)
values (9, '客服员', null, '100001', 0);


insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2096);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2097);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2098);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2099);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2100);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2101);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2102);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2103);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2104);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2105);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2106);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2107);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2108);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2109);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2027);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2028);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2029);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2030);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2127);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2145);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2146);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2147);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2148);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1085);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1086);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1087);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1088);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1089);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2001);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2002);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2003);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2004);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2011);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2012);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2013);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2014);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2021);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2022);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2023);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2024);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2031);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2032);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2041);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2042);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2043);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2081);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2090);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2124);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2125);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2126);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 791);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1011);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 792);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 793);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 794);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 795);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1001);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1002);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1003);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1004);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 797);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2045);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2046);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 803);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 804);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 811);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 812);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 813);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 814);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1021);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1031);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1041);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2060);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2085);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2086);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2087);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2093);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2094);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2131);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2113);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2114);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2115);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2117);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2118);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2119);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2120);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2121);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2123);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2128);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2129);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2130);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2141);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2142);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2132);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2133);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2134);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2135);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2136);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2137);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2138);


insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2139);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2140);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2200);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2201);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2202);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2210);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2211);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2212);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2213);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2214);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2215);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2216);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2217);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2218);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2219);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2220);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2221);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2222);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2223);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2224);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2229);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2230);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2231);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2225);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2226);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2227);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2228);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2400);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2300);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2301);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2302);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2303);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2304);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2305);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2306);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2307);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2308);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2309);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2310);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2311);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2312);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2313);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2500);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2600);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2601);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2602);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2603);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2604);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2605);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2606);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2607);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2608);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2609);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2700);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2701);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2702);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2703);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2704);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2705);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2706);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2707);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2708);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2709);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2710);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2711);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2712);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2713);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2714);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2715);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2716);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2717);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2718);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2719);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2720);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2721);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2722);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2723);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2724);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2725);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2726);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2727);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (5, 797);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (5, 318);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (5, 650);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 201);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 202);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 203);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 280);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 277);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 204);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 211);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 212);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 213);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 214);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 216);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 217);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 218);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 271);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 572);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 573);


insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 574);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 276);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 575);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 576);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 577);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 284);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 286);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 287);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 288);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 638);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 640);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 641);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 642);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 639);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 647);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 648);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 649);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 659);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 674);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 755);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 1051);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 1052);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 1053);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 1054);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 1055);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 1056);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 1057);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 1087);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (6, 1088);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (7, 722);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (7, 724);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (7, 725);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (7, 1089);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 791);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 1011);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 792);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 793);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 794);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 795);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 2045);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 2046);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 803);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 804);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 811);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 812);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 813);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 814);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 1021);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 1031);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 1041);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 2060);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 2085);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 2086);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 2087);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 2093);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 2094);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 293);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 294);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 295);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 296);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 278);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 583);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 584);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 585);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 3);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 21);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 31);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 291);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 292);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 78);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 76);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 77);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 81);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 82);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 83);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 84);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 624);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 623);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 626);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 627);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 625);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 646);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 710);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 652);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 715);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 665);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 789);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 1061);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 1062);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 1063);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 1064);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 1065);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 1066);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 1067);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 2095);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 2096);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 2145);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (8, 2146);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (9, 2500);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 294);


insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 201);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 295);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 202);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 296);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 301);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 306);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 336);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 338);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 203);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 341);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 342);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 713);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 344);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 346);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 347);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 348);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 349);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 293);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 690);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 500);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 511);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 521);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 531);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 541);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 280);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 277);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 278);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 204);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 211);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 212);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 213);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 214);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 216);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 217);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 218);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 271);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 572);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 573);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 574);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 276);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 575);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 576);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 577);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 789);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 790);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 284);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 667);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 668);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 669);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 670);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 318);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 583);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 584);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 585);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 293);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 790);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 286);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 287);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 288);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 3);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 690);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 640);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 641);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 16);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 21);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 691);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 691);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 294);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 31);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 709);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 201);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 550);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 551);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 552);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 553);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 554);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 570);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 571);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 555);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 556);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 558);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 71);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 291);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 292);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 78);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 709);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 72);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 73);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 74);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 76);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 77);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 81);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 82);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 83);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 84);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 639);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 91);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 92);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 93);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 94);


insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 96);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 97);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 98);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 772);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 101);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 776);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 103);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 104);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 106);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 107);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 710);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 109);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 711);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 710);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 711);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 740);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 110);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 111);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 112);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 113);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 121);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 126);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 295);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 202);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 296);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 301);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 156);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 306);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 639);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 647);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 336);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 624);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 623);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 626);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 627);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 625);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 636);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 637);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 638);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 642);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 338);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 713);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 646);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 714);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 714);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 715);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 650);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 715);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 647);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 652);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 203);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 716);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 655);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 656);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 341);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 716);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 717);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 660);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 661);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 662);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 663);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 664);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 665);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 342);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 717);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 344);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 346);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 347);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 348);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 349);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 740);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 750);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 750);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 718);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 755);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 718);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 511);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 521);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 531);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 541);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 280);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 277);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 278);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 204);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 211);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 212);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 213);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 214);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 216);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 217);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 218);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 271);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 572);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 573);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 574);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 276);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 575);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 576);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 577);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 284);


insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 318);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 583);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 584);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 585);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 286);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 287);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 288);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 3);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 16);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 21);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 719);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 719);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 31);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 721);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 550);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 551);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 552);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 553);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 554);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 570);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 571);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 555);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 556);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 558);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 71);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 291);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 292);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 78);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 721);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 72);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 73);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 74);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 76);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 77);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 81);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 82);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 83);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 84);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 648);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 91);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 92);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 93);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 94);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 96);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 97);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 98);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 776);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 101);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 774);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 103);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 104);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 106);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 107);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 722);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 109);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 722);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 724);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 110);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 111);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 112);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 113);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 121);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 126);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 656);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 669);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 724);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 725);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 156);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 648);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 649);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 624);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 623);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 626);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 627);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 625);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 638);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 725);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 640);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 641);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 642);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 646);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 755);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (3, 755);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 757);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 650);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 652);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 757);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 655);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 665);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 758);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 667);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 668);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 670);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 671);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 671);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 758);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 649);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 659);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 659);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 674);


insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 674);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 759);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 759);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 770);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 770);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 771);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 771);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 772);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 774);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 775);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 775);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 781);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 781);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 785);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 785);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 786);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 786);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 787);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 787);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 789);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1051);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1052);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1053);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1054);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1055);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1056);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1057);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1051);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1052);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1053);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1054);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1055);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1056);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1057);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1061);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1061);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1062);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1062);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1063);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1063);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1064);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1064);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1065);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1065);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1066);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1066);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1067);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1067);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1068);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1068);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1069);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1069);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1070);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1070);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1071);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1071);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1072);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1072);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1073);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1073);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1081);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1082);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1083);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1084);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1081);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1082);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1083);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1084);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2051);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2052);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2053);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2054);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2051);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2052);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2053);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2054);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2071);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2071);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2095);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2095);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2096);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2096);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2097);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2097);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2098);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2098);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2099);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2099);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2100);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2100);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2101);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2101);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2102);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2102);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2103);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2103);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2104);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2104);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2105);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2105);


insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2106);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2106);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2107);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2107);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2108);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2108);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2109);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2109);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2027);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2027);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2028);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2028);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2029);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2029);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2030);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2030);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2127);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2127);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2145);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2146);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2147);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2148);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2145);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2146);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2147);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2148);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1085);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1085);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1086);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1086);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1087);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1087);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1088);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1088);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1089);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1089);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2001);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2002);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2003);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2004);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2001);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2002);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2003);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2004);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2011);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2012);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2013);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2014);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2011);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2012);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2013);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2014);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2021);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2022);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2023);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2024);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2021);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2022);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2023);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2024);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2031);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2032);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2031);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2032);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2041);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2042);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2043);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2041);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2042);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2043);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2081);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2081);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2090);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2090);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2124);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2124);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2125);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2125);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2126);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2126);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 791);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 791);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1011);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1011);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 792);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 793);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 794);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 795);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 792);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 793);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 794);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 795);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1001);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1002);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1003);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1004);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1001);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1002);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1003);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1004);


insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 797);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 797);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2045);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2046);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 803);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 804);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2045);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2046);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 803);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 804);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 811);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 812);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 813);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 814);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 811);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 812);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 813);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 814);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1021);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1021);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1031);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1031);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 1041);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 1041);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2060);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2060);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2085);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2085);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2086);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2086);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2087);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2087);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2093);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2093);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2094);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2094);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2131);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2131);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2113);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2114);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2115);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2117);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2118);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2119);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2120);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2113);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2114);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2115);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2117);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2118);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2119);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2120);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2121);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2123);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2128);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2129);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2130);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2121);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2123);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2128);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2129);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2130);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2141);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2141);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2142);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2142);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2132);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2132);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2133);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2133);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2134);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2134);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2135);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2135);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2136);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2136);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2137);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2137);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2138);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2138);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2139);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2139);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2140);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2140);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2200);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2200);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2201);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2201);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2202);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2202);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2210);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2210);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2211);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2211);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2212);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2212);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2213);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2213);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2214);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2214);


insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2215);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2215);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2216);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2216);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2217);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2217);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2218);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2218);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2219);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2219);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2220);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2220);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2221);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2221);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2222);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2222);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2223);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2223);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2224);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2224);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2229);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2229);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2230);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2230);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2231);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2231);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2225);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2225);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2226);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2226);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2227);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2227);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2228);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2228);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2400);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2400);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2300);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2301);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2302);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2303);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2304);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2305);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2306);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2307);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2308);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2309);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2310);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2311);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2312);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2313);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2300);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2301);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2302);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2303);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2304);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2305);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2306);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2307);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2308);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2309);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2310);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2311);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2312);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2313);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2500);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2500);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2600);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2601);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2602);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2603);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2604);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2605);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2606);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2607);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2608);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2609);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2600);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2601);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2602);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2603);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2604);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2605);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2606);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2607);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2608);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2609);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2700);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2701);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2702);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2703);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2700);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2701);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2702);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2703);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2704);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2705);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2706);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2707);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2704);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2705);


insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2706);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2707);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2708);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2709);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2710);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2708);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2709);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2710);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2711);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2712);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2713);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2711);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2712);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2713);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2714);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2715);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2716);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2717);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2718);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2714);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2715);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2716);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2717);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2718);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2719);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2720);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2721);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2722);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2719);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2720);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2721);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2722);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2723);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2723);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2724);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2725);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2724);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2725);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2726);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2726);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (1, 2727);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (2, 2727);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 713);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 690);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 789);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 293);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 790);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 691);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 294);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 201);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 709);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 772);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 710);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 711);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 295);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 202);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 296);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 301);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 306);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 639);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 336);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 338);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 714);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 715);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 647);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 203);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 341);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 716);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 342);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 717);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 344);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 346);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 347);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 348);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 349);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 740);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 750);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 718);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 511);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 521);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 531);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 541);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 280);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 277);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 278);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 204);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 211);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 212);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 213);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 214);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 216);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 217);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 218);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 271);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 572);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 573);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 574);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 276);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 575);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 576);


insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 577);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 284);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 318);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 583);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 584);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 585);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 286);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 287);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 288);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 3);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 16);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 21);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 719);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 31);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 550);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 551);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 552);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 553);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 554);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 570);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 571);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 555);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 556);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 558);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 71);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 291);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 292);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 78);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 721);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 72);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 73);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 74);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 76);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 77);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 81);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 82);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 83);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 84);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 91);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 92);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 93);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 94);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 96);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 97);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 98);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 776);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 101);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 103);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 104);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 106);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 107);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 109);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 722);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 110);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 111);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 112);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 113);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 121);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 126);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 656);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 669);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 724);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 156);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 648);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 624);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 623);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 626);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 627);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 625);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 638);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 725);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 640);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 641);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 642);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 646);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 755);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 650);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 652);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 757);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 655);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 665);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 667);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 668);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 670);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 671);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 758);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 649);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 659);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 674);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 759);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 770);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 771);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 774);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 775);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 781);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 785);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 786);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 787);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1051);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1052);


insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1053);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1054);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1055);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1056);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1057);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1061);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1062);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1063);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1064);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1065);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1066);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1067);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1068);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1069);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1070);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1071);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1072);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1073);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1081);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1082);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1083);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 1084);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2051);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2052);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2053);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2054);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2071);
insert into LF_IMPOWER (ROLE_ID, PRIVILEGE_ID)
values (4, 2095);



insert into LF_MATERIAL_SORT (SORT_ID, SORT_NAME, PARENT_CODE, CHILD_CODE, SORT_LEVEL, CORP_CODE)
values (1, '彩信素材分类', '0', '1000000000', 1, '100000');


insert into LF_MON_ONLCFG ( ONLINENUM, MAX_ONLINE, EVTTYPE, MONFREQ, MONPHONE, MODIFYTIME, MONSTATUS)
values ( 0, 500, 0, 30, null, CURRENT TIMESTAMP, 1);


insert into LF_OPERATE (OPERATE_ID, OPERATE_NAME, COMMENTS)
values (25, '充值', '充值权限');
insert into LF_OPERATE (OPERATE_ID, OPERATE_NAME, COMMENTS)
values (26, '回收', '回收权限');
insert into LF_OPERATE (OPERATE_ID, OPERATE_NAME, COMMENTS)
values (1, '增', '增加权限');
insert into LF_OPERATE (OPERATE_ID, OPERATE_NAME, COMMENTS)
values (2, '删', '删除权限');
insert into LF_OPERATE (OPERATE_ID, OPERATE_NAME, COMMENTS)
values (3, '改', '修改权限');
insert into LF_OPERATE (OPERATE_ID, OPERATE_NAME, COMMENTS)
values (4, '存草稿', '存草稿权限');
insert into LF_OPERATE (OPERATE_ID, OPERATE_NAME, COMMENTS)
values (0, '查看', '查看权限');
insert into LF_OPERATE (OPERATE_ID, OPERATE_NAME, COMMENTS)
values (5, '导出EXCEL', '导出EXECL权限');
insert into LF_OPERATE (OPERATE_ID, OPERATE_NAME, COMMENTS)
values (6, '短信审核', '短信审核权限');
insert into LF_OPERATE (OPERATE_ID, OPERATE_NAME, COMMENTS)
values (7, '发送', '发送短信权限');
insert into LF_OPERATE (OPERATE_ID, OPERATE_NAME, COMMENTS)
values (8, '同步机构信息', '同步机构信息权限');
insert into LF_OPERATE (OPERATE_ID, OPERATE_NAME, COMMENTS)
values (9, '同步客户信息', '同步客户信息权限');
insert into LF_OPERATE (OPERATE_ID, OPERATE_NAME, COMMENTS)
values (10, '同步员工信息', '同步客户信息权限');
insert into LF_OPERATE (OPERATE_ID, OPERATE_NAME, COMMENTS)
values (11, '查看日志', '查看日志权限');


insert into LF_PAGEFIELD (MODLEID, PAGEID, FIELDID, FIELDNAME, FIELD, FIELDTYPE, SUBFIELDVALUE, SUBFIELDNAME, FILEDSHOW, SUBFIELD, DEFAULTVALUE, SORTVALUE, ISFIELD)
values (null, null, '100001', '信息类型', '信息类型', 1, null, null, 0, 0, '0', null, 0);
insert into LF_PAGEFIELD (MODLEID, PAGEID, FIELDID, FIELDNAME, FIELD, FIELDTYPE, SUBFIELDVALUE, SUBFIELDNAME, FILEDSHOW, SUBFIELD, DEFAULTVALUE, SORTVALUE, ISFIELD)
values (null, null, '100001', '短信', '短信', 1, '0', '短信', 0, 1, '0', 1, 1);
insert into LF_PAGEFIELD (MODLEID, PAGEID, FIELDID, FIELDNAME, FIELD, FIELDTYPE, SUBFIELDVALUE, SUBFIELDNAME, FILEDSHOW, SUBFIELD, DEFAULTVALUE, SORTVALUE, ISFIELD)
values (null, null, '100001', '彩信', '彩信', 1, '1', '彩信', 0, 2, '0', 1, 1);
insert into LF_PAGEFIELD (MODLEID, PAGEID, FIELDID, FIELDNAME, FIELD, FIELDTYPE, SUBFIELDVALUE, SUBFIELDNAME, FILEDSHOW, SUBFIELD, DEFAULTVALUE, SORTVALUE, ISFIELD)
values ('1900-130', '1900-1300', '100002', '信息类型', '信息类型', 1, null, null, 0, 0, '0', 0, 0);
insert into LF_PAGEFIELD (MODLEID, PAGEID, FIELDID, FIELDNAME, FIELD, FIELDTYPE, SUBFIELDVALUE, SUBFIELDNAME, FILEDSHOW, SUBFIELD, DEFAULTVALUE, SORTVALUE, ISFIELD)
values ('1900-130', '1900-1300', '100002', '短信SP账户', '短信SP账户', 1, '1', '短信SP账户', 0, 0, '1', 0, 1);
insert into LF_PAGEFIELD (MODLEID, PAGEID, FIELDID, FIELDNAME, FIELD, FIELDTYPE, SUBFIELDVALUE, SUBFIELDNAME, FILEDSHOW, SUBFIELD, DEFAULTVALUE, SORTVALUE, ISFIELD)
values ('1900-130', '1900-130', '100002', '彩信SP账户', '彩信SP账户', 1, '2', '彩信SP账户', 0, 0, '2', 2, 1);
insert into LF_PAGEFIELD (MODLEID, PAGEID, FIELDID, FIELDNAME, FIELD, FIELDTYPE, SUBFIELDVALUE, SUBFIELDNAME, FILEDSHOW, SUBFIELD, DEFAULTVALUE, SORTVALUE, ISFIELD)
values ('2000-130', '2000-1300', '100003', '通道类型', '通道类型', 1, '0', null, 0, 0, '0', 0, 0);
insert into LF_PAGEFIELD (MODLEID, PAGEID, FIELDID, FIELDNAME, FIELD, FIELDTYPE, SUBFIELDVALUE, SUBFIELDNAME, FILEDSHOW, SUBFIELD, DEFAULTVALUE, SORTVALUE, ISFIELD)
values ('2000-130', '2000-1300', '100003', '短信', '短信', 1, '1', '短信', 0, 0, '1', 1, 1);
insert into LF_PAGEFIELD (MODLEID, PAGEID, FIELDID, FIELDNAME, FIELD, FIELDTYPE, SUBFIELDVALUE, SUBFIELDNAME, FILEDSHOW, SUBFIELD, DEFAULTVALUE, SORTVALUE, ISFIELD)
values ('2000-130', '2000-1300', '100003', '彩信', '彩信', 1, '2', '彩信', 0, 0, '2', 2, 1);
insert into LF_PAGEFIELD (MODLEID, PAGEID, FIELDID, FIELDNAME, FIELD, FIELDTYPE, SUBFIELDVALUE, SUBFIELDNAME, FILEDSHOW, SUBFIELD, DEFAULTVALUE, SORTVALUE, ISFIELD)
values ('2000-140', '2000-1400', '100004', '账户类型', '账户类型', 1, null, null, 0, 0, '0', 0, 0);
insert into LF_PAGEFIELD (MODLEID, PAGEID, FIELDID, FIELDNAME, FIELD, FIELDTYPE, SUBFIELDVALUE, SUBFIELDNAME, FILEDSHOW, SUBFIELD, DEFAULTVALUE, SORTVALUE, ISFIELD)
values ('2000-140', '2000-1400', '100004', '短信通道账户', '短信通道账户', 1, '1', '短信通道账户', 0, 0, '1', 1, 1);
insert into LF_PAGEFIELD (MODLEID, PAGEID, FIELDID, FIELDNAME, FIELD, FIELDTYPE, SUBFIELDVALUE, SUBFIELDNAME, FILEDSHOW, SUBFIELD, DEFAULTVALUE, SORTVALUE, ISFIELD)
values ('2000-140', '2000-1400', '100004', '彩信通道账户', '彩信通道账户', 1, '2', '彩信通道账户', 0, 0, '2', 2, 1);
insert into LF_PAGEFIELD (MODLEID, PAGEID, FIELDID, FIELDNAME, FIELD, FIELDTYPE, SUBFIELDVALUE, SUBFIELDNAME, FILEDSHOW, SUBFIELD, DEFAULTVALUE, SORTVALUE, ISFIELD)
values ('2200-100', '2200-1000', '100005', '计费类型', '计费类型', 1, null, null, 0, 0, '0', 0, 0);
insert into LF_PAGEFIELD (MODLEID, PAGEID, FIELDID, FIELDNAME, FIELD, FIELDTYPE, SUBFIELDVALUE, SUBFIELDNAME, FILEDSHOW, SUBFIELD, DEFAULTVALUE, SORTVALUE, ISFIELD)
values ('2200-100', '2200-1000', '100005', 'VIP免费', 'VIP免费', 1, '1', 'VIP免费', 0, 0, '1', 1, 1);
insert into LF_PAGEFIELD (MODLEID, PAGEID, FIELDID, FIELDNAME, FIELD, FIELDTYPE, SUBFIELDVALUE, SUBFIELDNAME, FILEDSHOW, SUBFIELD, DEFAULTVALUE, SORTVALUE, ISFIELD)
values ('2200-100', '2200-1000', '100005', '包月', '包月', 1, '2', '包月', 0, 0, '2', 2, 1);
insert into LF_PAGEFIELD (MODLEID, PAGEID, FIELDID, FIELDNAME, FIELD, FIELDTYPE, SUBFIELDVALUE, SUBFIELDNAME, FILEDSHOW, SUBFIELD, DEFAULTVALUE, SORTVALUE, ISFIELD)
values ('2200-100', '2200-1000', '100005', '包季', '包季', 1, '3', '包季', 0, 0, '3', 3, 1);
insert into LF_PAGEFIELD (MODLEID, PAGEID, FIELDID, FIELDNAME, FIELD, FIELDTYPE, SUBFIELDVALUE, SUBFIELDNAME, FILEDSHOW, SUBFIELD, DEFAULTVALUE, SORTVALUE, ISFIELD)
values ('2200-100', '2200-1000', '100005', '包年', '包年', 1, '4', '包年', 0, 0, '4', 4, 1);


insert into LF_POSITION (P_ID, P_NAME, ISDEL, MEMO)
values (1, 'manager', 0, null);

insert into LF_RESOURCE (RESOURCE_ID, RESOURCE_NAME, COMMENTS)
values (100, '短信信箱', '短信信箱');
insert into LF_RESOURCE (RESOURCE_ID, RESOURCE_NAME, COMMENTS)
values (200, '彩信信箱', '彩信信箱');
insert into LF_RESOURCE (RESOURCE_ID, RESOURCE_NAME, COMMENTS)
values (300, '短信调查', '短信调查');
insert into LF_RESOURCE (RESOURCE_ID, RESOURCE_NAME, COMMENTS)
values (350, '智能引擎', '智能引擎');
insert into LF_RESOURCE (RESOURCE_ID, RESOURCE_NAME, COMMENTS)
values (400, '即时通讯', '即时通讯');
insert into LF_RESOURCE (RESOURCE_ID, RESOURCE_NAME, COMMENTS)
values (500, '移动产品', '移动产品');
insert into LF_RESOURCE (RESOURCE_ID, RESOURCE_NAME, COMMENTS)
values (600, '模板/素材', '模板/素材');
insert into LF_RESOURCE (RESOURCE_ID, RESOURCE_NAME, COMMENTS)
values (700, '参数维护', '参数维护');
insert into LF_RESOURCE (RESOURCE_ID, RESOURCE_NAME, COMMENTS)
values (800, '查询统计', '查询统计');
insert into LF_RESOURCE (RESOURCE_ID, RESOURCE_NAME, COMMENTS)
values (900, '用户管理', '用户管理');
insert into LF_RESOURCE (RESOURCE_ID, RESOURCE_NAME, COMMENTS)
values (1000, '通讯录管理', '通讯录管理');
insert into LF_RESOURCE (RESOURCE_ID, RESOURCE_NAME, COMMENTS)
values (1100, '运营监控', '运营监控');
insert into LF_RESOURCE (RESOURCE_ID, RESOURCE_NAME, COMMENTS)
values (1200, '网关前端配置', '网关前端配置');
insert into LF_RESOURCE (RESOURCE_ID, RESOURCE_NAME, COMMENTS)
values (1300, '网关后端配置', '网关后端配置');


insert into LF_REVIEWSWITCH (MENUCODE, SWITCH_TYPE, MSG_COUNT, INFO_TYPE, UPDATE_TIME, CORP_CODE)
values ( null, 2, 100, 1, null, '100001');
insert into LF_REVIEWSWITCH (MENUCODE, SWITCH_TYPE, MSG_COUNT, INFO_TYPE, UPDATE_TIME, CORP_CODE)
values (null, 2, 100, 2, null, '100001');
insert into LF_REVIEWSWITCH (MENUCODE, SWITCH_TYPE, MSG_COUNT, INFO_TYPE, UPDATE_TIME, CORP_CODE)
values (null, 2, -1, 3, null, '100001');
insert into LF_REVIEWSWITCH (MENUCODE, SWITCH_TYPE, MSG_COUNT, INFO_TYPE, UPDATE_TIME, CORP_CODE)
values (null, 2, -1, 4, null, '100001');
insert into LF_REVIEWSWITCH (MENUCODE, SWITCH_TYPE, MSG_COUNT, INFO_TYPE, UPDATE_TIME, CORP_CODE)
values (null, 2, -1, 6, null, '100001');


insert into LF_SKIN (SKIN_NAMNE, SKIN_CODE, SKIN_SRC, THEME_CODE)
values ('极简蓝（默认）', 'default', null, 'frame3.0');
insert into LF_SKIN (SKIN_NAMNE, SKIN_CODE, SKIN_SRC, THEME_CODE)
values ('新春贺岁', 'red', null, 'frame3.0');
insert into LF_SKIN (SKIN_NAMNE, SKIN_CODE, SKIN_SRC, THEME_CODE)
values ('午后时光', 'green', null, 'frame3.0');
insert into LF_SKIN (SKIN_NAMNE, SKIN_CODE, SKIN_SRC, THEME_CODE)
values ('化猫物语', 'catstory', null, 'frame3.0');
insert into LF_SKIN (SKIN_NAMNE, SKIN_CODE, SKIN_SRC, THEME_CODE)
values ('炫动心情', 'redfeel', null, 'frame3.0');
insert into LF_SKIN (SKIN_NAMNE, SKIN_CODE, SKIN_SRC, THEME_CODE)
values ('清晨拂晓', 'morning', null, 'frame3.0');
insert into LF_SKIN (SKIN_NAMNE, SKIN_CODE, SKIN_SRC, THEME_CODE)
values ('清爽夏日', 'summer', null, 'frame3.0');
insert into LF_SKIN (SKIN_NAMNE, SKIN_CODE, SKIN_SRC, THEME_CODE)
values ('经典蓝（默认）', 'default', null, 'frame2.5');
insert into LF_SKIN (SKIN_NAMNE, SKIN_CODE, SKIN_SRC, THEME_CODE)
values ('Wood风', 'wood', null, 'frame2.5');
insert into LF_SKIN (SKIN_NAMNE, SKIN_CODE, SKIN_SRC, THEME_CODE)
values ('经典绿', 'green', null, 'frame2.5');
insert into LF_SKIN (SKIN_NAMNE, SKIN_CODE, SKIN_SRC, THEME_CODE)
values ('经典红', 'rose', null, 'frame2.5');


insert into LF_SYS_PARAM (PARAM_GROUP, PARAM_ITEM, PARAM_VALUE, MEMO)
values (null, 'emp.balance.billing', '1', '计费管理使用');
insert into LF_SYS_PARAM (PARAM_GROUP, PARAM_ITEM, PARAM_VALUE, MEMO)
values (null, 'emp.balance.dep.maxLevel', '4', '计费管理的层数');
insert into LF_SYS_PARAM (PARAM_GROUP, PARAM_ITEM, PARAM_VALUE, MEMO)
values (null, 'isRemind', '0', '短信审批使用');
insert into LF_SYS_PARAM (PARAM_GROUP, PARAM_ITEM, PARAM_VALUE, MEMO)
values (null, 'isHdata', '0', '调度汇总是否执行使用');
insert into LF_SYS_PARAM (PARAM_GROUP, PARAM_ITEM, PARAM_VALUE, MEMO)
values (null, 'isHdataFilish', '0', '调度汇总是否正在执行使用');
insert into LF_SYS_PARAM (PARAM_GROUP, PARAM_ITEM, PARAM_VALUE, MEMO)
values (null, 'isSumm', '0', 'EMP调度汇总是否执行使用');
insert into LF_SYS_PARAM (PARAM_GROUP, PARAM_ITEM, PARAM_VALUE, MEMO)
values (null, 'isSummFilish', '0', 'EMP调度汇总是否正在执行使用');
insert into LF_SYS_PARAM (PARAM_GROUP, PARAM_ITEM, PARAM_VALUE, MEMO)
values (null, 'SummTimeInterval', '6', '白天汇总时间间隔');
insert into LF_SYS_PARAM (PARAM_GROUP, PARAM_ITEM, PARAM_VALUE, MEMO)
values (null, 'SummDay', '4', '晚上汇总几天之内的');
insert into LF_SYS_PARAM (PARAM_GROUP, PARAM_ITEM, PARAM_VALUE, MEMO)
values (null, 'ismSummFilish', '0', 'EMP调度汇总是否正在执行使用');
insert into LF_SYS_PARAM (PARAM_GROUP, PARAM_ITEM, PARAM_VALUE, MEMO)
values (null, 'MsSummDay', '4', '晚上彩信汇总几天之内的');
insert into LF_SYS_PARAM (PARAM_GROUP, PARAM_ITEM, PARAM_VALUE, MEMO)
values (null, 'isAppSummFilish', '0', 'EMPApp汇总是否正在执行使用');


insert into LF_THEME (THEME_NAME, THEME_CODE, THEME_SRC)
values ('经典', 'frame3.0', 'tradition');
insert into LF_THEME (THEME_NAME, THEME_CODE, THEME_SRC)
values ('传统', 'frame2.5', 'classic');


insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (32, 11, '通信管理', 28, 964);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (33, 13, '查询统计', 29, 966);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (34, 13, '查询统计', 27, 965);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (35, 12, '系统管理', 23, 985);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (36, 11, '通信管理', 14, 960);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (37, 12, '系统管理', 8, 970);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (38, 12, '系统管理', 7, 990);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (39, 9, '智能引擎', 12, 940);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (40, 12, '系统管理', 9, 999);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (41, 1, '移动办公', 21, 300);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (42, 1, '移动办公', 1, 100);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (43, 2, '移动客服', 20, 360);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (44, 4, '移动彩讯', 2, 850);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (45, 1, '移动办公', 15, 140);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (46, 9, '智能引擎', 4, 930);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (52, 1, '移动办公', 31, 325);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (47, 12, '系统管理', 10, 980);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (48, 11, '通信管理', 13, 950);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (49, 1, '移动办公', 11, 200);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (50, 2, '移动客服', 22, 350);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (51, 12, '系统管理', 30, 995);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (53, 13, '查询统计', 41, 967);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (54, 15, '企业微信', 40, 610);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (55, 14, '移动网讯', 32, 760);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (56, 14, '移动网讯', 33, 770);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (57, 14, '移动网讯', 34, 780);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (58, 14, '移动网讯', 35, 790);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (59, 14, '移动网讯', 36, 800);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (60, 16, '系统监控', 42, 1100);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (61, 16, '系统监控', 43, 1110);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (62, 16, '系统监控', 44, 1120);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (63, 11, '通信管理', 45, 963);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (65, 18, '企业微信', 47, 640);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (66, 18, '企业微信', 48, 650);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (67, 18, '企业微信', 49, 660);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (68, 18, '企业微信', 50, 670);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (69, 18, '企业微信', 51, 680);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (70, 18, '企业微信', 52, 690);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (71, 18, '企业微信', 53, 700);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (72, 20, '在线座席', 58, 400);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (73, 21, '企业APP', 60, 702);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (74, 21, '企业APP', 61, 705);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (75, 21, '企业APP', 62, 707);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (76, 22, '移动业务', 65, 720);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (77, 22, '移动业务', 67, 730);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (78, 22, '移动业务', 69, 740);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (79, 1, '移动办公', 5, 120);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (80, 1, '移动办公', 16, 160);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (81, 2, '移动客服', 3, 355);
insert into LF_THIR_MENUCONTROL (TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
values (82, 11, '通信管理', 6, 962);

insert into LF_TRUCTTYPE ( TYPE, NAME)
values ( '01', '智能引擎');
insert into LF_TRUCTTYPE ( TYPE, NAME)
values ( '02', '接口接入');


insert into LF_USER2ROLE (ROLE_ID, USER_ID)
values (2, 2);
insert into LF_USER2ROLE (ROLE_ID, USER_ID)
values (4, 2);
insert into LF_USER2ROLE (ROLE_ID, USER_ID)
values (5, 2);
insert into LF_USER2ROLE (ROLE_ID, USER_ID)
values (6, 2);
insert into LF_USER2ROLE (ROLE_ID, USER_ID)
values (7, 2);
insert into LF_USER2ROLE (ROLE_ID, USER_ID)
values (8, 2);
insert into LF_USER2ROLE (ROLE_ID, USER_ID)
values (9, 2);


insert into LF_USERPARA (PARA_NAME, PARA_TYPE, PARA_LEN, PARA_DEFAULT, PARA_RE, SER_ID)
values ('phone', 'String', 11, null, null, null);


insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (103, 'U+1F480', '0xF0 0x9F 0x92 0x80', '0xD83D 0xDC80', 'E11C', 'smiles_10_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (104, 'U+1F463', '0xF0 0x9F 0x91 0xA3', '0xD83D 0xDC63', 'E536', 'smiles_10_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (105, 'U+1F48B', '0xF0 0x9F 0x92 0x8B', '0xD83D 0xDC8B', 'E003', 'smiles_10_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (106, 'U+1F444', '0xF0 0x9F 0x91 0x84', '0xD83D 0xDC44', 'E41C', 'smiles_10_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (107, 'U+1F442', '0xF0 0x9F 0x91 0x82', '0xD83D 0xDC42', 'E41B', 'smiles_10_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (108, 'U+1F440', '0xF0 0x9F 0x91 0x80', '0xD83D 0xDC40', 'E419', 'smiles_10_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (109, 'U+1F443', '0xF0 0x9F 0x91 0x83', '0xD83D 0xDC43', 'E41A', 'smiles_10_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (110, 'U+1F38D', '0xF0 0x9F 0x8E 0x8D', '0xD83C 0xDF8D', 'E436', 'bells_01_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (111, 'U+1F49D', '0xF0 0x9F 0x92 0x9D', '0xD83D 0xDC9D', 'E437', 'bells_01_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (112, 'U+1F38E', '0xF0 0x9F 0x8E 0x8E', '0xD83C 0xDF8E', 'E438', 'bells_01_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (113, 'U+1F392', '0xF0 0x9F 0x8E 0x92', '0xD83C 0xDF92', 'E43A', 'bells_01_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (114, 'U+1F393', '0xF0 0x9F 0x8E 0x93', '0xD83C 0xDF93', 'E439', 'bells_01_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (115, 'U+1F38F', '0xF0 0x9F 0x8E 0x8F', '0xD83C 0xDF8F', 'E43B', 'bells_01_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (116, 'U+1F386', '0xF0 0x9F 0x8E 0x86', '0xD83C 0xDF86', 'E117', 'bells_01_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (117, 'U+1F387', '0xF0 0x9F 0x8E 0x87', '0xD83C 0xDF87', 'E440', 'bells_01_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (118, 'U+1F390', '0xF0 0x9F 0x8E 0x90', '0xD83C 0xDF90', 'E442', 'bells_01_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (119, 'U+1F391', '0xF0 0x9F 0x8E 0x91', '0xD83C 0xDF91', 'E446', 'bells_01_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (120, 'U+1F383', '0xF0 0x9F 0x8E 0x83', '0xD83C 0xDF83', 'E445', 'bells_01_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (121, 'U+1F47B', '0xF0 0x9F 0x91 0xBB', '0xD83D 0xDC7B', 'E11B', 'bells_02_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (122, 'U+1F385', '0xF0 0x9F 0x8E 0x85', '0xD83C 0xDF85', 'E448', 'bells_02_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (123, 'U+1F384', '0xF0 0x9F 0x8E 0x84', '0xD83C 0xDF84', 'E033', 'bells_02_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (124, 'U+1F381', '0xF0 0x9F 0x8E 0x81', '0xD83C 0xDF81', 'E112', 'bells_02_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (125, 'U+1F514', '0xF0 0x9F 0x94 0x94', '0xD83D 0xDD14', 'E325', 'bells_02_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (126, 'U+1F389', '0xF0 0x9F 0x8E 0x89', '0xD83C 0xDF89', 'E312', 'bells_02_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (127, 'U+1F388', '0xF0 0x9F 0x8E 0x88', '0xD83C 0xDF88', 'E310', 'bells_02_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (128, 'U+1F4BF', '0xF0 0x9F 0x92 0xBF', '0xD83D 0xDCBF', 'E126', 'bells_02_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (129, 'U+1F4C0', '0xF0 0x9F 0x93 0x80', '0xD83D 0xDCC0', 'E127', 'bells_02_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (130, 'U+1F4F7', '0xF0 0x9F 0x93 0xB7', '0xD83D 0xDCF7', 'E008', 'bells_02_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (131, 'U+1F3A5', '0xF0 0x9F 0x8E 0xA5', '0xD83C 0xDFA5', 'E03D', 'bells_02_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (132, 'U+1F4BB', '0xF0 0x9F 0x92 0xBB', '0xD83D 0xDCBB', 'E00C', 'bells_03_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (133, 'U+1F4FA', '0xF0 0x9F 0x93 0xBA', '0xD83D 0xDCFA', 'E12A', 'bells_03_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (134, 'U+1F4F1', '0xF0 0x9F 0x93 0xB1', '0xD83D 0xDCF1', 'E00A', 'bells_03_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (135, 'U+1F4E0', '0xF0 0x9F 0x93 0xA0', '0xD83D 0xDCE0', 'E00B', 'bells_03_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (136, 'U+260E', '0xE2 0x98 0x8E', '0x260E', 'E009', 'bells_03_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (137, 'U+1F4BD', '0xF0 0x9F 0x92 0xBD', '0xD83D 0xDCBD', 'E316', 'bells_03_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (138, 'U+1F4FC', '0xF0 0x9F 0x93 0xBC', '0xD83D 0xDCFC', 'E129', 'bells_03_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (139, 'U+1F50A', '0xF0 0x9F 0x94 0x8A', '0xD83D 0xDD0A', 'E141', 'bells_03_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (140, 'U+1F4E2', '0xF0 0x9F 0x93 0xA2', '0xD83D 0xDCE2', 'E142', 'bells_03_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (141, 'U+1F4E3', '0xF0 0x9F 0x93 0xA3', '0xD83D 0xDCE3', 'E317', 'bells_03_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (142, 'U+1F4FB', '0xF0 0x9F 0x93 0xBB', '0xD83D 0xDCFB', 'E128', 'bells_03_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (143, 'U+1F4E1', '0xF0 0x9F 0x93 0xA1', '0xD83D 0xDCE1', 'E14B', 'bells_04_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (144, 'U+27BF', '0xE2 0x9E 0xBF', '0x27BF', 'E211', 'bells_04_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (145, 'U+1F50D', '0xF0 0x9F 0x94 0x8D', '0xD83D 0xDD0D', 'E114', 'bells_04_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (146, 'U+1F513', '0xF0 0x9F 0x94 0x93', '0xD83D 0xDD13', 'E145', 'bells_04_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (147, 'U+1F512', '0xF0 0x9F 0x94 0x92', '0xD83D 0xDD12', 'E144', 'bells_04_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (148, 'U+1F511', '0xF0 0x9F 0x94 0x91', '0xD83D 0xDD11', 'E03F', 'bells_04_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (149, 'U+2702', '0xE2 0x9C 0x82', '0x2702', 'E313', 'bells_04_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (150, 'U+1F528', '0xF0 0x9F 0x94 0xA8', '0xD83D 0xDD28', 'E116', 'bells_04_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (151, 'U+1F4A1', '0xF0 0x9F 0x92 0xA1', '0xD83D 0xDCA1', 'E10F', 'bells_04_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (152, 'U+1F4F2', '0xF0 0x9F 0x93 0xB2', '0xD83D 0xDCF2', 'E104', 'bells_04_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (153, 'U+1F4E9', '0xF0 0x9F 0x93 0xA9', '0xD83D 0xDCE9', 'E103', 'bells_04_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (154, 'U+1F4EB', '0xF0 0x9F 0x93 0xAB', '0xD83D 0xDCEB', 'E101', 'bells_05_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (155, 'U+1F4EE', '0xF0 0x9F 0x93 0xAE', '0xD83D 0xDCEE', 'E102', 'bells_05_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (156, 'U+1F6C0', '0xF0 0x9F 0x9B 0x80', '0xD83D 0xDEC0', 'E13F', 'bells_05_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (157, 'U+1F6BD', '0xF0 0x9F 0x9A 0xBD', '0xD83D 0xDEBD', 'E140', 'bells_05_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (158, 'U+1F4BA', '0xF0 0x9F 0x92 0xBA', '0xD83D 0xDCBA', 'E11F', 'bells_05_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (159, 'U+1F4B0', '0xF0 0x9F 0x92 0xB0', '0xD83D 0xDCB0', 'E12F', 'bells_05_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (160, 'U+1F531', '0xF0 0x9F 0x94 0xB1', '0xD83D 0xDD31', 'E031', 'bells_05_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (161, 'U+1F6AC', '0xF0 0x9F 0x9A 0xAC', '0xD83D 0xDEAC', 'E30E', 'bells_05_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (162, 'U+1F4A3', '0xF0 0x9F 0x92 0xA3', '0xD83D 0xDCA3', 'E311', 'bells_05_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (163, 'U+1F52B', '0xF0 0x9F 0x94 0xAB', '0xD83D 0xDD2B', 'E113', 'bells_05_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (164, 'U+1F48A', '0xF0 0x9F 0x92 0x8A', '0xD83D 0xDC8A', 'E30F', 'bells_05_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (165, 'U+1F489', '0xF0 0x9F 0x92 0x89', '0xD83D 0xDC89', 'E13B', 'bells_06_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (166, 'U+1F3C8', '0xF0 0x9F 0x8F 0x88', '0xD83C 0xDFC8', 'E42B', 'bells_06_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (167, 'U+1F3C0', '0xF0 0x9F 0x8F 0x80', '0xD83C 0xDFC0', 'E42A', 'bells_06_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (168, 'U+26BD', '0xE2 0x9A 0xBD', '0x26BD', 'E018', 'bells_06_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (169, 'U+26BE', '0xE2 0x9A 0xBE', '0x26BE', 'E016', 'bells_06_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (170, 'U+1F3BE', '0xF0 0x9F 0x8E 0xBE', '0xD83C 0xDFBE', 'E015', 'bells_06_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (171, 'U+26F3', '0xE2 0x9B 0xB3', '0x26F3', 'E014', 'bells_06_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (172, 'U+1F3B1', '0xF0 0x9F 0x8E 0xB1', '0xD83C 0xDFB1', 'E42C', 'bells_06_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (173, 'U+1F3CA', '0xF0 0x9F 0x8F 0x8A', '0xD83C 0xDFCA', 'E42D', 'bells_06_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (174, 'U+1F3C4', '0xF0 0x9F 0x8F 0x84', '0xD83C 0xDFC4', 'E017', 'bells_06_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (175, 'U+1F3BF', '0xF0 0x9F 0x8E 0xBF', '0xD83C 0xDFBF', 'E013', 'bells_06_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (176, 'U+2660', '0xE2 0x99 0xA0', '0x2660', 'E20E', 'bells_07_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (177, 'U+2665', '0xE2 0x99 0xA5', '0x2665', 'E20C', 'bells_07_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (178, 'U+2663', '0xE2 0x99 0xA3', '0x2663', 'E20F', 'bells_07_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (179, 'U+2666', '0xE2 0x99 0xA6', '0x2666', 'E20D', 'bells_07_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (180, 'U+1F3C6', '0xF0 0x9F 0x8F 0x86', '0xD83C 0xDFC6', 'E131', 'bells_07_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (181, 'U+1F47E', '0xF0 0x9F 0x91 0xBE', '0xD83D 0xDC7E', 'E12B', 'bells_07_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (182, 'U+1F3AF', '0xF0 0x9F 0x8E 0xAF', '0xD83C 0xDFAF', 'E130', 'bells_07_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (183, 'U+1F004', '0xF0 0x9F 0x80 0x84', '0xD83C 0xDC04', 'E12D', 'bells_07_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (184, 'U+1F3AC', '0xF0 0x9F 0x8E 0xAC', '0xD83C 0xDFAC', 'E324', 'bells_07_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (185, 'U+1F4DD', '0xF0 0x9F 0x93 0x9D', '0xD83D 0xDCDD', 'E301', 'bells_07_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (186, 'U+1F4D6', '0xF0 0x9F 0x93 0x96', '0xD83D 0xDCD6', 'E148', 'bells_07_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (187, 'U+1F3A8', '0xF0 0x9F 0x8E 0xA8', '0xD83C 0xDFA8', 'E502', 'bells_08_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (188, 'U+1F3A4', '0xF0 0x9F 0x8E 0xA4', '0xD83C 0xDFA4', 'E03C', 'bells_08_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (189, 'U+1F3A7', '0xF0 0x9F 0x8E 0xA7', '0xD83C 0xDFA7', 'E30A', 'bells_08_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (190, 'U+1F3BA', '0xF0 0x9F 0x8E 0xBA', '0xD83C 0xDFBA', 'E042', 'bells_08_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (191, 'U+1F3B7', '0xF0 0x9F 0x8E 0xB7', '0xD83C 0xDFB7', 'E040', 'bells_08_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (192, 'U+1F3B8', '0xF0 0x9F 0x8E 0xB8', '0xD83C 0xDFB8', 'E041', 'bells_08_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (193, 'U+303D', '0xE3 0x80 0xBD', '0x303D', 'E12C', 'bells_08_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (194, 'U+1F45F', '0xF0 0x9F 0x91 0x9F', '0xD83D 0xDC5F', 'E007', 'bells_08_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (195, 'U+1F461', '0xF0 0x9F 0x91 0xA1', '0xD83D 0xDC61', 'E31A', 'bells_08_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (196, 'U+1F460', '0xF0 0x9F 0x91 0xA0', '0xD83D 0xDC60', 'E13E', 'bells_08_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (197, 'U+1F462', '0xF0 0x9F 0x91 0xA2', '0xD83D 0xDC62', 'E31B', 'bells_08_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (198, 'U+1F455', '0xF0 0x9F 0x91 0x95', '0xD83D 0xDC55', 'E006', 'bells_09_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (199, 'U+1F454', '0xF0 0x9F 0x91 0x94', '0xD83D 0xDC54', 'E302', 'bells_09_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (200, 'U+1F457', '0xF0 0x9F 0x91 0x97', '0xD83D 0xDC57', 'E319', 'bells_09_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (201, 'U+1F458', '0xF0 0x9F 0x91 0x98', '0xD83D 0xDC58', 'E321', 'bells_09_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (202, 'U+1F459', '0xF0 0x9F 0x91 0x99', '0xD83D 0xDC59', 'E322', 'bells_09_05.png');


insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (203, 'U+1F380', '0xF0 0x9F 0x8E 0x80', '0xD83C 0xDF80', 'E314', 'bells_09_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (204, 'U+1F3A9', '0xF0 0x9F 0x8E 0xA9', '0xD83C 0xDFA9', 'E503', 'bells_09_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (205, 'U+1F451', '0xF0 0x9F 0x91 0x91', '0xD83D 0xDC51', 'E10E', 'bells_09_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (409, 'U+26EA', '0xE2 0x9B 0xAA', '0x26EA', 'E037', 'cars_01_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (410, 'U+1F3EC', '0xF0 0x9F 0x8F 0xAC', '0xD83C 0xDFEC', 'E504', 'cars_02_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (411, 'U+1F307', '0xF0 0x9F 0x8C 0x87', '0xD83C 0xDF07', 'E44A', 'cars_02_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (412, 'U+1F306', '0xF0 0x9F 0x8C 0x86', '0xD83C 0xDF06', 'E146', 'cars_02_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (413, 'U+1F3E7', '0xF0 0x9F 0x8F 0xA7', '0xD83C 0xDFE7', 'E154', 'cars_02_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (414, 'U+1F3EF', '0xF0 0x9F 0x8F 0xAF', '0xD83C 0xDFEF', 'E505', 'cars_02_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (415, 'U+1F3F0', '0xF0 0x9F 0x8F 0xB0', '0xD83C 0xDFF0', 'E506', 'cars_02_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (416, 'U+26FA', '0xE2 0x9B 0xBA', '0x26FA', 'E122', 'cars_02_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (417, 'U+1F3ED', '0xF0 0x9F 0x8F 0xAD', '0xD83C 0xDFED', 'E508', 'cars_02_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (418, 'U+1F5FC', '0xF0 0x9F 0x97 0xBC', '0xD83D 0xDDFC', 'E509', 'cars_02_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (419, 'U+1F5FB', '0xF0 0x9F 0x97 0xBB', '0xD83D 0xDDFB', 'E03B', 'cars_02_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (420, 'U+1F304', '0xF0 0x9F 0x8C 0x84', '0xD83C 0xDF04', 'E04D', 'cars_02_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (421, 'U+1F305', '0xF0 0x9F 0x8C 0x85', '0xD83C 0xDF05', 'E449', 'cars_03_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (422, 'U+1F303', '0xF0 0x9F 0x8C 0x83', '0xD83C 0xDF03', 'E44B', 'cars_03_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (423, 'U+1F5FD', '0xF0 0x9F 0x97 0xBD', '0xD83D 0xDDFD', 'E51D', 'cars_03_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (424, 'U+1F308', '0xF0 0x9F 0x8C 0x88', '0xD83C 0xDF08', 'E44C', 'cars_03_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (425, 'U+1F3A1', '0xF0 0x9F 0x8E 0xA1', '0xD83C 0xDFA1', 'E124', 'cars_03_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (426, 'U+26F2', '0xE2 0x9B 0xB2', '0x26F2', 'E121', 'cars_03_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (427, 'U+1F3A2', '0xF0 0x9F 0x8E 0xA2', '0xD83C 0xDFA2', 'E433', 'cars_03_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (428, 'U+1F6A2', '0xF0 0x9F 0x9A 0xA2', '0xD83D 0xDEA2', 'E202', 'cars_03_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (429, 'U+1F6A4', '0xF0 0x9F 0x9A 0xA4', '0xD83D 0xDEA4', 'E135', 'cars_03_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (430, 'U+26F5', '0xE2 0x9B 0xB5', '0x26F5', 'E01C', 'cars_03_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (431, 'U+2708', '0xE2 0x9C 0x88', '0x2708', 'E01D', 'cars_03_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (432, 'U+1F680', '0xF0 0x9F 0x9A 0x80', '0xD83D 0xDE80', 'E10D', 'cars_04_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (433, 'U+1F6B2', '0xF0 0x9F 0x9A 0xB2', '0xD83D 0xDEB2', 'E136', 'cars_04_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (434, 'U+1F699', '0xF0 0x9F 0x9A 0x99', '0xD83D 0xDE99', 'E42E', 'cars_04_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (435, 'U+1F697', '0xF0 0x9F 0x9A 0x97', '0xD83D 0xDE97', 'E01B', 'cars_04_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (436, 'U+1F695', '0xF0 0x9F 0x9A 0x95', '0xD83D 0xDE95', 'E15A', 'cars_04_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (437, 'U+1F68C', '0xF0 0x9F 0x9A 0x8C', '0xD83D 0xDE8C', 'E159', 'cars_04_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (438, 'U+1F693', '0xF0 0x9F 0x9A 0x93', '0xD83D 0xDE93', 'E432', 'cars_04_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (439, 'U+1F692', '0xF0 0x9F 0x9A 0x92', '0xD83D 0xDE92', 'E430', 'cars_04_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (440, 'U+1F691', '0xF0 0x9F 0x9A 0x91', '0xD83D 0xDE91', 'E431', 'cars_04_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (441, 'U+1F69A', '0xF0 0x9F 0x9A 0x9A', '0xD83D 0xDE9A', 'E42F', 'cars_04_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (442, 'U+1F683', '0xF0 0x9F 0x9A 0x83', '0xD83D 0xDE83', 'E01E', 'cars_04_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (443, 'U+1F689', '0xF0 0x9F 0x9A 0x89', '0xD83D 0xDE89', 'E039', 'cars_05_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (444, 'U+1F684', '0xF0 0x9F 0x9A 0x84', '0xD83D 0xDE84', 'E435', 'cars_05_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (445, 'U+1F685', '0xF0 0x9F 0x9A 0x85', '0xD83D 0xDE85', 'E01F', 'cars_05_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (446, 'U+1F3AB', '0xF0 0x9F 0x8E 0xAB', '0xD83C 0xDFAB', 'E125', 'cars_05_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (447, 'U+26FD', '0xE2 0x9B 0xBD', '0x26FD', 'E03A', 'cars_05_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (448, 'U+1F6A5', '0xF0 0x9F 0x9A 0xA5', '0xD83D 0xDEA5', 'E14E', 'cars_05_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (449, 'U+26A0', '0xE2 0x9A 0xA0', '0x26A0', 'E252', 'cars_05_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (450, 'U+1F6A7', '0xF0 0x9F 0x9A 0xA7', '0xD83D 0xDEA7', 'E137', 'cars_05_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (451, 'U+1F530', '0xF0 0x9F 0x94 0xB0', '0xD83D 0xDD30', 'E209', 'cars_05_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (452, 'U+1F3B0', '0xF0 0x9F 0x8E 0xB0', '0xD83C 0xDFB0', 'E133', 'cars_05_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (453, 'U+1F68F', '0xF0 0x9F 0x9A 0x8F', '0xD83D 0xDE8F', 'E150', 'cars_05_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (454, 'U+1F488', '0xF0 0x9F 0x92 0x88', '0xD83D 0xDC88', 'E320', 'cars_06_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (455, 'U+2668', '0xE2 0x99 0xA8', '0x2668', 'E123', 'cars_06_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (456, 'U+1F3C1', '0xF0 0x9F 0x8F 0x81', '0xD83C 0xDFC1', 'E132', 'cars_06_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (457, 'U+1F38C', '0xF0 0x9F 0x8E 0x8C', '0xD83C 0xDF8C', 'E143', 'cars_06_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (458, 'U+1F1EF U+1F1F5', '0xF0 0x9F 0x87 0xAF 0xF0 0x9F 0x87 0xB5', '0xD83C 0xDDEF 0xD83C 0xDDF5', 'E50B', 'cars_06_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (459, 'U+1F1F0 U+1F1F7', '0xF0 0x9F 0x87 0xB0 0xF0 0x9F 0x87 0xB7', '0xD83C 0xDDF0 0xD83C 0xDDF7', 'E514', 'cars_06_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (460, 'U+1F1E8 U+1F1F3', '0xF0 0x9F 0x87 0xA8 0xF0 0x9F 0x87 0xB3', '0xD83C 0xDDE8 0xD83C 0xDDF3', 'E513', 'cars_06_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (461, 'U+1F1FA U+1F1F8', '0xF0 0x9F 0x87 0xBA 0xF0 0x9F 0x87 0xB8', '0xD83C 0xDDFA 0xD83C 0xDDF8', 'E50C', 'cars_06_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (462, 'U+1F1EB U+1F1F7', '0xF0 0x9F 0x87 0xAB 0xF0 0x9F 0x87 0xB7', '0xD83C 0xDDEB 0xD83C 0xDDF7', 'E50D', 'cars_06_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (463, 'U+1F1EA U+1F1F8', '0xF0 0x9F 0x87 0xAA 0xF0 0x9F 0x87 0xB8', '0xD83C 0xDDEA 0xD83C 0xDDF8', 'E511', 'cars_06_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (464, 'U+1F1EE U+1F1F9', '0xF0 0x9F 0x87 0xAE 0xF0 0x9F 0x87 0xB9', '0xD83C 0xDDEE 0xD83C 0xDDF9', 'E50F', 'cars_06_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (465, 'U+1F1F7 U+1F1FA', '0xF0 0x9F 0x87 0xB7 0xF0 0x9F 0x87 0xBA', '0xD83C 0xDDF7 0xD83C 0xDDFA', 'E512', 'cars_07_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (466, 'U+1F1EC U+1F1E7', '0xF0 0x9F 0x87 0xAC 0xF0 0x9F 0x87 0xA7', '0xD83C 0xDDEC 0xD83C 0xDDE7', 'E510', 'cars_07_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (467, 'U+1F1E9 U+1F1EA', '0xF0 0x9F 0x87 0xA9 0xF0 0x9F 0x87 0xAA', '0xD83C 0xDDE9 0xD83C 0xDDEA', 'E50E', 'cars_07_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (206, 'U+1F452', '0xF0 0x9F 0x91 0x92', '0xD83D 0xDC52', 'E318', 'bells_09_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (207, 'U+1F302', '0xF0 0x9F 0x8C 0x82', '0xD83C 0xDF02', 'E43C', 'bells_09_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (208, 'U+1F4BC', '0xF0 0x9F 0x92 0xBC', '0xD83D 0xDCBC', 'E11E', 'bells_09_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (209, 'U+1F45C', '0xF0 0x9F 0x91 0x9C', '0xD83D 0xDC5C', 'E323', 'bells_10_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (210, 'U+1F484', '0xF0 0x9F 0x92 0x84', '0xD83D 0xDC84', 'E31C', 'bells_10_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (211, 'U+1F48D', '0xF0 0x9F 0x92 0x8D', '0xD83D 0xDC8D', 'E034', 'bells_10_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (212, 'U+1F48E', '0xF0 0x9F 0x92 0x8E', '0xD83D 0xDC8E', 'E035', 'bells_10_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (213, 'U+2615', '0xE2 0x98 0x95', '0x2615', 'E045', 'bells_10_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (214, 'U+1F375', '0xF0 0x9F 0x8D 0xB5', '0xD83C 0xDF75', 'E338', 'bells_10_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (215, 'U+1F37A', '0xF0 0x9F 0x8D 0xBA', '0xD83C 0xDF7A', 'E047', 'bells_10_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (216, 'U+1F37B', '0xF0 0x9F 0x8D 0xBB', '0xD83C 0xDF7B', 'E30C', 'bells_10_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (217, 'U+1F378', '0xF0 0x9F 0x8D 0xB8', '0xD83C 0xDF78', 'E044', 'bells_10_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (218, 'U+1F376', '0xF0 0x9F 0x8D 0xB6', '0xD83C 0xDF76', 'E30B', 'bells_10_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (219, 'U+1F374', '0xF0 0x9F 0x8D 0xB4', '0xD83C 0xDF74', 'E043', 'bells_10_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (220, 'U+1F354', '0xF0 0x9F 0x8D 0x94', '0xD83C 0xDF54', 'E120', 'bells_11_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (221, 'U+1F35F', '0xF0 0x9F 0x8D 0x9F', '0xD83C 0xDF5F', 'E33B', 'bells_11_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (222, 'U+1F35D', '0xF0 0x9F 0x8D 0x9D', '0xD83C 0xDF5D', 'E33F', 'bells_11_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (223, 'U+1F35B', '0xF0 0x9F 0x8D 0x9B', '0xD83C 0xDF5B', 'E341', 'bells_11_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (224, 'U+1F371', '0xF0 0x9F 0x8D 0xB1', '0xD83C 0xDF71', 'E34C', 'bells_11_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (225, 'U+1F363', '0xF0 0x9F 0x8D 0xA3', '0xD83C 0xDF63', 'E344', 'bells_11_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (226, 'U+1F359', '0xF0 0x9F 0x8D 0x99', '0xD83C 0xDF59', 'E342', 'bells_11_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (227, 'U+1F358', '0xF0 0x9F 0x8D 0x98', '0xD83C 0xDF58', 'E33D', 'bells_11_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (228, 'U+1F35A', '0xF0 0x9F 0x8D 0x9A', '0xD83C 0xDF5A', 'E33E', 'bells_11_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (229, 'U+1F35C', '0xF0 0x9F 0x8D 0x9C', '0xD83C 0xDF5C', 'E340', 'bells_11_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (230, 'U+1F372', '0xF0 0x9F 0x8D 0xB2', '0xD83C 0xDF72', 'E34D', 'bells_11_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (231, 'U+1F35E', '0xF0 0x9F 0x8D 0x9E', '0xD83C 0xDF5E', 'E339', 'bells_12_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (232, 'U+1F373', '0xF0 0x9F 0x8D 0xB3', '0xD83C 0xDF73', 'E147', 'bells_12_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (233, 'U+1F362', '0xF0 0x9F 0x8D 0xA2', '0xD83C 0xDF62', 'E343', 'bells_12_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (234, 'U+1F361', '0xF0 0x9F 0x8D 0xA1', '0xD83C 0xDF61', 'E33C', 'bells_12_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (235, 'U+1F366', '0xF0 0x9F 0x8D 0xA6', '0xD83C 0xDF66', 'E33A', 'bells_12_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (236, 'U+1F367', '0xF0 0x9F 0x8D 0xA7', '0xD83C 0xDF67', 'E43F', 'bells_12_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (237, 'U+1F382', '0xF0 0x9F 0x8E 0x82', '0xD83C 0xDF82', 'E34B', 'bells_12_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (238, 'U+1F370', '0xF0 0x9F 0x8D 0xB0', '0xD83C 0xDF70', 'E046', 'bells_12_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (239, 'U+1F34E', '0xF0 0x9F 0x8D 0x8E', '0xD83C 0xDF4E', 'E345', 'bells_12_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (240, 'U+1F34A', '0xF0 0x9F 0x8D 0x8A', '0xD83C 0xDF4A', 'E346', 'bells_12_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (241, 'U+1F349', '0xF0 0x9F 0x8D 0x89', '0xD83C 0xDF49', 'E348', 'bells_12_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (242, 'U+1F353', '0xF0 0x9F 0x8D 0x93', '0xD83C 0xDF53', 'E347', 'bells_13_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (243, 'U+1F346', '0xF0 0x9F 0x8D 0x86', '0xD83C 0xDF46', 'E34A', 'bells_13_02.png');


insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (244, 'U+1F345', '0xF0 0x9F 0x8D 0x85', '0xD83C 0xDF45', 'E349', 'bells_13_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (245, 'U+2600', '0xE2 0x98 0x80', '0x2600', 'E04A', 'flowers_01_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (246, 'U+2614', '0xE2 0x98 0x94', '0x2614', 'E04B', 'flowers_01_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (247, 'U+2601', '0xE2 0x98 0x81', '0x2601', 'E049', 'flowers_01_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (248, 'U+26C4', '0xE2 0x9B 0x84', '0x26C4', 'E048', 'flowers_01_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (249, 'U+1F319', '0xF0 0x9F 0x8C 0x99', '0xD83C 0xDF19', 'E04C', 'flowers_01_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (250, 'U+26A1', '0xE2 0x9A 0xA1', '0x26A1', 'E13D', 'flowers_01_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (251, 'U+1F300', '0xF0 0x9F 0x8C 0x80', '0xD83C 0xDF00', 'E443', 'flowers_01_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (252, 'U+1F30A', '0xF0 0x9F 0x8C 0x8A', '0xD83C 0xDF0A', 'E43E', 'flowers_01_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (253, 'U+1F431', '0xF0 0x9F 0x90 0xB1', '0xD83D 0xDC31', 'E04F', 'flowers_01_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (254, 'U+1F436', '0xF0 0x9F 0x90 0xB6', '0xD83D 0xDC36', 'E052', 'flowers_01_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (255, 'U+1F42D', '0xF0 0x9F 0x90 0xAD', '0xD83D 0xDC2D', 'E053', 'flowers_01_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (256, 'U+1F439', '0xF0 0x9F 0x90 0xB9', '0xD83D 0xDC39', 'E524', 'flowers_02_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (257, 'U+1F430', '0xF0 0x9F 0x90 0xB0', '0xD83D 0xDC30', 'E52C', 'flowers_02_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (258, 'U+1F43A', '0xF0 0x9F 0x90 0xBA', '0xD83D 0xDC3A', 'E52A', 'flowers_02_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (259, 'U+1F438', '0xF0 0x9F 0x90 0xB8', '0xD83D 0xDC38', 'E531', 'flowers_02_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (260, 'U+1F42F', '0xF0 0x9F 0x90 0xAF', '0xD83D 0xDC2F', 'E050', 'flowers_02_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (261, 'U+1F428', '0xF0 0x9F 0x90 0xA8', '0xD83D 0xDC28', 'E527', 'flowers_02_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (262, 'U+1F43B', '0xF0 0x9F 0x90 0xBB', '0xD83D 0xDC3B', 'E051', 'flowers_02_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (263, 'U+1F437', '0xF0 0x9F 0x90 0xB7', '0xD83D 0xDC37', 'E10B', 'flowers_02_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (264, 'U+1F42E', '0xF0 0x9F 0x90 0xAE', '0xD83D 0xDC2E', 'E52B', 'flowers_02_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (265, 'U+1F417', '0xF0 0x9F 0x90 0x97', '0xD83D 0xDC17', 'E52F', 'flowers_02_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (266, 'U+1F435', '0xF0 0x9F 0x90 0xB5', '0xD83D 0xDC35', 'E109', 'flowers_02_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (267, 'U+1F412', '0xF0 0x9F 0x90 0x92', '0xD83D 0xDC12', 'E528', 'flowers_03_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (268, 'U+1F434', '0xF0 0x9F 0x90 0xB4', '0xD83D 0xDC34', 'E01A', 'flowers_03_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (269, 'U+1F40E', '0xF0 0x9F 0x90 0x8E', '0xD83D 0xDC0E', 'E134', 'flowers_03_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (270, 'U+1F42B', '0xF0 0x9F 0x90 0xAB', '0xD83D 0xDC2B', 'E530', 'flowers_03_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (271, 'U+1F411', '0xF0 0x9F 0x90 0x91', '0xD83D 0xDC11', 'E529', 'flowers_03_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (272, 'U+1F418', '0xF0 0x9F 0x90 0x98', '0xD83D 0xDC18', 'E526', 'flowers_03_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (273, 'U+1F40D', '0xF0 0x9F 0x90 0x8D', '0xD83D 0xDC0D', 'E52D', 'flowers_03_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (274, 'U+1F426', '0xF0 0x9F 0x90 0xA6', '0xD83D 0xDC26', 'E521', 'flowers_03_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (275, 'U+1F424', '0xF0 0x9F 0x90 0xA4', '0xD83D 0xDC24', 'E523', 'flowers_03_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (276, 'U+1F414', '0xF0 0x9F 0x90 0x94', '0xD83D 0xDC14', 'E52E', 'flowers_03_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (277, 'U+1F427', '0xF0 0x9F 0x90 0xA7', '0xD83D 0xDC27', 'E055', 'flowers_03_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (278, 'U+1F41B', '0xF0 0x9F 0x90 0x9B', '0xD83D 0xDC1B', 'E525', 'flowers_04_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (279, 'U+1F419', '0xF0 0x9F 0x90 0x99', '0xD83D 0xDC19', 'E10A', 'flowers_04_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (280, 'U+1F420', '0xF0 0x9F 0x90 0xA0', '0xD83D 0xDC20', 'E522', 'flowers_04_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (281, 'U+1F41F', '0xF0 0x9F 0x90 0x9F', '0xD83D 0xDC1F', 'E019', 'flowers_04_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (282, 'U+1F433', '0xF0 0x9F 0x90 0xB3', '0xD83D 0xDC33', 'E054', 'flowers_04_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (283, 'U+1F42C', '0xF0 0x9F 0x90 0xAC', '0xD83D 0xDC2C', 'E520', 'flowers_04_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (284, 'U+1F490', '0xF0 0x9F 0x92 0x90', '0xD83D 0xDC90', 'E306', 'flowers_04_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (285, 'U+1F338', '0xF0 0x9F 0x8C 0xB8', '0xD83C 0xDF38', 'E030', 'flowers_04_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (286, 'U+1F337', '0xF0 0x9F 0x8C 0xB7', '0xD83C 0xDF37', 'E304', 'flowers_04_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (287, 'U+1F340', '0xF0 0x9F 0x8D 0x80', '0xD83C 0xDF40', 'E110', 'flowers_04_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (288, 'U+1F339', '0xF0 0x9F 0x8C 0xB9', '0xD83C 0xDF39', 'E032', 'flowers_04_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (289, 'U+1F33B', '0xF0 0x9F 0x8C 0xBB', '0xD83C 0xDF3B', 'E305', 'flowers_05_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (290, 'U+1F33A', '0xF0 0x9F 0x8C 0xBA', '0xD83C 0xDF3A', 'E303', 'flowers_05_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (291, 'U+1F341', '0xF0 0x9F 0x8D 0x81', '0xD83C 0xDF41', 'E118', 'flowers_05_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (292, 'U+1F343', '0xF0 0x9F 0x8D 0x83', '0xD83C 0xDF43', 'E447', 'flowers_05_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (293, 'U+1F342', '0xF0 0x9F 0x8D 0x82', '0xD83C 0xDF42', 'E119', 'flowers_05_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (294, 'U+1F334', '0xF0 0x9F 0x8C 0xB4', '0xD83C 0xDF34', 'E307', 'flowers_05_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (295, 'U+1F335', '0xF0 0x9F 0x8C 0xB5', '0xD83C 0xDF35', 'E308', 'flowers_05_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (296, 'U+1F33E', '0xF0 0x9F 0x8C 0xBE', '0xD83C 0xDF3E', 'E444', 'flowers_05_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (297, 'U+1F41A', '0xF0 0x9F 0x90 0x9A', '0xD83D 0xDC1A', 'E441', 'flowers_05_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (298, 'U+0031 U+20E3', '0x31 0xE2 0x83 0xA3', '0x31 0x20E3', 'E21C', 'numbers_01_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (299, 'U+0032 U+20E3', '0x32 0xE2 0x83 0xA3', '0x32 0x20E3', 'E21D', 'numbers_01_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (300, 'U+0033 U+20E3', '0x33 0xE2 0x83 0xA3', '0x33 0x20E3', 'E21E', 'numbers_01_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (301, 'U+0034 U+20E3', '0x34 0xE2 0x83 0xA3', '0x34 0x20E3', 'E21F', 'numbers_01_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (302, 'U+0035 U+20E3', '0x35 0xE2 0x83 0xA3', '0x35 0x20E3', 'E220', 'numbers_01_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (303, 'U+0036 U+20E3', '0x36 0xE2 0x83 0xA3', '0x36 0x20E3', 'E221', 'numbers_01_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (304, 'U+0037 U+20E3', '0x37 0xE2 0x83 0xA3', '0x37 0x20E3', 'E222', 'numbers_01_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (305, 'U+0038 U+20E3', '0x38 0xE2 0x83 0xA3', '0x38 0x20E3', 'E223', 'numbers_01_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (306, 'U+0039 U+20E3', '0x39 0xE2 0x83 0xA3', '0x39 0x20E3', 'E224', 'numbers_01_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (307, 'U+0030 U+20E3', '0x30 0xE2 0x83 0xA3', '0x30 0x20E3', 'E225', 'numbers_01_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (308, 'U+0023 U+20E3', '0x23 0xE2 0x83 0xA3', '0x23 0x20E3', 'E210', 'numbers_01_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (309, 'U+2B06', '0xE2 0xAC 0x86', '0x2B06', 'E232', 'numbers_02_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (310, 'U+2B07', '0xE2 0xAC 0x87', '0x2B07', 'E233', 'numbers_02_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (311, 'U+2B05', '0xE2 0xAC 0x85', '0x2B05', 'E235', 'numbers_02_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (312, 'U+27A1', '0xE2 0x9E 0xA1', '0x27A1', 'E234', 'numbers_02_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (313, 'U+2197', '0xE2 0x86 0x97', '0x2197', 'E236', 'numbers_02_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (314, 'U+2196', '0xE2 0x86 0x96', '0x2196', 'E237', 'numbers_02_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (315, 'U+2198', '0xE2 0x86 0x98', '0x2198', 'E238', 'numbers_02_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (316, 'U+2199', '0xE2 0x86 0x99', '0x2199', 'E239', 'numbers_02_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (317, 'U+25C0', '0xE2 0x97 0x80', '0x25C0', 'E23B', 'numbers_02_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (318, 'U+25B6', '0xE2 0x96 0xB6', '0x25B6', 'E23A', 'numbers_02_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (319, 'U+23EA', '0xE2 0x8F 0xAA', '0x23EA', 'E23D', 'numbers_02_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (320, 'U+23E9', '0xE2 0x8F 0xA9', '0x23E9', 'E23C', 'numbers_03_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (321, 'U+1F197', '0xF0 0x9F 0x86 0x97', '0xD83C 0xDD97', 'E24D', 'numbers_03_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (322, 'U+1F195', '0xF0 0x9F 0x86 0x95', '0xD83C 0xDD95', 'E212', 'numbers_03_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (323, 'U+1F51D', '0xF0 0x9F 0x94 0x9D', '0xD83D 0xDD1D', 'E24C', 'numbers_03_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (324, 'U+1F199', '0xF0 0x9F 0x86 0x99', '0xD83C 0xDD99', 'E213', 'numbers_03_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (325, 'U+1F192', '0xF0 0x9F 0x86 0x92', '0xD83C 0xDD92', 'E214', 'numbers_03_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (326, 'U+1F3A6', '0xF0 0x9F 0x8E 0xA6', '0xD83C 0xDFA6', 'E507', 'numbers_03_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (327, 'U+1F201', '0xF0 0x9F 0x88 0x81', '0xD83C 0xDE01', 'E203', 'numbers_03_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (328, 'U+1F4F6', '0xF0 0x9F 0x93 0xB6', '0xD83D 0xDCF6', 'E20B', 'numbers_03_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (329, 'U+1F235', '0xF0 0x9F 0x88 0xB5', '0xD83C 0xDE35', 'E22A', 'numbers_03_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (330, 'U+1F233', '0xF0 0x9F 0x88 0xB3', '0xD83C 0xDE33', 'E22B', 'numbers_03_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (331, 'U+1F250', '0xF0 0x9F 0x89 0x90', '0xD83C 0xDE50', 'E226', 'numbers_04_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (332, 'U+1F239', '0xF0 0x9F 0x88 0xB9', '0xD83C 0xDE39', 'E227', 'numbers_04_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (333, 'U+1F22F', '0xF0 0x9F 0x88 0xAF', '0xD83C 0xDE2F', 'E22C', 'numbers_04_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (334, 'U+1F23A', '0xF0 0x9F 0x88 0xBA', '0xD83C 0xDE3A', 'E22D', 'numbers_04_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (335, 'U+1F236', '0xF0 0x9F 0x88 0xB6', '0xD83C 0xDE36', 'E215', 'numbers_04_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (336, 'U+1F21A', '0xF0 0x9F 0x88 0x9A', '0xD83C 0xDE1A', 'E216', 'numbers_04_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (337, 'U+1F237', '0xF0 0x9F 0x88 0xB7', '0xD83C 0xDE37', 'E217', 'numbers_04_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (338, 'U+1F238', '0xF0 0x9F 0x88 0xB8', '0xD83C 0xDE38', 'E218', 'numbers_04_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (339, 'U+1F202', '0xF0 0x9F 0x88 0x82', '0xD83C 0xDE02', 'E228', 'numbers_04_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (340, 'U+1F6BB', '0xF0 0x9F 0x9A 0xBB', '0xD83D 0xDEBB', 'E151', 'numbers_04_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (341, 'U+1F6B9', '0xF0 0x9F 0x9A 0xB9', '0xD83D 0xDEB9', 'E138', 'numbers_04_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (342, 'U+1f6ba', '0xF0 0x9F 0x9A 0xBA', '0xD83D 0xDEBA', 'E139', 'numbers_05_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (343, 'U+1f6bc', '0xF0 0x9F 0x9A 0xBC', '0xD83D 0xDEBC', 'E13A', 'numbers_05_02.png');


insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (344, 'U+1f6ad', '0xF0 0x9F 0x9A 0xAD', '0xD83D 0xDEAD', 'E208', 'numbers_05_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (345, 'U+1f17f', '0xF0 0x9F 0x85 0xBF', '0xD83C 0xDD7F', 'E14F', 'numbers_05_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (346, 'U+267F', '0xE2 0x99 0xBF', '0x267F', 'E20A', 'numbers_05_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (347, 'U+1f687', '0xF0 0x9F 0x9A 0x87', '0xD83D 0xDE87', 'E434', 'numbers_05_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (348, 'U+1f6be', '0xF0 0x9F 0x9A 0xBE', '0xD83D 0xDEBE', 'E309', 'numbers_05_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (349, 'U+3299', '0xE3 0x8A 0x99', '0x3299', 'E315', 'numbers_05_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (350, 'U+3297', '0xE3 0x8A 0x97', '0x3297', 'E30D', 'numbers_05_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (351, 'U+1f51e', '0xF0 0x9F 0x94 0x9E', '0xD83D 0xDD1E', 'E207', 'numbers_05_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (352, 'U+1f194', '0xF0 0x9F 0x86 0x94', '0xD83C 0xDD94', 'E229', 'numbers_05_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (353, 'U+2733', '0xE2 0x9C 0xB3', '0x2733', 'E206', 'numbers_06_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (354, 'U+2734', '0xE2 0x9C 0xB4', '0x2734', 'E205', 'numbers_06_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (355, 'U+1F49F', '0xF0 0x9F 0x92 0x9F', '0xD83D 0xDC9F', 'E204', 'numbers_06_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (356, 'U+1F19A', '0xF0 0x9F 0x86 0x9A', '0xD83C 0xDD9A', 'E12E', 'numbers_06_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (357, 'U+1F4F3', '0xF0 0x9F 0x93 0xB3', '0xD83D 0xDCF3', 'E250', 'numbers_06_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (358, 'U+1F4F4', '0xF0 0x9F 0x93 0xB4', '0xD83D 0xDCF4', 'E251', 'numbers_06_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (359, 'U+1F4B9', '0xF0 0x9F 0x92 0xB9', '0xD83D 0xDCB9', 'E14A', 'numbers_06_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (360, 'U+1F4B1', '0xF0 0x9F 0x92 0xB1', '0xD83D 0xDCB1', 'E149', 'numbers_06_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (361, 'U+2648', '0xE2 0x99 0x88', '0x2648', 'E23F', 'numbers_06_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (362, 'U+2649', '0xE2 0x99 0x89', '0x2649', 'E240', 'numbers_06_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (363, 'U+264A', '0xE2 0x99 0x8A', '0x264A', 'E241', 'numbers_06_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (364, 'U+264B', '0xE2 0x99 0x8B', '0x264B', 'E242', 'numbers_07_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (365, 'U+264C', '0xE2 0x99 0x8C', '0x264C', 'E243', 'numbers_07_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (366, 'U+264D', '0xE2 0x99 0x8D', '0x264D', 'E244', 'numbers_07_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (367, 'U+264E', '0xE2 0x99 0x8E', '0x264E', 'E245', 'numbers_07_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (368, 'U+264F', '0xE2 0x99 0x8F', '0x264F', 'E246', 'numbers_07_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (369, 'U+2650', '0xE2 0x99 0x90', '0x2650', 'E247', 'numbers_07_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (370, 'U+2651', '0xE2 0x99 0x91', '0x2651', 'E248', 'numbers_07_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (371, 'U+2652', '0xE2 0x99 0x92', '0x2652', 'E249', 'numbers_07_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (372, 'U+2653', '0xE2 0x99 0x93', '0x2653', 'E24A', 'numbers_07_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (373, 'U+26CE', '0xE2 0x9B 0x8E', '0x26CE', 'E24B', 'numbers_07_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (374, 'U+1F52F', '0xF0 0x9F 0x94 0xAF', '0xD83D 0xDD2F', 'E23E', 'numbers_07_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (375, 'U+1F170', '0xF0 0x9F 0x85 0xB0', '0xD83C 0xDD70', 'E532', 'numbers_08_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (376, 'U+1F171', '0xF0 0x9F 0x85 0xB1', '0xD83C 0xDD71', 'E533', 'numbers_08_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (377, 'U+1F18E', '0xF0 0x9F 0x86 0x8E', '0xD83C 0xDD8E', 'E534', 'numbers_08_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (378, 'U+1F17E', '0xF0 0x9F 0x85 0xBE', '0xD83C 0xDD7E', 'E535', 'numbers_08_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (379, 'U+1F532', '0xF0 0x9F 0x94 0xB2', '0xD83D 0xDD32', 'E21A', 'numbers_08_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (380, 'U+1F534', '0xF0 0x9F 0x94 0xB4', '0xD83D 0xDD34', 'E219', 'numbers_08_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (381, 'U+1F533', '0xF0 0x9F 0x94 0xB3', '0xD83D 0xDD33', 'E21B', 'numbers_08_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (382, 'U+1F55B', '0xF0 0x9F 0x95 0x9B', '0xD83D 0xDD5B', 'E02F', 'numbers_08_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (383, 'U+1F550', '0xF0 0x9F 0x95 0x90', '0xD83D 0xDD50', 'E024', 'numbers_08_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (384, 'U+1F551', '0xF0 0x9F 0x95 0x91', '0xD83D 0xDD51', 'E025', 'numbers_08_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (385, 'U+1F552', '0xF0 0x9F 0x95 0x92', '0xD83D 0xDD52', 'E026', 'numbers_08_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (386, 'U+1F553', '0xF0 0x9F 0x95 0x93', '0xD83D 0xDD53', 'E027', 'numbers_09_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (387, 'U+1F554', '0xF0 0x9F 0x95 0x94', '0xD83D 0xDD54', 'E028', 'numbers_09_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (388, 'U+1F555', '0xF0 0x9F 0x95 0x95', '0xD83D 0xDD55', 'E029', 'numbers_09_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (389, 'U+1F556', '0xF0 0x9F 0x95 0x96', '0xD83D 0xDD56', 'E02A', 'numbers_09_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (390, 'U+1F557', '0xF0 0x9F 0x95 0x97', '0xD83D 0xDD57', 'E02B', 'numbers_09_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (391, 'U+1F558', '0xF0 0x9F 0x95 0x98', '0xD83D 0xDD58', 'E02C', 'numbers_09_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (392, 'U+1F559', '0xF0 0x9F 0x95 0x99', '0xD83D 0xDD59', 'E02D', 'numbers_09_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (393, 'U+1F55A', '0xF0 0x9F 0x95 0x9A', '0xD83D 0xDD5A', 'E02E', 'numbers_09_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (394, 'U+2B55', '0xE2 0xAD 0x95', '0x2B55', 'E332', 'numbers_09_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (395, 'U+274C', '0xE2 0x9D 0x8C', '0x274C', 'E333', 'numbers_09_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (396, 'U+00A9', '0xC2 0xA9', '0xA9', 'E24E', 'numbers_09_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (397, 'U+00AE', '0xC2 0xAE', '0xAE', 'E24F', 'numbers_10_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (398, 'U+2122', '0xE2 0x84 0xA2', '0x2122', 'E537', 'numbers_10_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (399, 'U+1F3E0', '0xF0 0x9F 0x8F 0xA0', '0xD83C 0xDFE0', 'E036', 'cars_01_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (400, 'U+1F3EB', '0xF0 0x9F 0x8F 0xAB', '0xD83C 0xDFEB', 'E157', 'cars_01_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (401, 'U+1F3E2', '0xF0 0x9F 0x8F 0xA2', '0xD83C 0xDFE2', 'E038', 'cars_01_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (402, 'U+1F3E3', '0xF0 0x9F 0x8F 0xA3', '0xD83C 0xDFE3', 'E153', 'cars_01_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (403, 'U+1F3E5', '0xF0 0x9F 0x8F 0xA5', '0xD83C 0xDFE5', 'E155', 'cars_01_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (404, 'U+1F3E6', '0xF0 0x9F 0x8F 0xA6', '0xD83C 0xDFE6', 'E14D', 'cars_01_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (405, 'U+1F3EA', '0xF0 0x9F 0x8F 0xAA', '0xD83C 0xDFEA', 'E156', 'cars_01_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (406, 'U+1F3E9', '0xF0 0x9F 0x8F 0xA9', '0xD83C 0xDFE9', 'E501', 'cars_01_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (407, 'U+1F3E8', '0xF0 0x9F 0x8F 0xA8', '0xD83C 0xDFE8', 'E158', 'cars_01_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (408, 'U+1F492', '0xF0 0x9F 0x92 0x92', '0xD83D 0xDC92', 'E43D', 'cars_01_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (1, 'U+1F604', '0xF0 0x9F 0x98 0x84', '0xD83D 0xDE04', 'E415', 'smiles_01_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (2, 'U+1F60A', '0xF0 0x9F 0x98 0x8A', '0xD83D 0xDE0A', 'E056', 'smiles_01_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (3, 'U+1F603', '0xF0 0x9F 0x98 0x83', '0xD83D 0xDE03', 'E057', 'smiles_01_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (4, 'U+263A', '0xE2 0x98 0xBA', '0x263A', 'E414', 'smiles_01_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (5, 'U+1F609', '0xF0 0x9F 0x98 0x89', '0xD83D 0xDE09', 'E405', 'smiles_01_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (6, 'U+1F60D', '0xF0 0x9F 0x98 0x8D', '0xD83D 0xDE0D', 'E106', 'smiles_01_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (7, 'U+1F618', '0xF0 0x9F 0x98 0x98', '0xD83D 0xDE18', 'E418', 'smiles_01_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (8, 'U+1F61A', '0xF0 0x9F 0x98 0x9A', '0xD83D 0xDE1A', 'E417', 'smiles_01_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (9, 'U+1F633', '0xF0 0x9F 0x98 0xB3', '0xD83D 0xDE33', 'E40D', 'smiles_01_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (10, 'U+1F60C', '0xF0 0x9F 0x98 0x8C', '0xD83D 0xDE0C', 'E40A', 'smiles_01_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (11, 'U+1F601', '0xF0 0x9F 0x98 0x81', '0xD83D 0xDE01', 'E404', 'smiles_01_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (12, 'U+1F61C', '0xF0 0x9F 0x98 0x9C', '0xD83D 0xDE1C', 'E105', 'smiles_02_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (13, 'U+1F61D', '0xF0 0x9F 0x98 0x9D', '0xD83D 0xDE1D', 'E409', 'smiles_02_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (14, 'U+1F612', '0xF0 0x9F 0x98 0x92', '0xD83D 0xDE12', 'E40E', 'smiles_02_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (15, 'U+1F60F', '0xF0 0x9F 0x98 0x8F', '0xD83D 0xDE0F', 'E402', 'smiles_02_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (16, 'U+1F613', '0xF0 0x9F 0x98 0x93', '0xD83D 0xDE13', 'E108', 'smiles_02_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (17, 'U+1F614', '0xF0 0x9F 0x98 0x94', '0xD83D 0xDE14', 'E403', 'smiles_02_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (18, 'U+1F61E', '0xF0 0x9F 0x98 0x9E', '0xD83D 0xDE1E', 'E058', 'smiles_02_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (19, 'U+1F616', '0xF0 0x9F 0x98 0x96', '0xD83D 0xDE16', 'E407', 'smiles_02_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (20, 'U+1F625', '0xF0 0x9F 0x98 0xA5', '0xD83D 0xDE25', 'E401', 'smiles_02_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (21, 'U+1F630', '0xF0 0x9F 0x98 0xB0', '0xD83D 0xDE30', 'E40F', 'smiles_02_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (22, 'U+1F628', '0xF0 0x9F 0x98 0xA8', '0xD83D 0xDE28', 'E40B', 'smiles_02_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (23, 'U+1F623', '0xF0 0x9F 0x98 0xA3', '0xD83D 0xDE23', 'E406', 'smiles_03_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (24, 'U+1F622', '0xF0 0x9F 0x98 0xA2', '0xD83D 0xDE22', 'E413', 'smiles_03_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (25, 'U+1F62D', '0xF0 0x9F 0x98 0xAD', '0xD83D 0xDE2D', 'E411', 'smiles_03_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (26, 'U+1F602', '0xF0 0x9F 0x98 0x82', '0xD83D 0xDE02', 'E412', 'smiles_03_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (27, 'U+1F632', '0xF0 0x9F 0x98 0xB2', '0xD83D 0xDE32', 'E410', 'smiles_03_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (28, 'U+1F631', '0xF0 0x9F 0x98 0xB1', '0xD83D 0xDE31', 'E107', 'smiles_03_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (29, 'U+1F620', '0xF0 0x9F 0x98 0xA0', '0xD83D 0xDE20', 'E059', 'smiles_03_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (30, 'U+1F621', '0xF0 0x9F 0x98 0xA1', '0xD83D 0xDE21', 'E416', 'smiles_03_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (31, 'U+1F62A', '0xF0 0x9F 0x98 0xAA', '0xD83D 0xDE2A', 'E408', 'smiles_03_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (32, 'U+1F637', '0xF0 0x9F 0x98 0xB7', '0xD83D 0xDE37', 'E40C', 'smiles_03_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (33, 'U+1F47F', '0xF0 0x9F 0x91 0xBF', '0xD83D 0xDC7F', 'E11A', 'smiles_03_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (34, 'U+1F47D', '0xF0 0x9F 0x91 0xBD', '0xD83D 0xDC7D', 'E10C', 'smiles_04_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (35, 'U+1F49B', '0xF0 0x9F 0x92 0x9B', '0xD83D 0xDC9B', 'E32C', 'smiles_04_02.png');


insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (36, 'U+1F499', '0xF0 0x9F 0x92 0x99', '0xD83D 0xDC99', 'E32A', 'smiles_04_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (37, 'U+1F49C', '0xF0 0x9F 0x92 0x9C', '0xD83D 0xDC9C', 'E32D', 'smiles_04_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (38, 'U+1F497', '0xF0 0x9F 0x92 0x97', '0xD83D 0xDC97', 'E328', 'smiles_04_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (39, 'U+1F49A', '0xF0 0x9F 0x92 0x9A', '0xD83D 0xDC9A', 'E32B', 'smiles_04_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (40, 'U+2764', '0xE2 0x9D 0xA4', '0x2764', 'E022', 'smiles_04_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (41, 'U+1F494', '0xF0 0x9F 0x92 0x94', '0xD83D 0xDC94', 'E023', 'smiles_04_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (42, 'U+1F493', '0xF0 0x9F 0x92 0x93', '0xD83D 0xDC93', 'E327', 'smiles_04_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (43, 'U+1F498', '0xF0 0x9F 0x92 0x98', '0xD83D 0xDC98', 'E329', 'smiles_04_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (44, 'U+2728', '0xE2 0x9C 0xA8', '0x2728', 'E32E', 'smiles_04_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (45, 'U+1F31F', '0xF0 0x9F 0x8C 0x9F', '0xD83C 0xDF1F', 'E335', 'smiles_05_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (46, 'U+1F4A2', '0xF0 0x9F 0x92 0xA2', '0xD83D 0xDCA2', 'E334', 'smiles_05_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (47, 'U+2755', '0xE2 0x9D 0x95', '0x2755', 'E337', 'smiles_05_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (48, 'U+2754', '0xE2 0x9D 0x94', '0x2754', 'E336', 'smiles_05_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (49, 'U+1F4A4', '0xF0 0x9F 0x92 0xA4', '0xD83D 0xDCA4', 'E13C', 'smiles_05_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (50, 'U+1F4A8', '0xF0 0x9F 0x92 0xA8', '0xD83D 0xDCA8', 'E330', 'smiles_05_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (51, 'U+1F4A6', '0xF0 0x9F 0x92 0xA6', '0xD83D 0xDCA6', 'E331', 'smiles_05_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (52, 'U+1F3B6', '0xF0 0x9F 0x8E 0xB6', '0xD83C 0xDFB6', 'E326', 'smiles_05_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (53, 'U+1F3B5', '0xF0 0x9F 0x8E 0xB5', '0xD83C 0xDFB5', 'E03E', 'smiles_05_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (54, 'U+1F525', '0xF0 0x9F 0x94 0xA5', '0xD83D 0xDD25', 'E11D', 'smiles_05_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (55, 'U+1F4A9', '0xF0 0x9F 0x92 0xA9', '0xD83D 0xDCA9', 'E05A', 'smiles_05_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (56, 'U+1F44D', '0xF0 0x9F 0x91 0x8D', '0xD83D 0xDC4D', 'E00E', 'smiles_06_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (57, 'U+1F44E', '0xF0 0x9F 0x91 0x8E', '0xD83D 0xDC4E', 'E421', 'smiles_06_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (58, 'U+1F44C', '0xF0 0x9F 0x91 0x8C', '0xD83D 0xDC4C', 'E420', 'smiles_06_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (59, 'U+1F44A', '0xF0 0x9F 0x91 0x8A', '0xD83D 0xDC4A', 'E00D', 'smiles_06_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (60, 'U+270A', '0xE2 0x9C 0x8A', '0x270A', 'E010', 'smiles_06_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (61, 'U+270C', '0xE2 0x9C 0x8C', '0x270C', 'E011', 'smiles_06_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (62, 'U+1F44B', '0xF0 0x9F 0x91 0x8B', '0xD83D 0xDC4B', 'E41E', 'smiles_06_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (63, 'U+270B', '0xE2 0x9C 0x8B', '0x270B', 'E012', 'smiles_06_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (64, 'U+1F450', '0xF0 0x9F 0x91 0x90', '0xD83D 0xDC50', 'E422', 'smiles_06_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (65, 'U+1F446', '0xF0 0x9F 0x91 0x86', '0xD83D 0xDC46', 'E22E', 'smiles_06_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (66, 'U+1F447', '0xF0 0x9F 0x91 0x87', '0xD83D 0xDC47', 'E22F', 'smiles_06_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (67, 'U+1F449', '0xF0 0x9F 0x91 0x89', '0xD83D 0xDC49', 'E231', 'smiles_07_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (68, 'U+1F448', '0xF0 0x9F 0x91 0x88', '0xD83D 0xDC48', 'E230', 'smiles_07_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (69, 'U+1F64C', '0xF0 0x9F 0x99 0x8C', '0xD83D 0xDE4C', 'E427', 'smiles_07_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (70, 'U+1F64F', '0xF0 0x9F 0x99 0x8F', '0xD83D 0xDE4F', 'E41D', 'smiles_07_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (71, 'U+261D', '0xE2 0x98 0x9D', '0x261D', 'E00F', 'smiles_07_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (72, 'U+1F44F', '0xF0 0x9F 0x91 0x8F', '0xD83D 0xDC4F', 'E41F', 'smiles_07_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (73, 'U+1F4AA', '0xF0 0x9F 0x92 0xAA', '0xD83D 0xDCAA', 'E14C', 'smiles_07_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (74, 'U+1F6B6', '0xF0 0x9F 0x9A 0xB6', '0xD83D 0xDEB6', 'E201', 'smiles_07_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (75, 'U+1F3C3', '0xF0 0x9F 0x8F 0x83', '0xD83C 0xDFC3', 'E115', 'smiles_07_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (76, 'U+1F46B', '0xF0 0x9F 0x91 0xAB', '0xD83D 0xDC6B', 'E428', 'smiles_07_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (77, 'U+1F483', '0xF0 0x9F 0x92 0x83', '0xD83D 0xDC83', 'E51F', 'smiles_07_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (78, 'U+1F46F', '0xF0 0x9F 0x91 0xAF', '0xD83D 0xDC6F', 'E429', 'smiles_08_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (79, 'U+1F646', '0xF0 0x9F 0x99 0x86', '0xD83D 0xDE46', 'E424', 'smiles_08_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (80, 'U+1F645', '0xF0 0x9F 0x99 0x85', '0xD83D 0xDE45', 'E423', 'smiles_08_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (81, 'U+1F481', '0xF0 0x9F 0x92 0x81', '0xD83D 0xDC81', 'E253', 'smiles_08_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (82, 'U+1F647', '0xF0 0x9F 0x99 0x87', '0xD83D 0xDE47', 'E426', 'smiles_08_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (83, 'U+1F48F', '0xF0 0x9F 0x92 0x8F', '0xD83D 0xDC8F', 'E111', 'smiles_08_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (84, 'U+1F491', '0xF0 0x9F 0x92 0x91', '0xD83D 0xDC91', 'E425', 'smiles_08_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (85, 'U+1F486', '0xF0 0x9F 0x92 0x86', '0xD83D 0xDC86', 'E31E', 'smiles_08_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (86, 'U+1F487', '0xF0 0x9F 0x92 0x87', '0xD83D 0xDC87', 'E31F', 'smiles_08_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (87, 'U+1F485', '0xF0 0x9F 0x92 0x85', '0xD83D 0xDC85', 'E31D', 'smiles_08_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (88, 'U+1F466', '0xF0 0x9F 0x91 0xA6', '0xD83D 0xDC66', 'E001', 'smiles_08_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (89, 'U+1F467', '0xF0 0x9F 0x91 0xA7', '0xD83D 0xDC67', 'E002', 'smiles_09_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (90, 'U+1F469', '0xF0 0x9F 0x91 0xA9', '0xD83D 0xDC69', 'E005', 'smiles_09_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (91, 'U+1F468', '0xF0 0x9F 0x91 0xA8', '0xD83D 0xDC68', 'E004', 'smiles_09_03.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (92, 'U+1F476', '0xF0 0x9F 0x91 0xB6', '0xD83D 0xDC76', 'E51A', 'smiles_09_04.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (93, 'U+1F475', '0xF0 0x9F 0x91 0xB5', '0xD83D 0xDC75', 'E519', 'smiles_09_05.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (94, 'U+1F474', '0xF0 0x9F 0x91 0xB4', '0xD83D 0xDC74', 'E518', 'smiles_09_06.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (95, 'U+1F471', '0xF0 0x9F 0x91 0xB1', '0xD83D 0xDC71', 'E515', 'smiles_09_07.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (96, 'U+1F472', '0xF0 0x9F 0x91 0xB2', '0xD83D 0xDC72', 'E516', 'smiles_09_08.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (97, 'U+1F473', '0xF0 0x9F 0x91 0xB3', '0xD83D 0xDC73', 'E517', 'smiles_09_09.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (98, 'U+1F477', '0xF0 0x9F 0x91 0xB7', '0xD83D 0xDC77', 'E51B', 'smiles_09_10.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (99, 'U+1F46E', '0xF0 0x9F 0x91 0xAE', '0xD83D 0xDC6E', 'E152', 'smiles_09_11.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (100, 'U+1F47C', '0xF0 0x9F 0x91 0xBC', '0xD83D 0xDC7C', 'E04E', 'smiles_10_01.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (101, 'U+1F478', '0xF0 0x9F 0x91 0xB8', '0xD83D 0xDC78', 'E51C', 'smiles_10_02.png');
insert into LF_WEIX_EMOJI (ID, SUNICODE, SUTF8, SUTF16, SSBUNICODE, FILENAME)
values (102, 'U+1F482', '0xF0 0x9F 0x92 0x82', '0xD83D 0xDC82', 'E51E', 'smiles_10_03.png');


insert into LF_WX_DATATYPE (NAME, UPDATETIME, CREATDATE, CORP_CODE)
values ('消费意向调查',Current TIMESTAMP , Current TIMESTAMP, '100001');
insert into LF_WX_DATATYPE (NAME, UPDATETIME, CREATDATE, CORP_CODE)
values ('满意度调查', Current TIMESTAMP, Current TIMESTAMP, '100001');
insert into LF_WX_DATATYPE (NAME, UPDATETIME, CREATDATE, CORP_CODE)
values ('客户留言', Current TIMESTAMP, Current TIMESTAMP, '100001');
insert into LF_WX_DATATYPE (NAME, UPDATETIME, CREATDATE, CORP_CODE)
values ('产品调查', Current TIMESTAMP, Current TIMESTAMP, '100001');
insert into LF_WX_DATATYPE (NAME, UPDATETIME, CREATDATE, CORP_CODE)
values ('优秀员工投票', Current TIMESTAMP, Current TIMESTAMP, '100001');


insert into LF_WX_SORT (ID, NAME, DESCRIPTION, TYPE, MODIFYID, MODIFYDATE, CREATID, CREATDATE, PARENTID, FILETYPE, CORP_CODE, SORT_PATH)
values (20, '文件', null, 1, null, Current TIMESTAMP, 0, Current TIMESTAMP, -1, 2, '0', '-1/20/');
insert into LF_WX_SORT (ID, NAME, DESCRIPTION, TYPE, MODIFYID, MODIFYDATE, CREATID, CREATDATE, PARENTID, FILETYPE, CORP_CODE, SORT_PATH)
values (21, '视频', null, 1, null, Current TIMESTAMP, 0, Current TIMESTAMP, -1, 1, '0', '-1/21/');
insert into LF_WX_SORT (ID, NAME, DESCRIPTION, TYPE, MODIFYID, MODIFYDATE, CREATID, CREATDATE, PARENTID, FILETYPE, CORP_CODE, SORT_PATH)
values (22, '图片', null, 1, null, Current TIMESTAMP, 0, Current TIMESTAMP, -1, 3, '0', '-1/22/');
insert into LF_WX_SORT (ID, NAME, DESCRIPTION, TYPE, MODIFYID, MODIFYDATE, CREATID, CREATDATE, PARENTID, FILETYPE, CORP_CODE, SORT_PATH)
values (23, '其他', null, 1, null,Current TIMESTAMP, 0, Current TIMESTAMP, -1, 0, '0', '-1/23/');


insert into OT_LBS_PUSHSET (PUSHTYPE, IMGURL, NOTE, RADIUS, AUTORADIUS, PUSHCOUNT, AUTOMORE, CORP_CODE, CREATETIME, MODITYTIME)
values (1, null, null, '2', 2, 3, 2, '100001', CURRENT  TIMESTAMP, null);


INSERT INTO OT_SIT_INFO (S_ID, TYPE_ID, NAME, URL, IS_SYSTEM, CORP_CODE, CREATETIME, MODITYTIME) VALUES (1, 1, '微站名称', 'S20131223110646320YA', 1, '100001', '2013-12-24 11:32:41.000', '2013-12-28 11:51:44.000');


INSERT INTO OT_SIT_PAGE (PAGE_ID, S_ID, PAGE_TYPE, NAME, URL, SEQ_NUM, CORP_CODE, CREATETIME, MODITYTIME) VALUES (1, 1, 'normal_page1', '首页', 'P20131223110646320YA', 1, '100001', '2013-12-25 14:24:58.000', null);

INSERT INTO OT_SIT_PAGE (PAGE_ID, S_ID, PAGE_TYPE, NAME, URL, SEQ_NUM, CORP_CODE, CREATETIME, MODITYTIME) VALUES (2, 1, 'normal_page2', '多标签页', 'P20131223110646321YB', 2, '100001', '2013-12-25 14:28:12.000', null);

INSERT INTO OT_SIT_PAGE (PAGE_ID, S_ID, PAGE_TYPE, NAME, URL, SEQ_NUM, CORP_CODE, CREATETIME, MODITYTIME) VALUES (3, 1, 'normal_page3', '内容页', 'P20131223110646322YC', 3, '100001', '2013-12-25 14:30:12.000', null);

INSERT INTO OT_SIT_PAGE (PAGE_ID, S_ID, PAGE_TYPE, NAME, URL, SEQ_NUM, CORP_CODE, CREATETIME, MODITYTIME) VALUES (4, 1, 'normal_page4', '目录页', 'P20131223110646322YD', 4, '100001', '2013-12-25 14:32:37.000', null);

INSERT INTO OT_SIT_PLANT ( PLANT_TYPE, PAGE_ID, NAME, FEILD_NAMES, FEILD_VALUES, CORP_CODE, CREATETIME, MODITYTIME, S_ID) VALUES ( 'normal_head', 1, '滚动图片控件', null, '{"plantId":"1","plantType":"normal_head","count":3,"items":[{"head_link":null,"head_tp":"0","head_tpvalue":"","head_tpnote":"","head_imgurl":"wzgl\/site\/img\/wzpic_b1.png","head_title":"移动专家"},{"head_link":null,"head_tp":"0","head_tpvalue":"","head_tpnote":"","head_imgurl":"wzgl\/site\/img\/wzpic_b2.jpg","head_title":"执着的信念"},{"head_link":null,"head_tp":"0","head_tpvalue":"","head_tpnote":"","head_imgurl":"wzgl\/site\/img\/wzpic_b3.jpg","head_title":"专家"}]}', '100001', '2013-12-25 14:42:00.000', '2013-12-30 14:55:02.000', 1);

INSERT INTO OT_SIT_PLANT ( PLANT_TYPE, PAGE_ID, NAME, FEILD_NAMES, FEILD_VALUES, CORP_CODE, CREATETIME, MODITYTIME, S_ID) VALUES ( 'normal_link', 1, '联系方式控件', null, '{"plantId":"2","plantType":"normal_link","count":1,"items":[{"link_bgcolor":"4791d1","link_note":"联系方式","link_phone":"15220289885"}]}', '100001', '2013-12-25 14:42:03.000', '2013-12-30 14:59:40.000', 1);

INSERT INTO OT_SIT_PLANT ( PLANT_TYPE, PAGE_ID, NAME, FEILD_NAMES, FEILD_VALUES, CORP_CODE, CREATETIME, MODITYTIME, S_ID) VALUES ( 'normal_list', 1, '内容列表控件', null, '{"plantId":"3","plantType":"normal_list","count":5,"items":[{"list_tp":"0","list_imgurl":"wzgl\/site\/img\/normal_list1.jpg","list_note":"移动信息化专家","list_tpnote":"","list_tpvalue":"","list_title":"关于梦网"},{"list_tp":"0","list_imgurl":"wzgl\/site\/img\/normal_list2.jpg","list_note":"产品介绍","list_tpnote":"","list_tpvalue":"","list_title":"产品中心"},{"list_tp":"0","list_imgurl":"wzgl\/site\/img\/normal_list3.jpg","list_note":"企业新闻","list_tpnote":"","list_tpvalue":"","list_title":"新闻中心"},{"list_tp":"0","list_imgurl":"wzgl\/site\/img\/normal_list3.jpg","list_note":"行业解决方案","list_tpnote":"","list_tpvalue":"","list_title":"服务支持"}]}', '100001', '2013-12-25 14:42:06.000', '2013-12-30 15:02:50.000', 1);

INSERT INTO OT_SIT_PLANT ( PLANT_TYPE, PAGE_ID, NAME, FEILD_NAMES, FEILD_VALUES, CORP_CODE, CREATETIME, MODITYTIME, S_ID) VALUES ( 'normal_menu', 1, '底部菜单控件', null, '{"plantId":"4","plantType":"normal_menu","count":4,"items":[{"menu_bgcolor":"4791d1","menu_tp":"0","menu_fontcolor":"FFFFFF","menu_title":"关于梦网","menu_tpvalue":"","menu_tpnote":""},{"menu_bgcolor":"4791d1","menu_tp":"0","menu_fontcolor":"FFFFFF","menu_title":"产品中心","menu_tpvalue":"","menu_tpnote":""},{"menu_bgcolor":"4791d1","menu_tp":"0","menu_fontcolor":"FFFFFF","menu_title":"新闻中心","menu_tpvalue":"","menu_tpnote":""},{"menu_bgcolor":"4791d1","menu_tp":"0","menu_fontcolor":"FFFFFF","menu_title":"服务支持","menu_tpvalue":"","menu_tpnote":""}]}', '100001', '2013-12-25 14:42:09.000', null, 1);

INSERT INTO OT_SIT_PLANT ( PLANT_TYPE, PAGE_ID, NAME, FEILD_NAMES, FEILD_VALUES, CORP_CODE, CREATETIME, MODITYTIME, S_ID) VALUES ( 'normal_tab', 2, '多标签页控件', null, '{"plantId":"5","plantType":"normal_tab","count":3,"items":[{"tab_content":"内容一","tab_name":"公司名称","tab_title":"公司名称","tab_imgurl":"wzgl\/site\/img\/wzpic_b1.png"},{"tab_content":"内容二","tab_name":"客户合作","tab_title":"客户合作","tab_imgurl":"wzgl\/site\/img\/wzpic_b2.jpg"},{"tab_content":"内容三","tab_name":"加盟我们","tab_title":"加盟我们","tab_imgurl":"wzgl\/site\/img\/wzpic_b3.jpg"}]}', '100001', '2013-12-27 10:40:23.000', '2013-12-31 15:47:41.000', 1);

INSERT INTO OT_SIT_PLANT ( PLANT_TYPE, PAGE_ID, NAME, FEILD_NAMES, FEILD_VALUES, CORP_CODE, CREATETIME, MODITYTIME, S_ID) VALUES ( 'normal_content', 3, '内容显示控件', null, '{"plantId":"6","plantType":"normal_content","count":1,"items":[{"content_imgurl":"wzgl\/site\/img\/wzpic_b1.png","content_body":"内容一","content_title":"关于梦网"}]}', '100001', '2013-12-27 10:40:35.000', '2013-12-31 15:52:25.000', 1);

INSERT INTO OT_SIT_PLANT ( PLANT_TYPE, PAGE_ID, NAME, FEILD_NAMES, FEILD_VALUES, CORP_CODE, CREATETIME, MODITYTIME, S_ID) VALUES ( 'normal_scontent', 4, '简单内容显示控件', null, '{"plantId":"7","plantType":"normal_scontent","count":1,"items":[{"content_imgurl":"wzgl\/site\/img\/wzpic_b1.png","content_body":"内容一","content_title":"标题一"}]}', '100001', '2013-12-27 10:40:46.000', '2013-12-31 16:02:08.000', 1);

INSERT INTO OT_SIT_PLANT ( PLANT_TYPE, PAGE_ID, NAME, FEILD_NAMES, FEILD_VALUES, CORP_CODE, CREATETIME, MODITYTIME, S_ID) VALUES ( 'normal_list', 4, '列表控件', null, '{"plantId":"8","plantType":"normal_list","count":4,"items":[{"list_tp":"0","list_imgurl":"wzgl\/site\/img\/normal_list1.jpg","list_note":"移动信息化专家","list_tpnote":"","list_tpvalue":"","list_title":"关于梦网"},{"list_tp":"0","list_imgurl":"wzgl\/site\/img\/normal_list2.jpg","list_note":"产品介绍","list_tpnote":"","list_tpvalue":"","list_title":"产品中心"},{"list_tp":"0","list_imgurl":"wzgl\/site\/img\/normal_list3.jpg","list_note":"企业新闻","list_tpnote":"","list_tpvalue":"","list_title":"新闻中心"},{"list_tp":"0","list_imgurl":"wzgl\/site\/img\/normal_list3.jpg","list_note":"行业解决方案","list_tpnote":"","list_tpvalue":"","list_title":"服务支持"}]}', '100001', '2013-12-27 10:40:48.000', '2013-12-31 16:06:39.000', 1);


INSERT INTO OT_SIT_TYPE (NAME, IS_DEFAULT, PATTERN, IMG_URL, IMG_URL0, IMG_URL1, IMG_URL2, IMG_URL3, IS_SYSTEM, SEQ_NUM, CORP_CODE, CREATETIME, MODITYTIME) VALUES ('通用风格',1,0,'/site/img/normal_list.jpg','/site/img/normal_list_page1.png','/site/img/normal_list_page2.png','/site/img/normal_list_page3.png','/site/img/normal_list_page4.png',1,1,'100001','2013-12-24 11:39:02.000', null);

alter table lf_roles alter role_id restart with 10;
alter table LF_dep alter dep_id  restart with 2;
alter table LF_CLIDEP_CONN alter CONN_ID  restart with 2;
alter table LF_EMPDEP_CONN alter CONN_ID  restart with 2;
alter table LF_MATERIAL_SORT alter SORT_ID  restart with 2;
alter table LF_POSITION alter P_ID  restart with 2;
alter table LF_THIR_MENUCONTROL alter TID restart with 100;
alter table LF_WEIX_EMOJI alter ID restart with 500;
reorg table lf_roles;
reorg table lf_sysuser;
reorg table LF_dep;
reorg table LF_CLIDEP_CONN;
reorg table LF_EMPDEP_CONN;
reorg table LF_MATERIAL_SORT;
reorg table LF_POSITION;
reorg table LF_THIR_MENUCONTROL;
reorg table LF_WEIX_EMOJI;


---V5.5.0.225-V6.2.0.275empstart----
--44：向网关发送HTTP请求超时时间
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='HTTP_REQUEST_TIMEOUT';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=44 AND GLOBALKEY=GLKEYSTR) THEN
INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE) VALUES (44, GLKEYSTR, 120000, NULL);
END IF;
END;

--45：向网关发送HTTP请求响应超时时间
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='HTTP_RESPONSE_TIMEOUT';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=45 AND GLOBALKEY=GLKEYSTR) THEN
INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE) VALUES (45, GLKEYSTR, 120000, NULL);
END IF;
END;

--46：MBOSS运营商余额接口密钥
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='MBOSS_KEY';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=46 AND GLOBALKEY=GLKEYSTR) THEN
INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE) VALUES (46, GLKEYSTR, NULL, '775047B2F2925858');
END IF;
END;

--47：向MBOSS查询运营商余额间隔时间
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='BALANCE_REQ_INTERVAL';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=47 AND GLOBALKEY=GLKEYSTR) THEN
INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE) VALUES (47, GLKEYSTR, 300000, NULL);
END IF;
END;

--48：查询运营商余额消息是否加密标识
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='BALANCE_MSG_ENCRYFLAG';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=48 AND GLOBALKEY=GLKEYSTR) THEN
INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE) VALUES (48, GLKEYSTR, 1, NULL);
END IF;
END;

--49: 日志打印间隔时间
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='LOG_PRINT_INTERVAL';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=49 AND GLOBALKEY=GLKEYSTR) THEN
INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE) VALUES (49, 'LOG_PRINT_INTERVAL', 20000, NULL);
END IF;
END;


--50:企业黑名单最大数量
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='BLACK_MAXCOUNT';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=50 AND GLOBALKEY=GLKEYSTR) THEN
INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE) VALUES (50, 'BLACK_MAXCOUNT', 5000000, NULL);
END IF;
END;

--记录最后一次查询时间，用于判断最后一次查询时间与当前时间是否超过（49:向MBOSS查询运营商余额间隔时间）查询间隔时间
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_SPFEE' AND COLNAME='QUERY_TIME') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_SPFEE ADD QUERY_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_SPFEE;

--下面两个是更新运营商余额查询地址，现在是调用MBOSS接口
UPDATE A_GWACCOUNT SET FEEURL='http://61.145.229.29:8015/mboss/WebService/SubToUnionInterface.asmx?WSDL' 
WHERE FEEURL IS NOT NULL AND LTRIM(RTRIM(FEEURL))<>''; 
UPDATE LF_SPFEE SET SPFEE_URL='http://61.145.229.29:8015/mboss/WebService/SubToUnionInterface.asmx?WSDL'
WHERE SPFEE_URL IS NOT NULL AND LTRIM(RTRIM(SPFEE_URL))<>'';

--1.移动财务－新增[发送任务查看] 名称：发送任务查看 /ycw_sendTask.htm
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=590;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
VALUES (PRIID, 15, 1, '查看', '1260-1300-0', '发送任务查看', '移动财务', '1260-1300', '/ycw_sendTask.htm');
END IF;
END;

--2.移动财务 - 新增[发送历史查询] 名称：发送历史查询 /ycw_sendTaskHis.htm
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=595;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
VALUES (PRIID, 15, 1, '查看', '1260-1400-0', '发送历史查询', '移动财务', '1260-1400', '/ycw_sendTaskHis.htm');
END IF;
END;


--3.员工生日祝福 - 新增[发送历史查询]      名称：发送历史查询/bir_empSendTask.htm
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2800;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
VALUES (PRIID, 16, 1, '查看', '1050-1800-0', '发送历史查询', '员工生日祝福', '1050-1800', '/bir_empSendTask.htm');
END IF;
END;

--4.客户生日祝福 - 新增[发送历史查询]      名称：发送历史查询/bir_cliSendTask.htm
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2810;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
VALUES (PRIID, 3, 1, '查看', '2300-1600-0', '发送历史查询', '客户生日祝福', '2300-1600', '/bir_cliSendTask.htm');
END IF;
END;

--1.移动财务－发送任务查看 加权限 
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=590;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(1,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=590;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(2,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=590;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(4,PRIID);
END IF;
END;

--2.移动财务－发送历史查询 加权限 
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=595;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(1,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=595;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(2,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=595;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(4,PRIID);
END IF;
END;

--3.员工生日祝福-发送历史查询 加权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2800;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(1,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2800;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(2,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2800;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(4,PRIID);
END IF;
END;


--4.客户生日祝福-发送历史查询 加权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2810;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(1,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2810;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(2,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2810;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(4,PRIID);
END IF;
END;


--去除公共表中重复GLOBALKEY的项
DELETE FROM LF_GLOBAL_VARIABLE WHERE GLOBALID IN (9,10,11,12,13,14,20,24,25);
--增加唯一约束
CREATE PROCEDURE ADDUQKEY
BEGIN ATOMIC 
IF NOT EXISTS(SELECT * FROM SYSCAT.KEYCOLUSE WHERE TABNAME='LF_GLOBAL_VARIABLE' AND COLNAME='GLOBALKEY' AND CONSTNAME='UQ_GKEY') THEN
   EXECUTE IMMEDIATE 'ALTER TABLE LF_GLOBAL_VARIABLE ADD CONSTRAINT UQ_GKEY UNIQUE(GLOBALKEY)';
END IF;
END;
CALL ADDUQKEY;
DROP PROCEDURE ADDUQKEY;
REORG TABLE LF_GLOBAL_VARIABLE;


--添加公共变量表的描述信息字段MEMO
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_GLOBAL_VARIABLE' AND COLNAME='MEMO') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_GLOBAL_VARIABLE ADD MEMO VARCHAR(32) NOT NULL WITH DEFAULT '' ''';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_GLOBAL_VARIABLE;


--模板可编辑标识
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='TMPEDITORFLAG';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=51 AND GLOBALKEY=GLKEYSTR) THEN
INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE,MEMO) VALUES (51, GLKEYSTR, 0, NULL,'模板可编辑标识');   
END IF;
END;

--黑名单支持最大数由5000000修改成10000000
UPDATE LF_GLOBAL_VARIABLE SET GLOBALVALUE=10000000,MEMO='黑名单支持最大数量' WHERE GLOBALID=50 AND GLOBALKEY='BLACK_MAXCOUNT';


--监控详情--业务监控详情mon_busDeatil.htm
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2160;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
VALUES (PRIID, 43, 1, '查看', '2900-1450-0', '业务监控详情', '监控详情', '2900-1450', '/mon_busDeatil.htm');
END IF;
END;

--监控详情--业务监控详情 加权限 
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2160;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(1,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2160;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(2,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2160;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(4,PRIID);
END IF;
END;


--监控管理--业务监控设置mon_busCfg.htm
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2161;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
	INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
	VALUES (PRIID, 44, 1, '查看', '3000-1600-0', '业务监控设置', '监控管理', '3000-1600', '/mon_busCfg.htm');
END IF;
END;

--监控管理--业务监控设置 加权限 
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2161;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER VALUES(1,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2161;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER VALUES(2,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2161;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER VALUES(4,PRIID);
END IF;
END;


CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_MON_BUSBASE') THEN
  EXECUTE IMMEDIATE '--业务监控基础信息表
CREATE TABLE LF_MON_BUSBASE
(
	ID BIGINT PRIMARY KEY  NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
                    START WITH +1  
                    INCREMENT BY +1  
                    MINVALUE +1  
                    MAXVALUE +2147483647  
                    NO CYCLE  
                    NO CACHE  
                    NO ORDER ),	--自增ID
	BUS_NAME VARCHAR(32) DEFAULT '' ''	NOT NULL,		--业务名称
	BUS_CODE VARCHAR(64) DEFAULT '' '' NOT NULL,		--业务编码
	AREA_CODE VARCHAR(512) DEFAULT '' '' NOT NULL,		--区域 多个区域以,隔开
	MONPHONE VARCHAR(256) DEFAULT '' '' NOT NULL,		--告警短信发送手机号
	BEGIN_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP ,	--监控开始时间
	END_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP ,	--监控结果时间
	MON_STATE INT DEFAULT 1 NOT NULL,				--监控状态0：关闭1：启用
	MODI_USERID	BIGINT DEFAULT 0 NOT NULL,			--最后更新记录的操作员ID 
	CORP_CODE VARCHAR(64) DEFAULT '' '' NOT NULL,		--企业编码
	CREATE_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP ,--创建时间
	UPDATE_TIME	TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP 	--更新时间
) IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;


CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_MON_BUSDATA') THEN
  EXECUTE IMMEDIATE '--业务监控数据信息表
CREATE TABLE LF_MON_BUSDATA
(
	ID BIGINT PRIMARY KEY  NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
                    START WITH +1  
                    INCREMENT BY +1  
                    MINVALUE +1  
                    MAXVALUE +2147483647  
                    NO CYCLE  
                    NO CACHE  
                    NO ORDER ),	--自增ID
	BUSBASE_ID BIGINT DEFAULT 0 NOT NULL,			--业务ID对应LF_MON_BUSBASE.ID
	BEGIN_HOUR INT DEFAULT 0 NOT NULL,		--开始时间
	END_HOUR INT DEFAULT 0 NOT NULL,		--结束时间
	MTHAVESND INT DEFAULT 0	NOT NULL,				--MT已发告警值	
	DEVIAT_HIGH	INT DEFAULT 0 NOT NULL,				--偏离率(高)	
	DEVIAT_LOW INT DEFAULT 0 NOT NULL,				--偏离率(低)	
	MON_LASTTIME INT DEFAULT 20000101 NOT NULL,		--最后一次告警时间YYYYMMDD 
	CORP_CODE VARCHAR(64) DEFAULT '' '' NOT NULL,		--企业编码
	CREATE_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP,--创建时间
	MODI_USERID BIGINT DEFAULT 0 NOT NULL			--最后更新记录的操作员ID 
) IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;


CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_BUSAREASEND') THEN
    EXECUTE IMMEDIATE '--业务区域发送统计表 主键：ID
CREATE TABLE LF_BUSAREASEND
(
	ID BIGINT PRIMARY KEY  NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
                    START WITH +1  
                    INCREMENT BY +1  
                    MINVALUE +1  
                    MAXVALUE +2147483647  
                    NO CYCLE  
                    NO CACHE  
                    NO ORDER ),	 --自增ID
	BUS_NAME VARCHAR(32) DEFAULT '' '' NOT NULL,		 --业务名称
	BUS_CODE VARCHAR(64) DEFAULT '' '' NOT NULL,		 --业务编码
	AREA_CODE VARCHAR(21) DEFAULT '' '' NOT NULL,		 --区域 多个以逗号隔开
	MTSENDCOUNT VARCHAR(512) DEFAULT '' '' NOT NULL,	 --记录每小时发送的总数，格式：H0=18000000&H1=200.........
	CORP_CODE VARCHAR(64) DEFAULT '' '' NOT NULL,		 --企业编码
	UPDATE_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP, --最后一次更新时间
	DATA_DATE INT DEFAULT 20000101 NOT NULL         --数据时间
)IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;



CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_MON_BUSINFO') THEN
  EXECUTE IMMEDIATE '--业务监控告警详情表
CREATE TABLE LF_MON_BUSINFO
(
	ID BIGINT PRIMARY KEY  NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
                    START WITH +1  
                    INCREMENT BY +1  
                    MINVALUE +1  
                    MAXVALUE +2147483647  
                    NO CYCLE  
                    NO CACHE  
                    NO ORDER ),	--自增ID
	BUS_NAME VARCHAR(32) DEFAULT '' '' NOT NULL,		--业务名称
	BUS_CODE VARCHAR(64) DEFAULT '' '' NOT NULL,		--业务编码	
	AREA_CODE VARCHAR(512) DEFAULT '' '' NOT NULL,	--区域多个区域以,隔开
	BEGIN_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP, --监控开始时间
	END_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP,	--监控结果时间
	BEGIN_HOUR INT DEFAULT 0 NOT NULL,		 		--开始时间段(小时)
	END_HOUR INT DEFAULT 0 NOT NULL, 				--开始时间段(小时)
	EVTTYPE	SMALLINT DEFAULT 0 NOT NULL,			--告警级别0：正常1：警告
	MTSENDCOUNT INT DEFAULT 0 NOT NULL,				--MT已发(条)	
	MTHAVESND INT DEFAULT 0 NOT NULL,				--MT已发告警值
	MON_DEVIAT VARCHAR(128) DEFAULT '' '' NOT NULL,	--告警偏离率（告警描述）
	MON_DES VARCHAR(128) DEFAULT  '' '' NOT NULL,		--告警说明		
	MONPHONE VARCHAR(256) DEFAULT '' '' NOT NULL,		--告警短信发送手机号
	CORP_CODE VARCHAR(64) DEFAULT '' '' NOT NULL,		--企业编码
	CREATE_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP--创建时间
)IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;



--程序信息表 增加数据库网络连接监控0：开启1：关闭
CREATE PROCEDURE "ADDCOLOUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_SPROCE' AND COLNAME='ISDBCONNECT') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_SPROCE ADD ISDBCONNECT INT DEFAULT 1 NOT NULL';
END IF;
END ;
CALL ADDCOLOUMNEXISTS;
DROP PROCEDURE ADDCOLOUMNEXISTS;
REORG TABLE LF_MON_SPROCE;

--程序动态信息表 数据库网络连接状态0：正常1：断开
CREATE PROCEDURE "ADDCOLOUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DPROCE' AND COLNAME='DBCONNECTSTATE') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DPROCE ADD DBCONNECTSTATE INT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLOUMNEXISTS;
DROP PROCEDURE ADDCOLOUMNEXISTS;
REORG TABLE LF_MON_DPROCE;

CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_BALANCE_PRI') THEN
  EXECUTE IMMEDIATE '--充值回收权限表
CREATE TABLE LF_BALANCE_PRI
(
	ID BIGINT PRIMARY KEY  NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
                    START WITH +1  
                    INCREMENT BY +1  
                    MINVALUE +1  
                    MAXVALUE +2147483647  
                    NO CYCLE  
                    NO CACHE  
                    NO ORDER ),	 --	自增ID
	USER_ID BIGINT DEFAULT 0 NOT NULL,				 --	操作员ID
	DEP_ID BIGINT DEFAULT 0	NOT NULL,				 --	机构ID
	TYPE INT DEFAULT 0 NOT NULL,					 --	充值权限类型：0-操作员机构充值权限；
	CREATE_USERID BIGINT DEFAULT 0 NOT NULL,		 --	创建记录的操作员ID
	CORP_CODE VARCHAR(64) DEFAULT '' '' NOT NULL,		 --	企业编码
	CREATE_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP	 --	创建时间	
)IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;



CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_BALANCE_DEF') THEN
  EXECUTE IMMEDIATE '--充值默认数据表
CREATE TABLE LF_BALANCE_DEF
(
	ID BIGINT PRIMARY KEY  NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
                    START WITH +1  
                    INCREMENT BY +1  
                    MINVALUE +1  
                    MAXVALUE +2147483647  
                    NO CYCLE  
                    NO CACHE  
                    NO ORDER ),	 --	自增ID
	DEP_ID BIGINT DEFAULT 0	NOT NULL,				 --	机构ID
	SMS_COUNT BIGINT DEFAULT 0 NOT NULL,		     --	短信充值
	MMS_COUNT BIGINT DEFAULT 0 NOT NULL,			 --	彩信充值
	CORP_CODE VARCHAR(64) DEFAULT '' '' NOT NULL,		 --	企业编码
	MODI_USERID BIGINT DEFAULT 0 NOT NULL,			 -- 最后一次更新记录操作员ID
	MODI_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP,	 -- 最后一次更新时间
	CREATE_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP  --	创建时间
)IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;

--审核流程表 增加是否已催办（0-未催办；1已催办，默认值为0）
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_FLOWRECORD' AND COLNAME='ISREMIND') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_FLOWRECORD ADD ISREMIND SMALLINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_FLOWRECORD;


--审核流程表 增加最近催办时间（默认值为系统当前时间）
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_FLOWRECORD' AND COLNAME='REMINDTIME') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_FLOWRECORD ADD REMINDTIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_FLOWRECORD;


--连续达到告警阀值次数
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='CONSECUTIVETIMES';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=52 AND GLOBALKEY=GLKEYSTR) THEN
INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE,MEMO) VALUES (52, GLKEYSTR, 9, NULL,'连续达到告警阀值次数');   
END IF;
END;

--53是否生成客户端监控文件 0:否；1:是
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='ISCLIENTMONFILE';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=53 AND GLOBALKEY=GLKEYSTR) THEN
INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE, MEMO) VALUES (53, 'ISCLIENTMONFILE', 0, NULL, '是否生成客户端监控文件0否1是');   
END IF;
END;


--升级脚本加个更新语句LF_CLIENT表NAME字段如果为null，修改为客户号(client_code)
UPDATE LF_CLIENT SET NAME=CLIENT_CODE WHERE NAME IS NULL;

CREATE PROCEDURE DROPPROC
BEGIN ATOMIC 
IF EXISTS (SELECT PROCNAME FROM SYSCAT.PROCEDURES WHERE PROCNAME='LF_SMSBALANCEV0') THEN
   EXECUTE IMMEDIATE 'DROP PROCEDURE LF_SMSBALANCEV0';
END IF; 
END;
CALL DROPPROC();
DROP PROCEDURE DROPPROC;

--如果是ADMIN或者未分充值/回收权限的操作员登陆调用原有存储过程，分了充值/回收权限的操作员调用此存储过程
CREATE PROCEDURE LF_SMSBALANCEV0
 (IN PDEPID BIGINT, --父级机构ID（顶级机构传-1）
  IN VARDEPID BIGINT, --机构ID
  IN VARCOUNT INTEGER, --充值数量
  IN VARCORPCODE VARCHAR(100), --企业编码
  IN VARCOATTYPE INTEGER, --充值（1）/回收（0）
  OUT VARRETURNCOUNT INTEGER --输出的结果码  和程序中方法返回的数字意义一样
 ) 
  SPECIFIC "LF_SMSBALANCEV0"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN      
    DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VARBLCOUNT BIGINT;
	DECLARE VARYXCOUNT INT;
	 IF VARCOUNT = 0 OR VARCOUNT IS NULL THEN
        --短信充值/回收数目不能为空
         SET VARRETURNCOUNT=-2;
         RETURN;
     END IF;
     	  
	   IF PDEPID<>-1 THEN
         --充值
         IF VARCOATTYPE=1 THEN
            UPDATE LF_DEP_USER_BALANCE SET SMS_BALANCE=SMS_BALANCE-VARCOUNT WHERE CORP_CODE=VARCORPCODE AND SMS_BALANCE>=VARCOUNT AND TARGET_ID=PDEPID;
             GET DIAGNOSTICS VARYXCOUNT = ROW_COUNT;
             IF VARYXCOUNT=0 THEN
                 SELECT COUNT(BL_ID) INTO VARBLCOUNT FROM LF_DEP_USER_BALANCE  WHERE CORP_CODE=VARCORPCODE AND TARGET_ID=PDEPID;
                 IF SQLCODE<>0 THEN
         		 	--获取用户短信余额记录失败
         			SET VARRETURNCOUNT=-6;
         			ROLLBACK;
         			RETURN;
	  			END IF;
                  
                 IF VARBLCOUNT=0 THEN
                    --机构下没有可用短信余额
                    SET VARRETURNCOUNT=-4;
                 ELSE
                   --充值数据大于短信可分配余额
                    SET VARRETURNCOUNT=-5;
                 END IF;
                 ROLLBACK;
                 RETURN;
             END IF;
         ELSE
           --回收
             --回收将回收的加到父及机构上
             UPDATE LF_DEP_USER_BALANCE SET SMS_BALANCE=SMS_BALANCE+VARCOUNT WHERE CORP_CODE=VARCORPCODE AND TARGET_ID=PDEPID;
             GET DIAGNOSTICS VARYXCOUNT = ROW_COUNT;
             IF VARYXCOUNT=0 THEN
                 SELECT COUNT(BL_ID) INTO VARBLCOUNT FROM LF_DEP_USER_BALANCE  WHERE CORP_CODE=VARCORPCODE AND TARGET_ID=PDEPID;
                IF SQLCODE<>0 THEN
                   --获取用户短信余额记录失败
                   SET VARRETURNCOUNT=-6;
                   ROLLBACK;
                   RETURN;
				 END IF;

                 IF VARBLCOUNT=0 THEN
                    --机构下没有可用短信余额
                    SET VARRETURNCOUNT=-4;
                    ROLLBACK;
                    RETURN;
                 END IF;
             END IF;
           END IF;
      END IF;
	  --充值
      IF VARCOATTYPE=1 THEN
        UPDATE LF_DEP_USER_BALANCE SET SMS_BALANCE=SMS_BALANCE+VARCOUNT WHERE CORP_CODE=VARCORPCODE AND TARGET_ID=VARDEPID;
        GET DIAGNOSTICS VARYXCOUNT = ROW_COUNT;
        IF VARYXCOUNT=0 THEN
          --如果子的机构没有充过值则插入一条充值记录
          INSERT INTO LF_DEP_USER_BALANCE(TARGET_ID,SMS_BALANCE,SMS_COUNT,MMS_BALANCE,MMS_COUNT,CORP_CODE)
           VALUES(VARDEPID,VARCOUNT,0,0,0,VARCORPCODE);
        END IF;
       ELSE
          UPDATE LF_DEP_USER_BALANCE SET SMS_BALANCE=SMS_BALANCE-VARCOUNT WHERE CORP_CODE=VARCORPCODE AND SMS_BALANCE>=VARCOUNT AND TARGET_ID=VARDEPID;
          GET DIAGNOSTICS VARYXCOUNT = ROW_COUNT;
          IF VARYXCOUNT=0 THEN
              SELECT COUNT(BL_ID) INTO VARBLCOUNT FROM LF_DEP_USER_BALANCE  WHERE CORP_CODE=VARCORPCODE AND TARGET_ID=VARDEPID;
              IF SQLCODE<>0 THEN
                   --获取用户短信余额记录失败
                   SET VARRETURNCOUNT=-6;
                   ROLLBACK;
                   RETURN;
			 END IF;
              IF VARBLCOUNT=0 THEN
                --机构没有进行充值过
                SET VARRETURNCOUNT=-7;
              ELSE
                --回收短信数大于机构可分配数目
                SET VARRETURNCOUNT=-5;
              END IF;
              ROLLBACK;
              RETURN;
          END IF;
       END IF;
      --短信充值/回收成功
      SET VARRETURNCOUNT=0;
      COMMIT;
END;



CREATE PROCEDURE DROPPROC
BEGIN ATOMIC 
IF EXISTS (SELECT PROCNAME FROM SYSCAT.PROCEDURES WHERE PROCNAME='LF_MMSBALANCEV0') THEN
   EXECUTE IMMEDIATE 'DROP PROCEDURE LF_MMSBALANCEV0';
END IF; 
END;
CALL DROPPROC();
DROP PROCEDURE DROPPROC;

--如果是ADMIN或者未分充值/回收权限的操作员登陆调用原有存储过程，分了充值/回收权限的操作员调用此存储过程
CREATE PROCEDURE LF_MMSBALANCEV0
 (IN PDEPID BIGINT, --父级机构ID（顶级机构传-1）
  IN VARDEPID BIGINT, --机构ID
  IN VARCOUNT INTEGER, --充值数量
  IN VARCORPCODE VARCHAR(100), --企业编码
  IN VARCOATTYPE INTEGER, --充值（1）/回收（0）
  OUT VARRETURNCOUNT INTEGER --输出的结果码  和程序中方法返回的数字意义一样
 )
  SPECIFIC LF_MMSBALANCEV0
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN      
    DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VARPARENTID BIGINT;
	DECLARE VARBLCOUNT BIGINT;
	DECLARE VARYXCOUNT INT;
	 IF VARCOUNT = 0 OR VARCOUNT IS NULL THEN
        --短信充值/回收数目不能为空
         SET VARRETURNCOUNT=-2;
         RETURN;
     END IF;
     IF PDEPID<>-1 THEN
         --充值
         IF VARCOATTYPE=1 THEN
            UPDATE LF_DEP_USER_BALANCE SET MMS_BALANCE=MMS_BALANCE-VARCOUNT WHERE CORP_CODE=VARCORPCODE AND MMS_BALANCE>=VARCOUNT AND TARGET_ID=PDEPID;
             GET DIAGNOSTICS VARYXCOUNT = ROW_COUNT;
             IF VARYXCOUNT=0 THEN
                 SELECT COUNT(BL_ID) INTO VARBLCOUNT FROM LF_DEP_USER_BALANCE  WHERE CORP_CODE=VARCORPCODE AND TARGET_ID=PDEPID;
                 IF SQLCODE<>0 THEN
         		 	--获取用户短信余额记录失败
         			SET VARRETURNCOUNT=-6;
         			ROLLBACK;
         			RETURN;
	  			END IF;
                  
                 IF VARBLCOUNT=0 THEN
                    --机构下没有可用短信余额
                    SET VARRETURNCOUNT=-4;
                 ELSE
                   --充值数据大于短信可分配余额
                    SET VARRETURNCOUNT=-5;
                 END IF;
                 ROLLBACK;
                 RETURN;
             END IF;
         ELSE
           --回收
             --回收将回收的加到父及机构上
             UPDATE LF_DEP_USER_BALANCE SET MMS_BALANCE=MMS_BALANCE+VARCOUNT WHERE CORP_CODE=VARCORPCODE AND TARGET_ID=PDEPID;
             GET DIAGNOSTICS VARYXCOUNT = ROW_COUNT;
             IF VARYXCOUNT=0 THEN
                 SELECT COUNT(BL_ID) INTO VARBLCOUNT FROM LF_DEP_USER_BALANCE  WHERE CORP_CODE=VARCORPCODE AND TARGET_ID=PDEPID;
                IF SQLCODE<>0 THEN
                   --获取用户短信余额记录失败
                   SET VARRETURNCOUNT=-6;
                   ROLLBACK;
                   RETURN;
				 END IF;

                 IF VARBLCOUNT=0 THEN
                    --机构下没有可用短信余额
                    SET VARRETURNCOUNT=-4;
                    ROLLBACK;
                    RETURN;
                 END IF;
             END IF;
           END IF;
      END IF;
	  --充值
      IF VARCOATTYPE=1 THEN
        UPDATE LF_DEP_USER_BALANCE SET MMS_BALANCE=MMS_BALANCE+VARCOUNT WHERE CORP_CODE=VARCORPCODE AND TARGET_ID=VARDEPID;
        GET DIAGNOSTICS VARYXCOUNT = ROW_COUNT;
        IF VARYXCOUNT=0 THEN
          --如果子的机构没有充过值则插入一条充值记录
          INSERT INTO LF_DEP_USER_BALANCE(TARGET_ID,SMS_BALANCE,SMS_COUNT,MMS_BALANCE,MMS_COUNT,CORP_CODE)
           VALUES(VARDEPID,0,0,VARCOUNT,0,VARCORPCODE);
        END IF;
       ELSE
          UPDATE LF_DEP_USER_BALANCE SET MMS_BALANCE=MMS_BALANCE-VARCOUNT WHERE CORP_CODE=VARCORPCODE AND MMS_BALANCE>=VARCOUNT AND TARGET_ID=VARDEPID;
          GET DIAGNOSTICS VARYXCOUNT = ROW_COUNT;
          IF VARYXCOUNT=0 THEN
              SELECT COUNT(BL_ID) INTO VARBLCOUNT FROM LF_DEP_USER_BALANCE  WHERE CORP_CODE=VARCORPCODE AND TARGET_ID=VARDEPID;
              IF SQLCODE<>0 THEN
                   --获取用户短信余额记录失败
                   SET VARRETURNCOUNT=-6;
                   ROLLBACK;
                   RETURN;
			 END IF;
              IF VARBLCOUNT=0 THEN
                --机构没有进行充值过
                SET VARRETURNCOUNT=-7;
              ELSE
                --回收短信数大于机构可分配数目
                SET VARRETURNCOUNT=-5;
              END IF;
              ROLLBACK;
              RETURN;
          END IF;
       END IF;
      --短信充值/回收成功
      SET VARRETURNCOUNT=0;
      COMMIT;
END;



CREATE PROCEDURE DROPPROC
BEGIN ATOMIC 
IF EXISTS (SELECT PROCNAME FROM SYSCAT.PROCEDURES WHERE PROCNAME='PRC_SUMMV1') THEN
   EXECUTE IMMEDIATE 'DROP PROCEDURE PRC_SUMMV1';
END IF; 
END;
CALL DROPPROC();
DROP PROCEDURE DROPPROC;


CREATE PROCEDURE PRC_SUMMV1 ( ) 
  SPECIFIC PRC_SUMMV1
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN
  DECLARE SQLCODE INTEGER DEFAULT 0;
  DECLARE PARAMVALUE VARCHAR(64);
  DECLARE HPARAMVALUE VARCHAR(64);
  SELECT PARAM_VALUE INTO HPARAMVALUE FROM LF_SYS_PARAM WHERE PARAM_ITEM='isHdataFilish';
  IF HPARAMVALUE='0' THEN
  	 SELECT PARAM_VALUE INTO PARAMVALUE FROM LF_SYS_PARAM WHERE PARAM_ITEM='isSummFilish';
	 IF PARAMVALUE='0' THEN
	 	UPDATE LF_SYS_PARAM SET PARAM_VALUE='1' WHERE PARAM_ITEM='isSummFilish';
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   RETURN;
		END IF;
		DELETE FROM LF_TASKREPORT;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		INSERT INTO LF_TASKREPORT(R_TASKID,R_BATCHID,R_TASKTYPE,R_ICOUNT,R_SUCC,R_FAIL1,R_FAIL2,R_NRET) 
		SELECT TASKID,BATCHID,TASKTYPE,0,0,0,0,0 FROM LF_MTTASK WHERE TIMER_TIME>TO_DATE(CHAR(CURRENT DATE),'yyyy-MM-dd') AND MS_TYPE<>2;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		MERGE INTO LF_TASKREPORT M
   		USING(SELECT TASKID,COUNT(ID) ICOUNT,
   		  COALESCE(COUNT(CASE RTRIM(ERRORCODE) WHEN 'DELIVRD' THEN '1' WHEN '0' THEN '1' ELSE NULL END),0) RSUCC,
	  	  COALESCE(COUNT(CASE SUBSTR(ERRORCODE,1,3) WHEN 'E1:' THEN 1 WHEN 'E2:' THEN 1 ELSE NULL END),0) RFAIL1,
	  	  (COUNT(ID)-COALESCE(COUNT(CASE RTRIM(ERRORCODE) WHEN 'DELIVRD' THEN '1' WHEN '0' THEN '1' ELSE NULL END),0)
	  	  -COALESCE(COUNT(CASE SUBSTR(ERRORCODE,1,3) WHEN 'E1:' THEN 1 WHEN 'E2:' THEN 1 ELSE NULL END),0)
	  	  -SUM(CASE RTRIM(ERRORCODE) WHEN '' THEN 1 ELSE 0 END)) RFAIL2,
	  	  SUM(CASE RTRIM(ERRORCODE) WHEN '' THEN 1 ELSE 0 END) RNRET
   		FROM GW_MT_TASK_BAK where SENDTIME>TO_DATE(CHAR(CURRENT DATE),'yyyy-MM-dd') GROUP BY TASKID) T
   		ON(M.R_TASKID=T.TASKID and M.R_TASKTYPE=1)
   		WHEN MATCHED THEN
    	UPDATE SET R_ICOUNT = R_ICOUNT+T.ICOUNT,R_SUCC = R_SUCC+T.RSUCC ,R_FAIL1 =R_FAIL1+ T.RFAIL1,R_FAIL2=R_FAIL2+T.RFAIL2,R_NRET=R_NRET+T.RNRET;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		
		MERGE INTO LF_TASKREPORT M
   		USING(SELECT BATCHID,COUNT(ID) ICOUNT,
   		  COALESCE(COUNT(CASE RTRIM(ERRORCODE) WHEN 'DELIVRD' THEN '1' WHEN '0' THEN '1' ELSE NULL END),0) RSUCC,
	  	  COALESCE(COUNT(CASE SUBSTR(ERRORCODE,1,3) WHEN 'E1:' THEN 1 WHEN 'E2:' THEN 1 ELSE NULL END),0) RFAIL1,
	  	  (COUNT(ID)-COALESCE(COUNT(CASE RTRIM(ERRORCODE) WHEN 'DELIVRD' THEN '1' WHEN '0' THEN '1' ELSE NULL END),0)
	  	  -COALESCE(COUNT(CASE SUBSTR(ERRORCODE,1,3) WHEN 'E1:' THEN 1 WHEN 'E2:' THEN 1 ELSE NULL END),0)
	  	  -SUM(CASE RTRIM(ERRORCODE) WHEN '' THEN 1 ELSE 0 END)) RFAIL2,
	  	  SUM(CASE RTRIM(ERRORCODE) WHEN '' THEN 1 ELSE 0 END) RNRET
   		FROM GW_MT_TASK_BAK where SENDTIME>TO_DATE(CHAR(CURRENT DATE),'yyyy-MM-dd') GROUP BY BATCHID) T
   		ON(M.R_BATCHID=T.BATCHID and M.R_TASKTYPE=2)
   		WHEN MATCHED THEN
    	UPDATE SET R_ICOUNT = R_ICOUNT+T.ICOUNT,R_SUCC = R_SUCC+T.RSUCC ,R_FAIL1 =R_FAIL1+ T.RFAIL1,R_FAIL2=R_FAIL2+T.RFAIL2,R_NRET=R_NRET+T.RNRET;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		
		MERGE INTO LF_MTTASK M
   		USING(SELECT SUM(R_ICOUNT) AS R_ICOUNT ,sum(R_SUCC) AS R_SUCC,sum(R_FAIL1) AS R_FAIL1,sum(R_FAIL2) AS R_FAIL2,sum(R_NRET) AS R_NRET,R_TASKID FROM LF_TASKREPORT GROUP BY R_TASKID) T
   		ON(M.TASKID=T.R_TASKID and M.TASKTYPE=1 and M.MS_TYPE<>2)
   		WHEN MATCHED THEN
    		 UPDATE SET ICOUNT2=T.R_ICOUNT,SUC_COUNT=T.R_SUCC,FAI_COUNT=T.R_FAIL1,RFAIL2=T.R_FAIL2,RNRET=T.R_NRET;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		
		MERGE INTO LF_MTTASK M
   		USING(SELECT SUM(R_ICOUNT) AS R_ICOUNT ,sum(R_SUCC) AS R_SUCC,sum(R_FAIL1) AS R_FAIL1,sum(R_FAIL2) AS R_FAIL2,sum(R_NRET) AS R_NRET,R_BATCHID FROM LF_TASKREPORT GROUP BY R_BATCHID) T
   		ON(M.BATCHID=T.R_BATCHID and M.TASKTYPE=2 and M.MS_TYPE<>2)
   		WHEN MATCHED THEN
    		 UPDATE SET ICOUNT2=T.R_ICOUNT,SUC_COUNT=T.R_SUCC,FAI_COUNT=T.R_FAIL1,RFAIL2=T.R_FAIL2,RNRET=T.R_NRET;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		
		DELETE FROM LF_TASKREPORT;
		UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		COMMIT;
	 END IF;
  END IF;
  END;


CREATE PROCEDURE DROPPROC
BEGIN ATOMIC 
IF EXISTS (SELECT PROCNAME FROM SYSCAT.PROCEDURES WHERE PROCNAME='PRC_SUMMWYV1') THEN
   EXECUTE IMMEDIATE 'DROP PROCEDURE PRC_SUMMWYV1';
END IF; 
END;
CALL DROPPROC();
DROP PROCEDURE DROPPROC;


CREATE PROCEDURE PRC_SUMMWYV1 ( ) 
  SPECIFIC PRC_SUMMWYV1
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN
  DECLARE SQLCODE INTEGER DEFAULT 0;
  DECLARE PARAMVALUE VARCHAR(64);
  DECLARE HPARAMVALUE VARCHAR(64);
  SELECT PARAM_VALUE INTO HPARAMVALUE FROM LF_SYS_PARAM WHERE PARAM_ITEM='isHdataFilish';
  IF HPARAMVALUE='0' THEN
  	 SELECT PARAM_VALUE INTO PARAMVALUE FROM LF_SYS_PARAM WHERE PARAM_ITEM='isSummFilish';
	 IF PARAMVALUE='0' THEN
	 	UPDATE LF_SYS_PARAM SET PARAM_VALUE='1' WHERE PARAM_ITEM='isSummFilish';
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   RETURN;
		END IF;
		DELETE FROM LF_TASKREPORT;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		
		INSERT INTO LF_TASKREPORT(R_TASKID,R_BATCHID,R_TASKTYPE,R_ICOUNT,R_SUCC,R_FAIL1,R_FAIL2,R_NRET) 
		SELECT TASKID,BATCHID,TASKTYPE,0,0,0,0,0 FROM LF_MTTASK WHERE TIMER_TIME>TO_DATE(CHAR(CURRENT DATE),'yyyy-MM-dd') AND MS_TYPE<>2;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		
		--符合条件的记录填到表LF_TASKREPORT，taskid的任务
		MERGE INTO LF_TASKREPORT M
   		USING(SELECT TASKID,COUNT(ID) ICOUNT,
   		  COALESCE(COUNT(CASE RTRIM(ERRORCODE) WHEN 'DELIVRD' THEN '1' WHEN '0' THEN '1' ELSE NULL END),0) RSUCC,
	  	  COALESCE(COUNT(CASE SUBSTR(ERRORCODE,1,3) WHEN 'E1:' THEN 1 WHEN 'E2:' THEN 1 ELSE NULL END),0) RFAIL1,
	  	  (COUNT(ID)-COALESCE(COUNT(CASE RTRIM(ERRORCODE) WHEN 'DELIVRD' THEN '1' WHEN '0' THEN '1' ELSE NULL END),0)
	  	  -COALESCE(COUNT(CASE SUBSTR(ERRORCODE,1,3) WHEN 'E1:' THEN 1 WHEN 'E2:' THEN 1 ELSE NULL END),0)
	  	  -SUM(CASE RTRIM(ERRORCODE) WHEN '' THEN 1 ELSE 0 END)) RFAIL2,
	  	  SUM(CASE RTRIM(ERRORCODE) WHEN '' THEN 1 ELSE 0 END) RNRET
   		FROM GW_MT_TASK_BAK where SENDTIME>TO_DATE(CHAR(CURRENT DATE),'yyyy-MM-dd') and SPGATE in (select spgate from XT_GATE_QUEUE where spgate like '200%') 
		GROUP BY TASKID) T
   		ON(M.R_TASKID=T.TASKID and M.R_TASKTYPE=1)
   		WHEN MATCHED THEN
    	UPDATE SET R_ICOUNT = R_ICOUNT+T.ICOUNT,R_SUCC = R_SUCC+T.RSUCC ,R_FAIL1 =R_FAIL1+ T.RFAIL1,R_FAIL2=R_FAIL2+T.RFAIL2,R_NRET=R_NRET+T.RNRET;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		
		--符合条件的记录填到表LF_TASKREPORT，batchid的任务
		MERGE INTO LF_TASKREPORT M
   		USING(SELECT BATCHID,COUNT(ID) ICOUNT,
   		  COALESCE(COUNT(CASE RTRIM(ERRORCODE) WHEN 'DELIVRD' THEN '1' WHEN '0' THEN '1' ELSE NULL END),0) RSUCC,
	  	  COALESCE(COUNT(CASE SUBSTR(ERRORCODE,1,3) WHEN 'E1:' THEN 1 WHEN 'E2:' THEN 1 ELSE NULL END),0) RFAIL1,
	  	  (COUNT(ID)-COALESCE(COUNT(CASE RTRIM(ERRORCODE) WHEN 'DELIVRD' THEN '1' WHEN '0' THEN '1' ELSE NULL END),0)
	  	  -COALESCE(COUNT(CASE SUBSTR(ERRORCODE,1,3) WHEN 'E1:' THEN 1 WHEN 'E2:' THEN 1 ELSE NULL END),0)
	  	  -SUM(CASE RTRIM(ERRORCODE) WHEN '' THEN 1 ELSE 0 END)) RFAIL2,
	  	  SUM(CASE RTRIM(ERRORCODE) WHEN '' THEN 1 ELSE 0 END) RNRET
   		FROM GW_MT_TASK_BAK where SENDTIME>TO_DATE(CHAR(CURRENT DATE),'yyyy-MM-dd') and SPGATE in (select spgate from XT_GATE_QUEUE where spgate like '200%') 
		GROUP BY BATCHID) T
   		ON(M.R_BATCHID=T.BATCHID and M.R_TASKTYPE=2)
   		WHEN MATCHED THEN
    	UPDATE SET R_ICOUNT = R_ICOUNT+T.ICOUNT,R_SUCC = R_SUCC+T.RSUCC ,R_FAIL1 =R_FAIL1+ T.RFAIL1,R_FAIL2=R_FAIL2+T.RFAIL2,R_NRET=R_NRET+T.RNRET;
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		
		--更新信息到lf_mttask表的WYSENDINFO字段，taskid的任务
		MERGE INTO LF_MTTASK M
   		USING(SELECT SUM(R_ICOUNT) AS R_ICOUNT ,sum(R_SUCC) AS R_SUCC,sum(R_FAIL1) AS R_FAIL1,sum(R_FAIL2) AS R_FAIL2,sum(R_NRET) AS R_NRET,R_TASKID FROM LF_TASKREPORT GROUP BY R_TASKID) T
   		ON(M.TASKID=T.R_TASKID and M.TASKTYPE=1 and M.MS_TYPE<>2 and T.R_ICOUNT>0)
   		WHEN MATCHED THEN
    		 UPDATE SET M.WYSENDINFO=(char(T.R_ICOUNT)||'/'||char(T.R_SUCC)||'/'||char(T.R_FAIL1)||'/'||char(T.R_FAIL2));
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		
		--更新信息到lf_mttask表的WYSENDINFO字段，batchid的任务
		MERGE INTO LF_MTTASK M
   		USING(SELECT SUM(R_ICOUNT) AS R_ICOUNT ,sum(R_SUCC) AS R_SUCC,sum(R_FAIL1) AS R_FAIL1,sum(R_FAIL2) AS R_FAIL2,sum(R_NRET) AS R_NRET,R_BATCHID FROM LF_TASKREPORT GROUP BY R_BATCHID) T
   		ON(M.BATCHID=T.R_BATCHID and M.TASKTYPE=2 and M.MS_TYPE<>2 and T.R_ICOUNT>0)
   		WHEN MATCHED THEN
    		 UPDATE SET M.WYSENDINFO=(char(T.R_ICOUNT)||'/'||char(T.R_SUCC)||'/'||char(T.R_FAIL1)||'/'||char(T.R_FAIL2));
		IF SQLCODE<>0 AND SQLCODE<>100 THEN
		   ROLLBACK;
		   UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		   RETURN;
		END IF;
		
		DELETE FROM LF_TASKREPORT;
		UPDATE LF_SYS_PARAM SET PARAM_VALUE='0' WHERE PARAM_ITEM='isSummFilish';
		COMMIT;
	 END IF;
  END IF;
  END;



CREATE PROCEDURE DROPTRIG
BEGIN ATOMIC 
IF EXISTS (SELECT TRIGNAME FROM SYSCAT.TRIGGERS WHERE TRIGNAME='LF_BUSMON_Q') THEN
   EXECUTE IMMEDIATE 'DROP TRIGGER LF_BUSMON_Q';
END IF; 
END;
CALL DROPTRIG();
DROP PROCEDURE DROPTRIG;


CREATE TRIGGER LF_BUSMON_Q
  AFTER
  UPDATE
  ON LF_BUSMANAGER
  REFERENCING
    NEW AS "O"
  FOR EACH ROW
  MODE DB2SQL
  BEGIN ATOMIC
  		UPDATE LF_MON_BUSBASE SET BUS_NAME=O.BUS_NAME WHERE BUS_CODE=O.BUS_CODE AND CORP_CODE=O.CORP_CODE;
END;

--ott表名更改开始---
--删除多余OTT表格
CREATE PROCEDURE "DROPTABLE"
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_SYS_GLOBAL_VARIABLE') THEN
  DROP TABLE OT_SYS_GLOBAL_VARIABLE;
END IF;
END ;
CALL DROPTABLE;
DROP PROCEDURE DROPTABLE;

--OT_LBS_PIOS更改成LF_LBS_PIOS
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_LBS_PIOS') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_LBS_PIOS TO LF_LBS_PIOS';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_LBS_PUSHSET更改成LF_LBS_PUSHSET
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_LBS_PUSHSET') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_LBS_PUSHSET TO LF_LBS_PUSHSET';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_LBS_USERPIOS更改成LF_LBS_USERPIOS
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_LBS_USERPIOS') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_LBS_USERPIOS TO LF_LBS_USERPIOS';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;


--OT_ONL_GPMEM更改成LF_ONL_GPMEM
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_ONL_GPMEM') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_ONL_GPMEM TO LF_ONL_GPMEM';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;


--OT_ONL_GPMSGID更改成LF_ONL_GPMSGID
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_ONL_GPMSGID') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_ONL_GPMSGID TO LF_ONL_GPMSGID';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_ONL_GROUP更改成LF_ONL_GROUP
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_ONL_GROUP') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_ONL_GROUP TO LF_ONL_GROUP';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_ONL_MSG更改成LF_ONL_MSG
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_ONL_MSG') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_ONL_MSG TO LF_ONL_MSG';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_ONL_MSG_HIS更改成LF_ONL_MSG_HIS
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_ONL_MSG_HIS') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_ONL_MSG_HIS TO LF_ONL_MSG_HIS';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_ONL_REMARK更改成LF_ONL_REMARK
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_ONL_REMARK') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_ONL_REMARK TO LF_ONL_REMARK';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_ONL_SERVER更改成LF_ONL_SERVER
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_ONL_SERVER') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_ONL_SERVER TO LF_ONL_SERVER';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_SIT_INFO更改成LF_SIT_INFO
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_SIT_INFO') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_SIT_INFO TO LF_SIT_INFO';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_SIT_PAGE更改成LF_SIT_PAGE
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_SIT_PAGE') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_SIT_PAGE TO LF_SIT_PAGE';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_SIT_PLANT更改成LF_SIT_PLANT
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_SIT_PLANT') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_SIT_PLANT TO LF_SIT_PLANT';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_SIT_TYPE更改成LF_SIT_TYPE
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_SIT_TYPE') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_SIT_TYPE TO LF_SIT_TYPE';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_WEI_ACCOUNT更改成LF_WEI_ACCOUNT
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_WEI_ACCOUNT') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_WEI_ACCOUNT TO LF_WEI_ACCOUNT';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_WEI_COUNT更改成LF_WEI_COUNT
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_WEI_COUNT') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_WEI_COUNT TO LF_WEI_COUNT';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_WEI_GROUP更改成LF_WEI_GROUP
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_WEI_GROUP') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_WEI_GROUP TO LF_WEI_GROUP';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_WEI_KEYWORD更改成LF_WEI_KEYWORD
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_WEI_KEYWORD') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_WEI_KEYWORD TO LF_WEI_KEYWORD';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_WEI_MENU更改成LF_WEI_MENU
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_WEI_MENU') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_WEI_MENU TO LF_WEI_MENU';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_WEI_MSG更改成LF_WEI_MSG
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_WEI_MSG') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_WEI_MSG TO LF_WEI_MSG';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_WEI_REVENT更改成LF_WEI_REVENT
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_WEI_REVENT') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_WEI_REVENT TO LF_WEI_REVENT';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_WEI_RIMG更改成LF_WEI_RIMG
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_WEI_RIMG') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_WEI_RIMG TO LF_WEI_RIMG';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_WEI_RTEXT更改成LF_WEI_RTEXT
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_WEI_RTEXT') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_WEI_RTEXT TO LF_WEI_RTEXT';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_WEI_SENDLOG更改成LF_WEI_SENDLOG
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_WEI_SENDLOG') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_WEI_SENDLOG TO LF_WEI_SENDLOG';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_WEI_TEMPLATE更改成LF_WEI_TEMPLATE
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_WEI_TEMPLATE') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_WEI_TEMPLATE TO LF_WEI_TEMPLATE';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_WEI_TEMPLATE更改成LF_WEI_TEMPLATE
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_WEI_TEMPLATE') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_WEI_TEMPLATE TO LF_WEI_TEMPLATE';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_WEI_TLINK更改成LF_WEI_TLINK
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_WEI_TLINK') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_WEI_TLINK TO LF_WEI_TLINK';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_WEI_ULINK更改成LF_WEI_ULINK
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_WEI_ULINK') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_WEI_ULINK TO LF_WEI_ULINK';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_WEI_USER2ACC更改成LF_WEI_USER2ACC
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_WEI_USER2ACC') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_WEI_USER2ACC TO LF_WEI_USER2ACC';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_WEI_USER2ACC更改成LF_WEI_USER2ACC
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_WEI_USER2ACC') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_WEI_USER2ACC TO LF_WEI_USER2ACC';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;

--OT_WEI_USERINFO更改成LF_WEI_USERINFO
CREATE PROCEDURE RENAMETABLE
BEGIN ATOMIC 
IF EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='OT_WEI_USERINFO') THEN
  EXECUTE IMMEDIATE 'RENAME TABLE OT_WEI_USERINFO TO LF_WEI_USERINFO';
END IF;
END ;
CALL RENAMETABLE;
DROP PROCEDURE RENAMETABLE;
--ott表名更改结束---





--操作员管理--充值/回收管理-阀值权限控制
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=720;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
    INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
    VALUES (PRIID, 10, NULL, '阀值','1600-1320-4', '充值/回收管理', '操作员管理', '1600-1320', NULL);
END IF;
END;

--操作员管理--充值/回收管理-阀值权限控制 加权限 
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=720;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(1,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=720;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(2,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=720;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(4,PRIID);
END IF;
END;


--彩信已告警次数
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_DEP_USER_BALANCE' AND COLNAME='MMSALARMEDCOUNT') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_DEP_USER_BALANCE ADD MMSALARMEDCOUNT INT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_DEP_USER_BALANCE;

--修改dep.maxchargelevel值为20
UPDATE LF_CORP_CONF SET PARAM_VALUE=20 WHERE PARAM_KEY='dep.maxchargelevel';


--EMP汇总结束扫描网关执行状态时间点
BEGIN ATOMIC
DECLARE PARAMITEMSTR VARCHAR(32);
SET PARAMITEMSTR='ENDHOUR';
IF NOT EXISTS(SELECT * FROM LF_SYS_PARAM WHERE PARAM_ITEM=PARAMITEMSTR) THEN
INSERT INTO LF_SYS_PARAM(PARAM_ITEM,PARAM_VALUE,MEMO) VALUES(PARAMITEMSTR, '6:00', 'EMP汇总结束扫描网关执行状态时间点');
END IF;
END;


--系统管理－参数维护－贴尾管理 ： /tai_msgTailMgr.htm
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=763;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
VALUES (PRIID, 8, 1, '查看', '1400-1000-0', '贴尾管理', '参数维护', '1400-1000', '/tai_msgTailMgr.htm');
END IF;
END;

--系统管理－参数维护－贴尾管理  加权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=763;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(1,PRIID);
END IF;
END;

--系统管理－参数维护－贴尾管理  加权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=763;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(2,PRIID);
END IF;
END;

--系统管理－参数维护－贴尾管理  加权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=763;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(4,PRIID);
END IF;
END;


--系统管理－参数维护－贴尾管理 ： 新增
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=764;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
VALUES (PRIID, 8, NULL, '新增', '1400-1000-1', '贴尾管理', '参数维护', '1400-1000', NULL);
END IF;
END;

--系统管理－参数维护－贴尾管理  加新增权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=764;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(1,PRIID);
END IF;
END;

--系统管理－参数维护－贴尾管理  加新增权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=764;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(2,PRIID);
END IF;
END;

--系统管理－参数维护－贴尾管理  加新增权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=764;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(4,PRIID);
END IF;
END;


--系统管理－参数维护－贴尾管理 ： 删除
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=765;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
VALUES (PRIID, 8, NULL, '删除', '1400-1000-2', '贴尾管理', '参数维护', '1400-1000', NULL);
END IF;
END;

--系统管理－参数维护－贴尾管理  加删除权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=765;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(1,PRIID);
END IF;
END;

--系统管理－参数维护－贴尾管理  加删除权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=765;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(2,PRIID);
END IF;
END;

--系统管理－参数维护－贴尾管理  加删除权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=765;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(4,PRIID);
END IF;
END;


--系统管理－参数维护－贴尾管理 ：修改
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=767;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
VALUES (PRIID, 8, NULL, '修改', '1400-1000-3', '贴尾管理', '参数维护', '1400-1000', NULL);
END IF;
END;

--系统管理－参数维护－贴尾管理  加修改权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=767;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(1,PRIID);
END IF;
END;

--系统管理－参数维护－贴尾管理  加修改权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=767;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(2,PRIID);
END IF;
END;

--系统管理－参数维护－贴尾管理  加删除权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=767;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(4,PRIID);
END IF;
END;

--系统管理-参数维护－状态码管理：/sta_stateCode.htm
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=766;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
VALUES (PRIID,8, 1, '查看', '1400-1350-0', '状态码管理', '参数维护', '1400-1350', '/sta_stateCode.htm');
END IF;
END;

--系统管理-参数维护－状态码管理  加权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=766;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(1,PRIID);
END IF;
END;

--系统管理-参数维护－状态码管理  加权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=766;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(2,PRIID);
END IF;
END;

--系统管理-参数维护－状态码管理  加权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=766;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(4,PRIID);
END IF;
END;

--LF_FLOWBINDOBJ 审核机构管理表(新增字段) CTSUBDEP 是否包含子机构，0－否；1－是
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_FLOWBINDOBJ' AND COLNAME='CTSUBDEP') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_FLOWBINDOBJ ADD CTSUBDEP SMALLINT DEFAULT 1 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_FLOWBINDOBJ;

--升级时老数据默认为1;
UPDATE LF_FLOWBINDOBJ SET CTSUBDEP=1;


-- 状态码管理表
CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_STATECODE') THEN
  EXECUTE IMMEDIATE '-- 状态码管理表
CREATE TABLE LF_STATECODE
(
	STATE_ID BIGINT PRIMARY KEY  NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
                    START WITH +1  
                    INCREMENT BY +1  
                    MINVALUE +1  
                    MAXVALUE +2147483647  
                    NO CYCLE  
                    NO CACHE  
                    NO ORDER ),-- ID自增
	STATE_CODE VARCHAR(64) DEFAULT '' '' NOT NULL, --状态码
	STATE_DES VARCHAR(256) DEFAULT '' '' NOT NULL,--解释说明
	CREATE_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP ,--创建时间
	UPDATE_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP ,--更新时间
	CORP_CODE VARCHAR(64) DEFAULT '' '' NOT NULL, 	   	   		--企业编码
	USER_ID BIGINT DEFAULT 0 NOT NULL     				   		--最后更新的操作员ID
)  IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;


-- 草稿箱管理表
CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_DRAFTS') THEN
  EXECUTE IMMEDIATE '--草稿箱管理表
CREATE TABLE LF_DRAFTS
(
  ID BIGINT PRIMARY KEY  NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
                    START WITH +1  
                    INCREMENT BY +1  
                    MINVALUE +1  
                    MAXVALUE +2147483647  
                    NO CYCLE  
                    NO CACHE  
                    NO ORDER ),  --ID，自增
  TITLE VARCHAR(64) DEFAULT '' '' NOT NULL,        --标题
  MSG VARCHAR(2048) DEFAULT '' '' NOT NULL,        --短信内容
  MOBILE_URL VARCHAR(160) DEFAULT '' '' NOT NULL,  --号码文件地址
  DRAFTS_TYPE SMALLINT DEFAULT 0 NOT NULL,      --草稿类型，0－相同内容；1－不同内容动态模板；2－不同内容文件发送；3－客户群组群发；4-静态网讯发送；5－动态网讯发送
  CREATE_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , --创建时间
  UPDATE_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , --更新时间
  CORP_CODE VARCHAR(64) DEFAULT '' '' NOT NULL,     --企业编码
  USER_ID BIGINT DEFAULT 0 NOT NULL         --操作员ID
) IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;

--在MOBILE_URL上增加唯一约束
CREATE PROCEDURE ADDUQKEY
BEGIN ATOMIC 
IF NOT EXISTS(SELECT * FROM SYSCAT.KEYCOLUSE WHERE TABNAME='LF_DRAFTS' AND COLNAME='MOBILE_URL' AND CONSTNAME='UQ_DRAFTS_MU') THEN
   EXECUTE IMMEDIATE 'ALTER TABLE LF_DRAFTS ADD CONSTRAINT UQ_DRAFTS_MU UNIQUE(MOBILE_URL)';
END IF;
END;
CALL ADDUQKEY;
DROP PROCEDURE ADDUQKEY;
REORG TABLE LF_DRAFTS;

--SP账号信息表(新增字段) LOGIN_TYPE 登录类型，0－WBS登录；1－直连登录 2-直连
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_SSPACINFO' AND COLNAME='LOGIN_TYPE') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_SSPACINFO ADD LOGIN_TYPE SMALLINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_SSPACINFO;

UPDATE LF_MON_SSPACINFO SET LOGIN_TYPE=0;

--SP账号信息表(新增字段) OFFLINE  账号离线阀值
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_SSPACINFO' AND COLNAME='OFFLINETHRESHD') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_SSPACINFO ADD OFFLINETHRESHD INT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_SSPACINFO;

UPDATE LF_MON_SSPACINFO SET OFFLINETHRESHD=0;


-- 草稿箱管理表
CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_DRAFTS') THEN
  EXECUTE IMMEDIATE '--草稿箱管理表
CREATE TABLE LF_DRAFTS
(
  ID BIGINT PRIMARY KEY  NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
                    START WITH +1  
                    INCREMENT BY +1  
                    MINVALUE +1  
                    MAXVALUE +2147483647  
                    NO CYCLE  
                    NO CACHE  
                    NO ORDER ),  --ID，自增
  TITLE VARCHAR(64) DEFAULT '' '' NOT NULL,       --标题
  MSG VARCHAR(2048) DEFAULT '' '' NOT NULL,       --短信内容
  MOBILE_URL VARCHAR(160) DEFAULT '' '' NOT NULL,  --号码文件地址
  DRAFTS_TYPE SMALLINT DEFAULT 0 NOT NULL,       --草稿类型，0－相同内容；1－不同内容动态模板；2－不同内容文件发送；3－客户群组群发；4-静态网讯发送；5－动态网讯发送
  CREATE_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , --创建时间
  UPDATE_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , --更新时间
  CORP_CODE VARCHAR(64) DEFAULT '' '' NOT NULL,     --企业编码
  USER_ID BIGINT DEFAULT 0 NOT NULL         --操作员ID
) IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;


--SP离线时间段告警阀值管理表
CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_SPOFFLINEPRD') THEN
  EXECUTE IMMEDIATE '--SP离线时间段告警阀值管理表
CREATE TABLE LF_SPOFFLINEPRD(
  ID  BIGINT PRIMARY KEY  NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
                    START WITH +1  
                    INCREMENT BY +1  
                    MINVALUE +1  
                    MAXVALUE +2147483647  
                    NO CYCLE  
                    NO CACHE  
                    NO ORDER ),  --ID，自增
  SPACCOUNTID VARCHAR(11) DEFAULT '' '' NOT NULL,  --SP账号
  BEGIN_HOUR INT DEFAULT 0 NOT NULL,        --开始时间段(小时)
  END_HOUR INT DEFAULT 0 NOT NULL,          --结束时间段(小时)
  DURATION INT DEFAULT 0 NOT NULL,         --时长
  CREATE_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP,--创建时间
  UPDATE_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP,--更新时间
  CORP_CODE VARCHAR(64) DEFAULT '' '' NOT NULL, --企业编码
  USER_ID BIGINT DEFAULT 0 NOT NULL           --最后更新的操作员ID
) IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;


--企业表增加 企业状态 (0禁用 1启用) 默认值启用
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_CORP' AND COLNAME='CORP_STATE') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_CORP ADD CORP_STATE SMALLINT DEFAULT 1 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_CORP;

--升级将企业admin操作员禁用的时候 企业也设为禁用状态
UPDATE LF_CORP SET CORP_STATE=0 WHERE CORP_CODE IN (SELECT CORP_CODE FROM LF_SYSUSER WHERE USER_STATE=0 AND USER_NAME='admin');

--密码长度
BEGIN ATOMIC
DECLARE PARAMKEY VARCHAR(32);
SET PARAMKEY='pwd.count';
IF NOT EXISTS(SELECT * FROM LF_CORP_CONF WHERE PARAM_KEY=PARAMKEY) THEN
INSERT INTO LF_CORP_CONF (CORP_CODE,PARAM_KEY,PARAM_VALUE) VALUES ('100001','pwd.count',6);   
END IF;
END;

--组合形式
BEGIN ATOMIC
DECLARE PARAMKEY VARCHAR(32);
SET PARAMKEY='pwd.combtype';
IF NOT EXISTS(SELECT * FROM LF_CORP_CONF WHERE PARAM_KEY=PARAMKEY) THEN
INSERT INTO LF_CORP_CONF (CORP_CODE,PARAM_KEY,PARAM_VALUE) VALUES ('100001','pwd.combtype','1,2');   
END IF;
END;

--修改周期
BEGIN ATOMIC
DECLARE PARAMKEY VARCHAR(32);
SET PARAMKEY='pwd.upcycle';
IF NOT EXISTS(SELECT * FROM LF_CORP_CONF WHERE PARAM_KEY=PARAMKEY) THEN
INSERT INTO LF_CORP_CONF (CORP_CODE,PARAM_KEY,PARAM_VALUE) VALUES ('100001','pwd.upcycle','90');   
END IF;
END;

--过期提醒
BEGIN ATOMIC
DECLARE PARAMKEY VARCHAR(32);
SET PARAMKEY='pwd.pastalarm';
IF NOT EXISTS(SELECT * FROM LF_CORP_CONF WHERE PARAM_KEY=PARAMKEY) THEN
INSERT INTO LF_CORP_CONF (CORP_CODE,PARAM_KEY,PARAM_VALUE) VALUES ('100001','pwd.pastalarm','7');   
END IF;
END;

--错误上限
BEGIN ATOMIC
DECLARE PARAMKEY VARCHAR(32);
SET PARAMKEY='pwd.errlimit';
IF NOT EXISTS(SELECT * FROM LF_CORP_CONF WHERE PARAM_KEY=PARAMKEY) THEN
INSERT INTO LF_CORP_CONF (CORP_CODE,PARAM_KEY,PARAM_VALUE) VALUES ('100001','pwd.errlimit','6');   
END IF;
END;

--手机动态口令模板
BEGIN ATOMIC
DECLARE PARAMKEY VARCHAR(32);
SET PARAMKEY='pwd.dynpwd';
IF NOT EXISTS(SELECT * FROM LF_CORP_CONF WHERE PARAM_KEY=PARAMKEY) THEN
INSERT INTO LF_CORP_CONF (CORP_CODE,PARAM_KEY,PARAM_VALUE) VALUES ('100001','pwd.dynpwd','您正在登录企业移动信息平台，手机动态口令为：#P_1#');   
END IF;
END;

--54：账户信息同步标识0关闭1开启
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='ACTSYNCFLAG';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=54 AND GLOBALKEY=GLKEYSTR) THEN
INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE,MEMO) VALUES (54,GLKEYSTR, 0, NULL, '账户信息同步标识0关闭1开启');   
END IF;
END;

--55：账户同步更新数据库标识0关1开
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='ACTSYNCDBFLAG';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=55 AND GLOBALKEY=GLKEYSTR) THEN
INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE,MEMO) VALUES (55, GLKEYSTR, 1, NULL, '账户同步更新数据库标识0关1开');   
END IF;
END;

--56:账户信息同步URL地址
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='ACTSYNCURL';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=56 AND GLOBALKEY=GLKEYSTR) THEN
INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE,MEMO) VALUES (56, 'ACTSYNCURL', NULL, 'http://61.145.229.29:8015/mboss/WebService/SubToUnionInterface.asmx?WSDL', '账户信息同步URL地址');   
END IF;
END;

--LF_MON_ERR 错误告警表  增加  SP未提交告警时间段和时长
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_ERR' AND COLNAME='SPOFFLINEPRD') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_ERR ADD SPOFFLINEPRD VARCHAR(32) DEFAULT '' '' NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_ERR;

UPDATE LF_MON_ERR SET SPOFFLINEPRD=' ';

--去除移动业务中的业务贴尾管理
DELETE FROM LF_IMPOWER WHERE PRIVILEGE_ID IN (2704,2705,2706,2707);

/*扣费 存储过程  判断存储过程是否存在*/
CREATE PROCEDURE DROPPROC
BEGIN ATOMIC 
IF EXISTS (SELECT PROCNAME FROM SYSCAT.PROCEDURES WHERE PROCNAME='LF_FEEDEDTV0') THEN
   EXECUTE IMMEDIATE 'DROP PROCEDURE LF_FEEDEDTV0';
END IF; 
END;
CALL DROPPROC();
DROP PROCEDURE DROPPROC;


CREATE PROCEDURE "LF_FEEDEDTV0"
 (IN "VARDEPID" BIGINT, 
  IN "VARSENDCOUNT" BIGINT, 
  OUT "RETURNCOUNT" INTEGER
 ) 
  SPECIFIC "LF_FEEDEDTV0"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN          
	DECLARE BLCOUNT INT;
	DECLARE YXCOUNT INT;
 	if VARSENDCOUNT=0 then
		--短信发送或回收条数不能为空
		SET RETURNCOUNT=-5;
	else
		if VARSENDCOUNT>0 then
			update LF_DEP_USER_BALANCE set SMS_BALANCE=SMS_BALANCE-VARSENDCOUNT,SMS_COUNT=SMS_COUNT+VARSENDCOUNT where TARGET_ID=VARDEPID and SMS_BALANCE>=VARSENDCOUNT;
			GET DIAGNOSTICS YXCOUNT = ROW_COUNT;
			if YXCOUNT>0 then
			   --短信扣费成功
			   SET RETURNCOUNT=0;
			else
			   select count(BL_ID) into BLCOUNT from  LF_DEP_USER_BALANCE where TARGET_ID=VARDEPID;
		       if BLCOUNT=0 then
			     --用户所属机构没有充值
			     SET RETURNCOUNT=-4;
			   else
				 --短信余额不足
				 SET RETURNCOUNT=-2;
			   end if;
			end if;
		else
			update LF_DEP_USER_BALANCE set SMS_BALANCE=SMS_BALANCE-VARSENDCOUNT,SMS_COUNT=SMS_COUNT+VARSENDCOUNT where TARGET_ID=VARDEPID and SMS_COUNT+VARSENDCOUNT>=0;
			GET DIAGNOSTICS YXCOUNT = ROW_COUNT;
			if YXCOUNT>0 then
			   --短信回收成功
			   SET RETURNCOUNT=1;
			else
			   select count(BL_ID) into BLCOUNT from  LF_DEP_USER_BALANCE where TARGET_ID=VARDEPID;
		       if BLCOUNT=0 then
			      --用户所属机构没有充值
			      SET RETURNCOUNT=-4;
			   else
				  --短信回收发送条数异常
				  SET RETURNCOUNT=-8;
			   end if;
			end if;
		end if;
	end if;
END;

/*彩信扣费 存储过程  判断存储过程是否存在*/
CREATE PROCEDURE DROPPROC
BEGIN ATOMIC 
IF EXISTS (SELECT PROCNAME FROM SYSCAT.PROCEDURES WHERE PROCNAME='LF_MMSFEEDEDTV0') THEN
   EXECUTE IMMEDIATE 'DROP PROCEDURE LF_MMSFEEDEDTV0';
END IF; 
END;
CALL DROPPROC();
DROP PROCEDURE DROPPROC;

CREATE PROCEDURE "LF_MMSFEEDEDTV0"
 (IN "VARDEPID" BIGINT, 
  IN "VARSENDCOUNT" BIGINT, 
  OUT "RETURNCOUNT" INTEGER
 ) 
  SPECIFIC "LF_MMSFEEDEDTV0"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN          
	DECLARE BLCOUNT INT;
	DECLARE YXCOUNT INT;
 	if VARSENDCOUNT=0 then
		--彩信发送或回收条数不能为空
		SET RETURNCOUNT=-5;
	else
		if VARSENDCOUNT>0 then
			update LF_DEP_USER_BALANCE set MMS_BALANCE=MMS_BALANCE-VARSENDCOUNT,MMS_COUNT=MMS_COUNT+VARSENDCOUNT where TARGET_ID=VARDEPID and MMS_BALANCE>=VARSENDCOUNT;
			GET DIAGNOSTICS YXCOUNT = ROW_COUNT;
			if YXCOUNT>0 then
			   --彩信扣费成功
			   SET RETURNCOUNT=0;
			else
			   select count(BL_ID) into BLCOUNT from  LF_DEP_USER_BALANCE where TARGET_ID=VARDEPID;
		       if BLCOUNT=0 then
			     --用户所属机构没有充值
			     SET RETURNCOUNT=-4;
			   else
				 --彩信余额不足
				 SET RETURNCOUNT=-2;
			   end if;
			end if;
		else
			update LF_DEP_USER_BALANCE set MMS_BALANCE=MMS_BALANCE-VARSENDCOUNT,MMS_COUNT=MMS_COUNT+VARSENDCOUNT where TARGET_ID=VARDEPID and MMS_COUNT+VARSENDCOUNT>=0;
			GET DIAGNOSTICS YXCOUNT = ROW_COUNT;
			if YXCOUNT>0 then
			   --彩信回收成功
			   SET RETURNCOUNT=1;
			else
			   select count(BL_ID) into BLCOUNT from  LF_DEP_USER_BALANCE where TARGET_ID=VARDEPID;
		       if BLCOUNT=0 then
			      --用户所属机构没有充值
			      SET RETURNCOUNT=-4;
			   else
				  --彩信回收发送条数异常
				  SET RETURNCOUNT=-8;
			   end if;
			end if;
		end if;
	end if;
END;




--LF_MON_DHOST表增加字段
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DHOST' AND COLNAME='HOSTNAME') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DHOST ADD HOSTNAME VARCHAR(64) DEFAULT '' '' NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DHOST;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DHOST' AND COLNAME='ADAPTER1') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DHOST ADD ADAPTER1 VARCHAR(72) DEFAULT '' '' NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DHOST;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DHOST' AND COLNAME='SERVERNUM') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DHOST ADD SERVERNUM VARCHAR(8) DEFAULT ''0'' NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DHOST;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DHOST' AND COLNAME='THRESHOLDFLAG1') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DHOST ADD THRESHOLDFLAG1 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DHOST;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DHOST' AND COLNAME='THRESHOLDFLAG2') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DHOST ADD THRESHOLDFLAG2 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DHOST;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DHOST' AND COLNAME='THRESHOLDFLAG3') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DHOST ADD THRESHOLDFLAG3 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DHOST;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DHOST' AND COLNAME='THRESHOLDFLAG4') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DHOST ADD THRESHOLDFLAG4 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DHOST;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DHOST' AND COLNAME='THRESHOLDFLAG5') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DHOST ADD THRESHOLDFLAG5 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DHOST;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DHOST' AND COLNAME='THRESHOLDFLAG6') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DHOST ADD THRESHOLDFLAG6 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DHOST;

--LF_MON_DPROCE表增加字段
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DPROCE' AND COLNAME='HOSTNAME') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DPROCE ADD HOSTNAME VARCHAR(64) DEFAULT '' '' NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DPROCE;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DPROCE' AND COLNAME='PROCENAME') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DPROCE ADD PROCENAME VARCHAR(64) DEFAULT '' '' NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DPROCE;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DPROCE' AND COLNAME='VERSION') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DPROCE ADD VERSION VARCHAR(64) DEFAULT '' '' NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DPROCE;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DPROCE' AND COLNAME='SERVERNUM') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DPROCE ADD SERVERNUM VARCHAR(8) DEFAULT ''0'' NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DPROCE;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DPROCE' AND COLNAME='PROCETYPE') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DPROCE ADD PROCETYPE INT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DPROCE;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DPROCE' AND COLNAME='HOSTID') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DPROCE ADD HOSTID BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DPROCE;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DPROCE' AND COLNAME='THRESHOLDFLAG1') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DPROCE ADD THRESHOLDFLAG1 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DPROCE;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DPROCE' AND COLNAME='THRESHOLDFLAG2') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DPROCE ADD THRESHOLDFLAG2 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DPROCE;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DPROCE' AND COLNAME='THRESHOLDFLAG3') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DPROCE ADD THRESHOLDFLAG3 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DPROCE;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DPROCE' AND COLNAME='THRESHOLDFLAG4') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DPROCE ADD THRESHOLDFLAG4 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DPROCE;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DPROCE' AND COLNAME='THRESHOLDFLAG5') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DPROCE ADD THRESHOLDFLAG5 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DPROCE;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DPROCE' AND COLNAME='THRESHOLDFLAG6') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DPROCE ADD THRESHOLDFLAG6 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DPROCE;

--LF_MON_DSPACINFO表增加字段
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='ACCOUNTNAME') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD ACCOUNTNAME VARCHAR(56) DEFAULT '' '' NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='SERVERNUM') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD SERVERNUM VARCHAR(8) DEFAULT ''0'' NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='ONLINESTATUSSTR') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD ONLINESTATUSSTR VARCHAR(8) DEFAULT ''0'' NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='SUBMITSTATUSSTR') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD SUBMITSTATUSSTR VARCHAR(8) DEFAULT ''0'' NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='SPACCOUNTTYPE') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD SPACCOUNTTYPE INT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='RPTHAVESND') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD RPTHAVESND INT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='HOSTID') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD HOSTID BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='OFFLINEDURATION') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD OFFLINEDURATION BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='NOMTHAVESND') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD NOMTHAVESND BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='LOGINTYPE') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD LOGINTYPE INT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='THRESHOLDFLAG1') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD THRESHOLDFLAG1 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='THRESHOLDFLAG2') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD THRESHOLDFLAG2 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='THRESHOLDFLAG3') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD THRESHOLDFLAG3 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='THRESHOLDFLAG4') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD THRESHOLDFLAG4 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='THRESHOLDFLAG5') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD THRESHOLDFLAG5 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='THRESHOLDFLAG6') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD THRESHOLDFLAG6 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='THRESHOLDFLAG7') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD THRESHOLDFLAG7 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='THRESHOLDFLAG8') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD THRESHOLDFLAG8 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='THRESHOLDFLAG9') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD THRESHOLDFLAG9 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='THRESHOLDFLAG10') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD THRESHOLDFLAG10 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='THRESHOLDFLAG11') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD THRESHOLDFLAG11 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='THRESHOLDFLAG12') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD THRESHOLDFLAG12 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='THRESHOLDFLAG13') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD THRESHOLDFLAG13 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

--LF_MON_DGTACINFO表增加字段
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='GATENAME') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD GATENAME VARCHAR(64) DEFAULT '' '' NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='SERVERNUM') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD SERVERNUM VARCHAR(8) DEFAULT ''0'' NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='HOSTID') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD HOSTID BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='THRESHOLDFLAG1') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD THRESHOLDFLAG1 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='THRESHOLDFLAG2') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD THRESHOLDFLAG2 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='THRESHOLDFLAG3') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD THRESHOLDFLAG3 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='THRESHOLDFLAG4') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD THRESHOLDFLAG4 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='THRESHOLDFLAG5') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD THRESHOLDFLAG5 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='THRESHOLDFLAG6') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD THRESHOLDFLAG6 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='THRESHOLDFLAG7') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD THRESHOLDFLAG7 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='THRESHOLDFLAG8') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD THRESHOLDFLAG8 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='THRESHOLDFLAG9') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD THRESHOLDFLAG9 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='THRESHOLDFLAG10') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD THRESHOLDFLAG10 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='THRESHOLDFLAG11') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD THRESHOLDFLAG11 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;


CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='THRESHOLDFLAG12') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD THRESHOLDFLAG12 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='THRESHOLDFLAG13') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD THRESHOLDFLAG13 BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

--LF_MON_SPROCE表增加字段
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_SPROCE' AND COLNAME='SERVERNUM') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_SPROCE ADD SERVERNUM VARCHAR(8) DEFAULT '' '' NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_SPROCE;

UPDATE LF_MON_SPROCE SET SERVERNUM = '1001' WHERE PROCETYPE=5000 AND SERVERNUM = ' ';

--LF_MON_ONLCFG表增加字段
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_ONLCFG' AND COLNAME='THRESHOLDFLAG') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_ONLCFG ADD THRESHOLDFLAG VARCHAR(64) DEFAULT ''0'' NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_ONLCFG;

--LF_MON_ONLUSER表增加字段
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_ONLUSER' AND COLNAME='DEP_NAME') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_ONLUSER ADD DEP_NAME VARCHAR(64) DEFAULT '' '' NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_ONLUSER;

ALTER TABLE LF_MON_ONLUSER ALTER COLUMN SESSEION_ID SET DATA TYPE VARCHAR(128);

--增加唯一约束
CREATE PROCEDURE ADDUQKEY
BEGIN ATOMIC 
IF NOT EXISTS(SELECT * FROM SYSCAT.KEYCOLUSE WHERE TABNAME='LF_MON_DHOST' AND COLNAME='HOSTID' AND CONSTNAME='HOSTIDUNIQUE') THEN
   EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DHOST ADD CONSTRAINT HOSTIDUNIQUE UNIQUE (HOSTID)';
END IF;
END;
CALL ADDUQKEY;
DROP PROCEDURE ADDUQKEY;
REORG TABLE LF_MON_DHOST;

CREATE PROCEDURE ADDUQKEY
BEGIN ATOMIC 
IF NOT EXISTS(SELECT * FROM SYSCAT.KEYCOLUSE WHERE TABNAME='LF_MON_DPROCE' AND COLNAME='PROCEID' AND CONSTNAME='PROCEIDUNIQUE') THEN
   EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DPROCE ADD CONSTRAINT PROCEIDUNIQUE UNIQUE (PROCEID)';
END IF;
END;
CALL ADDUQKEY;
DROP PROCEDURE ADDUQKEY;
REORG TABLE LF_MON_DPROCE;

CREATE PROCEDURE ADDUQKEY
BEGIN ATOMIC 
IF NOT EXISTS(SELECT * FROM SYSCAT.KEYCOLUSE WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='SPACCOUNTID' AND CONSTNAME='SPACCIDNIQUE') THEN
   EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD CONSTRAINT SPACCIDNIQUE UNIQUE (SPACCOUNTID)';
END IF;
END;
CALL ADDUQKEY;
DROP PROCEDURE ADDUQKEY;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE ADDUQKEY
BEGIN ATOMIC 
IF NOT EXISTS(SELECT * FROM SYSCAT.KEYCOLUSE WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='GATEACCOUNT' AND CONSTNAME='GATEACCUNIQUE') THEN
   EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD CONSTRAINT GATEACCUNIQUE UNIQUE (GATEACCOUNT)';
END IF;
END;
CALL ADDUQKEY;
DROP PROCEDURE ADDUQKEY;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE ADDUQKEY
BEGIN ATOMIC 
IF NOT EXISTS(SELECT * FROM SYSCAT.KEYCOLUSE WHERE TABNAME='LF_BUSAREASEND' AND CONSTNAME='BUSSENDUNIQUE') THEN
   EXECUTE IMMEDIATE 'ALTER TABLE LF_BUSAREASEND ADD CONSTRAINT BUSSENDUNIQUE UNIQUE (BUS_CODE,AREA_CODE,DATA_DATE)';
END IF;
END;
CALL ADDUQKEY;
DROP PROCEDURE ADDUQKEY;
REORG TABLE LF_BUSAREASEND;

--SPGATE缓冲数据表
CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_MON_DGATEBUF') THEN
  EXECUTE IMMEDIATE '--SPGATE缓冲数据表
CREATE TABLE LF_MON_DGATEBUF(
  ID  BIGINT PRIMARY KEY  NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
                    START WITH +1  
                    INCREMENT BY +1  
                    MINVALUE +1  
                    MAXVALUE +2147483647  
                    NO CYCLE  
                    NO CACHE  
                    NO ORDER ),  --ID，自增
	PROCEID BIGINT DEFAULT 0 NOT NULL,	
	GATEWAYID BIGINT DEFAULT 0 NOT NULL,	
	RPTSDWAITBUF INT DEFAULT 0 NOT NULL,
	MOSDBUF INT DEFAULT 0 NOT NULL,
	RPTSDBUF INT DEFAULT 0 NOT NULL,
	MTUPDBUF INT DEFAULT 0 NOT NULL,
	MTSDBUF INT DEFAULT 0 NOT NULL,
	MOSDWAITBUF INT DEFAULT 0 NOT NULL,
	RPTRVCNT INT DEFAULT 0 NOT NULL,
	MTSDCNT INT DEFAULT 0 NOT NULL,
	MTSPD1 INT DEFAULT 0 NOT NULL,
	MORVCNT INT DEFAULT 0 NOT NULL,
	MTSPD2 INT DEFAULT 0 NOT NULL,
	MORPTSPD INT DEFAULT 0 NOT NULL,
	RPTRVBUF INT DEFAULT 0 NOT NULL,
	MORVBUF INT DEFAULT 0 NOT NULL,
	MTRVCNT INT DEFAULT 0 NOT NULL,
	MTSDWAITBUF INT DEFAULT 0 NOT NULL,
	EVTTYPE INT DEFAULT 0 NOT NULL,
	GATENAME VARCHAR(64)	DEFAULT '' '' NOT NULL,
	GATEACCOUNT VARCHAR(64)	DEFAULT '' '' NOT NULL,	
	UPDATETIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP
) IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;

--SP离线时间段告警控制表
CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_SPOFFCTRL') THEN
  EXECUTE IMMEDIATE '--SP离线时间段告警控制表
CREATE TABLE LF_SPOFFCTRL(
  ID  BIGINT PRIMARY KEY  NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
                    START WITH +1  
                    INCREMENT BY +1  
                    MINVALUE +1  
                    MAXVALUE +2147483647  
                    NO CYCLE  
                    NO CACHE  
                    NO ORDER ),  --ID，自增
  	SPACCOUNTID VARCHAR(11) DEFAULT '' '' NOT NULL,  --SP账号
 	MONOFFLINEPRD VARCHAR(32) DEFAULT '' '' NOT NULL,       --开始时间段(小时),结束时间段(小时),时长
  	ALARMTIME VARCHAR(32) DEFAULT ''0'' NOT NULL,  --告警时间
  	ALARMFLAG VARCHAR(32) DEFAULT ''0'' NOT NULL,  --告警标识
  	CREATETIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP, --创建时间
  	UPDATETIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP, --更新时间
  	CORP_CODE VARCHAR(64) DEFAULT '' '' NOT NULL  --企业编码
) IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;

--定时服务控制表
CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_TIMESERCTRL') THEN
  EXECUTE IMMEDIATE '--定时服务控制表
CREATE TABLE LF_TIMESERCTRL(
	TIMESERVERID VARCHAR(64) PRIMARY KEY NOT NULL ,	--定时服务ID
  	UPDATETIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP, --更新时间
 	NODEID VARCHAR(24) DEFAULT '' '' NOT NULL,        --节点ID
  	SERVERIP VARCHAR(160) DEFAULT '' '' NOT NULL,  --定时服务主机的IP
  	SERVERPORT INT DEFAULT 0 NOT NULL  --定时服务主机端口
) IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;

BEGIN ATOMIC
DECLARE ID VARCHAR(64);
SET ID='1001060316000000';
IF NOT EXISTS(SELECT * FROM LF_TIMESERCTRL) THEN
INSERT INTO LF_TIMESERCTRL(TIMESERVERID, UPDATETIME, NODEID, SERVERIP, SERVERPORT) VALUES(ID, CURRENT TIMESTAMP, '1001', ' ', 0);
END IF;
END;



--定时服务状态表
CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_TIMESERSTATE') THEN
  EXECUTE IMMEDIATE '--定时服务状态表
CREATE TABLE LF_TIMESERSTATE(
	TIMESERVERID VARCHAR(64) PRIMARY KEY NOT NULL ,	--定时服务ID
  	UPDATETIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP, --更新时间
	DEALSTATE INT DEFAULT 0 NOT NULL,  --处理状态
 	NODEID VARCHAR(24) DEFAULT '' '' NOT NULL,        --节点ID
  	SERVERIP VARCHAR(160) DEFAULT '' '' NOT NULL,  --定时服务主机的IP
  	SERVERPORT INT DEFAULT 0 NOT NULL,  --定时服务主机端口
	SERVERURL VARCHAR(256) DEFAULT '' '' NOT NULL  --访问地址
) IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;


--节点基础信息表
CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_NODEBASEINFO') THEN
  EXECUTE IMMEDIATE '--节点基础信息表
CREATE TABLE LF_NODEBASEINFO(
	NODEID VARCHAR(24) PRIMARY KEY NOT NULL ,	--定时服务ID
  	SERVERIP VARCHAR(160) DEFAULT '' '' NOT NULL,  --主机的IP
  	SERVERPORT INT DEFAULT 0 NOT NULL,  --主机端口
	SERLOCALURL VARCHAR(256) DEFAULT '' '' NOT NULL,  --局域网访问地址	
	SERINTERNETURL VARCHAR(256) DEFAULT '' '' NOT NULL,        --外网访问地址
  	UPDATETIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP --更新时间
) IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;

--汇总定时集群控制表
CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_SUMCTRL') THEN
  EXECUTE IMMEDIATE '--汇总定时集群控制表
CREATE TABLE LF_SUMCTRL(
  	ID  BIGINT PRIMARY KEY  NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
                    START WITH +1  
                    INCREMENT BY +1  
                    MINVALUE +1  
                    MAXVALUE +2147483647  
                    NO CYCLE  
                    NO CACHE  
                    NO ORDER ),  --ID，自增
	NODEID VARCHAR(24) DEFAULT '' '' NOT NULL ,	--节点ID
  	ISMAIN SMALLINT DEFAULT 0 NOT NULL,  --是否主控制记录
  	SUMTYPE SMALLINT DEFAULT 0 NOT NULL,  --0代表晚上汇总，1代表白天汇总
  	UPDATETIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP --更新时间
) IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;

BEGIN ATOMIC
DECLARE NODEIDSTR VARCHAR(24);
DECLARE ISMAINNUM SMALLINT;
DECLARE SUMTYPENUM SMALLINT;
SET NODEIDSTR='1001';
SET ISMAINNUM=1;
SET SUMTYPENUM=0;
IF NOT EXISTS(SELECT * FROM LF_SUMCTRL WHERE NODEID=NODEIDSTR AND SUMTYPE=SUMTYPENUM) THEN
	INSERT INTO LF_SUMCTRL(NODEID, ISMAIN, SUMTYPE, UPDATETIME) VALUES('1001', 1, 0, (CURRENT TIMESTAMP - 1 DAYS));
END IF;
END;

BEGIN ATOMIC
DECLARE NODEIDSTR VARCHAR(24);
DECLARE ISMAINNUM SMALLINT;
DECLARE SUMTYPENUM SMALLINT;
SET NODEIDSTR='1001';
SET ISMAINNUM=1;
SET SUMTYPENUM=1;
IF NOT EXISTS(SELECT * FROM LF_SUMCTRL WHERE NODEID=NODEIDSTR AND SUMTYPE=SUMTYPENUM) THEN
	INSERT INTO LF_SUMCTRL(NODEID, ISMAIN, SUMTYPE, UPDATETIME) VALUES('1001', 1, 1, (CURRENT TIMESTAMP - 1 DAYS));
END IF;
END;

--LF_MON_ONLCFG表增加字段
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_ONLCFG' AND COLNAME='SERVERNUM') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_ONLCFG ADD SERVERNUM VARCHAR(8) DEFAULT ''0'' NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_ONLCFG;


--号段管理修改为运营商号段管理
UPDATE LF_PRIVILEGE SET MENUNAME = '运营商号段管理' WHERE MENUNAME = '号段管理';

--通信管理－网关前端配置－运营商号段管理 ： /seg_areaPhoneNo.htm
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2820;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
VALUES (PRIID, 13, 1, '查看', '1900-1210-0', '区域号段管理', '网关前端配置', '1900-1210', '/seg_areaPhoneNo.htm');
END IF;
END;

--通信管理－网关前端配置－运营商号段管理  加权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2820;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(1,PRIID);
END IF;
END;

--通信管理－网关前端配置－运营商号段管理  加权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2820;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(2,PRIID);
END IF;
END;

--通信管理－网关前端配置－运营商号段管理  加权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2820;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(4,PRIID);
END IF;
END;

--通信管理－网关前端配置－运营商号段管理 ： 新增
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2821;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
VALUES (PRIID, 13, NULL, '新增', '1900-1210-1', '区域号段管理', '网关前端配置', '1900-1210', NULL);
END IF;
END;


--通信管理－网关前端配置－运营商号段管理  加新增权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2821;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(1,PRIID);
END IF;
END;

--通信管理－网关前端配置－运营商号段管理 加新增权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2821;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(2,PRIID);
END IF;
END;

--通信管理－网关前端配置－运营商号段管理  加新增权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2821;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(4,PRIID);
END IF;
END;


--通信管理－网关前端配置－运营商号段管理 ：删除
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2822;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
VALUES (PRIID, 13, NULL, '删除', '1900-1210-2', '区域号段管理', '网关前端配置', '1900-1210', NULL);
END IF;
END;

--通信管理－网关前端配置－运营商号段管理  加删除权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2822;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(1,PRIID);
END IF;
END;

--通信管理－网关前端配置－运营商号段管理  加删除权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2822;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(2,PRIID);
END IF;
END;

--通信管理－网关前端配置－运营商号段管理 加删除权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2822;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(4,PRIID);
END IF;
END;



--LF_MON_SGTACINFO表增加字段
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_SGTACINFO' AND COLNAME='MONEMAIL') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_SGTACINFO ADD MONEMAIL VARCHAR(256) DEFAULT '' '' NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_SGTACINFO;


--LF_MON_SSPACINFO表增加字段
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_SSPACINFO' AND COLNAME='MONEMAIL') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_SSPACINFO ADD MONEMAIL VARCHAR(256) DEFAULT '' '' NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_SSPACINFO;


--LF_MON_SPROCE表增加字段
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_SPROCE' AND COLNAME='MONEMAIL') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_SPROCE ADD MONEMAIL VARCHAR(256) DEFAULT '' '' NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_SPROCE;


--LF_MON_BUSBASE表增加字段
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_BUSBASE' AND COLNAME='MONEMAIL') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_BUSBASE ADD MONEMAIL VARCHAR(256) DEFAULT '' '' NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_BUSBASE;


--LF_MON_ONLCFG表增加字段
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_ONLCFG' AND COLNAME='MONEMAIL') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_ONLCFG ADD MONEMAIL VARCHAR(256) DEFAULT '' '' NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_ONLCFG;


--LF_MON_SHOST表增加字段

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_SHOST' AND COLNAME='MONEMAIL') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_SHOST ADD MONEMAIL VARCHAR(256) DEFAULT '' '' NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_SHOST;


--更新监控离线时间为600后告警
UPDATE LF_GLOBAL_VARIABLE SET GLOBALVALUE=300 WHERE GLOBALKEY='networkRrror' AND GLOBALVALUE=180;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DHOST' AND COLNAME='SENDMAILFLAG1') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DHOST ADD SENDMAILFLAG1 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DHOST;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DHOST' AND COLNAME='SENDMAILFLAG2') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DHOST ADD SENDMAILFLAG2 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DHOST;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DHOST' AND COLNAME='SENDMAILFLAG3') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DHOST ADD SENDMAILFLAG3 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DHOST;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DHOST' AND COLNAME='SENDMAILFLAG4') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DHOST ADD SENDMAILFLAG4 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DHOST;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DHOST' AND COLNAME='SENDMAILFLAG5') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DHOST ADD SENDMAILFLAG5 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DHOST;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DHOST' AND COLNAME='SENDMAILFLAG6') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DHOST ADD SENDMAILFLAG6 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DHOST;




CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DPROCE' AND COLNAME='SENDMAILFLAG1') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DPROCE ADD SENDMAILFLAG1 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DPROCE;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DPROCE' AND COLNAME='SENDMAILFLAG2') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DPROCE ADD SENDMAILFLAG2 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DPROCE;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DPROCE' AND COLNAME='SENDMAILFLAG3') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DPROCE ADD SENDMAILFLAG3 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DPROCE;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DPROCE' AND COLNAME='SENDMAILFLAG4') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DPROCE ADD SENDMAILFLAG4 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DPROCE;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DPROCE' AND COLNAME='SENDMAILFLAG5') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DPROCE ADD SENDMAILFLAG5 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DPROCE;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DPROCE' AND COLNAME='SENDMAILFLAG6') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DPROCE ADD SENDMAILFLAG6 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DPROCE;



CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='SENDMAILFLAG1') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD SENDMAILFLAG1 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='SENDMAILFLAG2') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD SENDMAILFLAG2 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='SENDMAILFLAG3') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD SENDMAILFLAG3 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='SENDMAILFLAG4') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD SENDMAILFLAG4 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='SENDMAILFLAG5') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD SENDMAILFLAG5 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='SENDMAILFLAG6') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD SENDMAILFLAG6 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='SENDMAILFLAG7') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD SENDMAILFLAG7 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='SENDMAILFLAG8') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD SENDMAILFLAG8 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='SENDMAILFLAG9') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD SENDMAILFLAG9 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='SENDMAILFLAG10') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD SENDMAILFLAG10 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='SENDMAILFLAG11') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD SENDMAILFLAG11 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='SENDMAILFLAG12') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD SENDMAILFLAG12 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='SENDMAILFLAG13') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD SENDMAILFLAG13 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;



CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='SENDMAILFLAG1') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD SENDMAILFLAG1 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='SENDMAILFLAG2') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD SENDMAILFLAG2 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='SENDMAILFLAG3') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD SENDMAILFLAG3 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='SENDMAILFLAG4') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD SENDMAILFLAG4 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='SENDMAILFLAG5') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD SENDMAILFLAG5 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='SENDMAILFLAG6') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD SENDMAILFLAG6 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='SENDMAILFLAG7') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD SENDMAILFLAG7 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='SENDMAILFLAG8') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD SENDMAILFLAG8 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='SENDMAILFLAG9') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD SENDMAILFLAG9 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='SENDMAILFLAG10') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD SENDMAILFLAG10 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='SENDMAILFLAG11') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD SENDMAILFLAG11 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='SENDMAILFLAG12') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD SENDMAILFLAG12 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='SENDMAILFLAG13') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD SENDMAILFLAG13 BIGINT DEFAULT 0 NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;



CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_ONLCFG' AND COLNAME='SENDMAILFLAG') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_ONLCFG ADD SENDMAILFLAG VARCHAR(64) DEFAULT ''0'' NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_ONLCFG;


CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_SPOFFCTRL' AND COLNAME='ALARMEMAILFLAG') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_SPOFFCTRL ADD ALARMEMAILFLAG VARCHAR(32) DEFAULT ''0'' NOT NULL';
END IF;
END;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_SPOFFCTRL;

--更改长度为512
ALTER TABLE LF_CORP_CONF ALTER COLUMN PARAM_VALUE SET DATA TYPE VARCHAR(256);
REORG TABLE LF_CORP_CONF;

--增加网络监控二级菜单
BEGIN ATOMIC
DECLARE PRIID BIGINT;
IF NOT EXISTS(SELECT * FROM LF_THIR_MENUCONTROL WHERE  MENU_NUM=16 AND TITLE='系统监控' AND PRI_MENU=80 AND PRI_ORDER=1115) THEN
 INSERT INTO LF_THIR_MENUCONTROL (MENU_NUM, TITLE, PRI_MENU, PRI_ORDER)
 VALUES (16, '系统监控', 80, 1115);
END IF;
END;


--增加三级菜单 WEB主机网络监控  /mon_webHostNetMon.htm
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2162;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
    INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
    VALUES (PRIID, 80, 1, '查看', '2950-1000-0', 'WEB主机网络监控', '网络监控', '2950-1000', '/mon_webHostMonNet.htm');
END IF;
END;

--WEB主机网络监控  /mon_webHostNetMon.htm 加权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2162;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(1,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2162;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(2,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2162;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(4,PRIID);
END IF;
END;



--增加三级菜单 数据库监控详情  /mon_dataBaseMon.htm
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2163;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
	INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
    VALUES (PRIID, 43, 1, '查看', '2900-1800-0', '数据库监控详情', '监控详情', '2900-1800', '/mon_dataBaseMon.htm');
END IF;
END;

--数据库监控详情  /mon_dataBaseMon.htm 加权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2163;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(1,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2163;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(2,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2163;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) VALUES(4,PRIID);
END IF;
END;




CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_MON_DBSTATE') THEN
  EXECUTE IMMEDIATE '--数据库与程序监控信息表?
CREATE TABLE LF_MON_DBSTATE
(
	ID BIGINT PRIMARY KEY  NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
                    START WITH +1  
                    INCREMENT BY +1  
                    MINVALUE +1  
                    MAXVALUE +2147483647  
                    NO CYCLE  
                    NO CACHE  
                    NO ORDER ),	--自增ID
  DBID BIGINT DEFAULT  0 NOT NULL,       --数据库ID
  DBNAME VARCHAR(64) DEFAULT '' ''  NOT NULL,--  数据库名称
  PROCENAME VARCHAR(64) DEFAULT '' ''  NOT NULL,--  程序名称
  PROCENODE BIGINT DEFAULT 0  NOT NULL,--  程序节点
  PROCETYPE INT DEFAULT 0 NOT NULL,--  5000:EMP系统5200：EMP网关WBS5300：EMP网关SPGATE5900:其他应用系统
  CREATETIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP ,--  创建时间
  UPDATETIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP ,--  记录更新时间
  MONSTATUS SMALLINT DEFAULT 1 NOT NULL,--  监控状态：0：未监控1：监控
  EVTTYPE SMALLINT DEFAULT 0 NOT NULL,--  0：正常1：告警2：严重
  DBCONNECTSTATE SMALLINT DEFAULT 0  NOT NULL,--  0：正常；1：断开
  ADDOPR SMALLINT DEFAULT 0  NOT NULL,--  0：正常；1：失败
  DELOPR SMALLINT DEFAULT 0  NOT NULL,--  0：正常；1：失败
  MODIOPR SMALLINT DEFAULT 0  NOT NULL,--  0：正常；1：失败
  DISPOPR SMALLINT DEFAULT 0  NOT NULL,--  0：正常；1：失败
  DBADDOPRDES VARCHAR(64) DEFAULT '' '' NOT NULL, --新增操作状态描述
  DBDELOPRDES VARCHAR(64) DEFAULT '' '' NOT NULL, -- 删除操作状态描述
  DBMODIOPRDES VARCHAR(64) DEFAULT '' '' NOT NULL,--修改操作状态描述
  DBDISPOPRDES VARCHAR(64) DEFAULT '' '' NOT NULL,--查询操作状态描述 
  SMSALFLAG1 BIGINT DEFAULT 0  NOT NULL,--  程序与连接状态短信告警状态记录
  SMSALFLAG2 BIGINT DEFAULT 0  NOT NULL,--  新增操作状态短信告警状态记录
  SMSALFLAG3 BIGINT DEFAULT 0  NOT NULL,--  删除操作状态短信告警状态记录
  SMSALFLAG4 BIGINT DEFAULT 0  NOT NULL,--  修改操作状态短信告警状态记录
  SMSALFLAG5 BIGINT DEFAULT 0  NOT NULL,--  查询操作状态短信告警状态记录
  MAILALFLAG1 BIGINT DEFAULT 0  NOT NULL,--  程序与连接状态邮件告警状态记录
  MAILALFLAG2 BIGINT DEFAULT 0  NOT NULL,--  新增操作状态邮件告警状态记录
  MAILALFLAG3 BIGINT DEFAULT 0  NOT NULL,--  删除操作状态邮件告警状态记录
  MAILALFLAG4 BIGINT DEFAULT 0  NOT NULL,--  修改操作状态邮件告警状态记录
  MAILALFLAG5 BIGINT DEFAULT 0  NOT NULL,    --  查询操作状态邮件告警状态记录
  SERVERNUM  VARCHAR(8) DEFAULT ''0'' NOT NULL    --数据分析服务器节点
) IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;


--增加PROCENODE,PROCETYPE唯一约束
CREATE PROCEDURE ADDUQKEY
BEGIN ATOMIC 
IF NOT EXISTS(SELECT * FROM SYSCAT.KEYCOLUSE WHERE TABNAME='LF_MON_DBSTATE' AND CONSTNAME='UQ_PNODEPTYPE') THEN
   EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DBSTATE ADD CONSTRAINT UQ_PNODEPTYPE UNIQUE(PROCENODE,PROCETYPE)';
END IF;
END;
CALL ADDUQKEY;
DROP PROCEDURE ADDUQKEY;
REORG TABLE LF_MON_DBSTATE;

--LF_MON_ERR 错误告警表  增加  程序节点 PROCENODE
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_ERR' AND COLNAME='PROCENODE') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_ERR ADD PROCENODE BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_ERR;

--LF_MON_ERR 错误告警表  增加  WEB服务器程序的节点 WEBNODE
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_ERR' AND COLNAME='WEBNODE') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_ERR ADD WEBNODE BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_ERR;


--LF_MON_ERRHIS 错误告警表  增加  程序节点 PROCENODE
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_ERRHIS' AND COLNAME='PROCENODE') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_ERRHIS ADD PROCENODE BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_ERRHIS;

--LF_MON_ERRHIS 错误告警表  增加  WEB服务器程序的节点 WEBNODE
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_ERRHIS' AND COLNAME='WEBNODE') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_ERRHIS ADD WEBNODE BIGINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_ERRHIS;



CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_MON_DBOPR') THEN
  EXECUTE IMMEDIATE '--（数据库库操作表）
CREATE TABLE LF_MON_DBOPR
(
	ID BIGINT PRIMARY KEY  NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
                    START WITH +1  
                    INCREMENT BY +1  
                    MINVALUE +1  
                    MAXVALUE +2147483647  
                    NO CYCLE  
                    NO CACHE  
                    NO ORDER ),	--自增ID
  CREATETIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP ,--  创建时间
  PROCENODE BIGINT DEFAULT 0 NOT NULL
) IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;


CREATE PROCEDURE "INSERTEXISTS"
BEGIN ATOMIC 
DECLARE COUNT INT;
SELECT COUNT(*) INTO COUNT FROM LF_MON_DBOPR;
IF COUNT<10 THEN
 INSERT INTO LF_MON_DBOPR(PROCENODE) VALUES ('1');
END IF;
END ;
CALL INSERTEXISTS;
DROP PROCEDURE INSERTEXISTS;

CREATE PROCEDURE "INSERTEXISTS"
BEGIN ATOMIC 
DECLARE COUNT INT;
SELECT COUNT(*) INTO COUNT FROM LF_MON_DBOPR;
IF COUNT<10 THEN
 INSERT INTO LF_MON_DBOPR(PROCENODE) VALUES ('2');
END IF;
END ;
CALL INSERTEXISTS;
DROP PROCEDURE INSERTEXISTS;

CREATE PROCEDURE "INSERTEXISTS"
BEGIN ATOMIC 
DECLARE COUNT INT;
SELECT COUNT(*) INTO COUNT FROM LF_MON_DBOPR;
IF COUNT<10 THEN
 INSERT INTO LF_MON_DBOPR(PROCENODE) VALUES ('3');
END IF;
END ;
CALL INSERTEXISTS;
DROP PROCEDURE INSERTEXISTS;

CREATE PROCEDURE "INSERTEXISTS"
BEGIN ATOMIC 
DECLARE COUNT INT;
SELECT COUNT(*) INTO COUNT FROM LF_MON_DBOPR;
IF COUNT<10 THEN
 INSERT INTO LF_MON_DBOPR(PROCENODE) VALUES ('4');
END IF;
END ;
CALL INSERTEXISTS;
DROP PROCEDURE INSERTEXISTS;

CREATE PROCEDURE "INSERTEXISTS"
BEGIN ATOMIC 
DECLARE COUNT INT;
SELECT COUNT(*) INTO COUNT FROM LF_MON_DBOPR;
IF COUNT<10 THEN
 INSERT INTO LF_MON_DBOPR(PROCENODE) VALUES ('5');
END IF;
END ;
CALL INSERTEXISTS;
DROP PROCEDURE INSERTEXISTS;

CREATE PROCEDURE "INSERTEXISTS"
BEGIN ATOMIC 
DECLARE COUNT INT;
SELECT COUNT(*) INTO COUNT FROM LF_MON_DBOPR;
IF COUNT<10 THEN
 INSERT INTO LF_MON_DBOPR(PROCENODE) VALUES ('6');
END IF;
END ;
CALL INSERTEXISTS;
DROP PROCEDURE INSERTEXISTS;

CREATE PROCEDURE "INSERTEXISTS"
BEGIN ATOMIC 
DECLARE COUNT INT;
SELECT COUNT(*) INTO COUNT FROM LF_MON_DBOPR;
IF COUNT<10 THEN
 INSERT INTO LF_MON_DBOPR(PROCENODE) VALUES ('7');
END IF;
END ;
CALL INSERTEXISTS;
DROP PROCEDURE INSERTEXISTS;

CREATE PROCEDURE "INSERTEXISTS"
BEGIN ATOMIC 
DECLARE COUNT INT;
SELECT COUNT(*) INTO COUNT FROM LF_MON_DBOPR;
IF COUNT<10 THEN
 INSERT INTO LF_MON_DBOPR(PROCENODE) VALUES ('8');
END IF;
END ;
CALL INSERTEXISTS;
DROP PROCEDURE INSERTEXISTS;

CREATE PROCEDURE "INSERTEXISTS"
BEGIN ATOMIC 
DECLARE COUNT INT;
SELECT COUNT(*) INTO COUNT FROM LF_MON_DBOPR;
IF COUNT<10 THEN
 INSERT INTO LF_MON_DBOPR(PROCENODE) VALUES ('9');
END IF;
END ;
CALL INSERTEXISTS;
DROP PROCEDURE INSERTEXISTS;

CREATE PROCEDURE "INSERTEXISTS"
BEGIN ATOMIC 
DECLARE COUNT INT;
SELECT COUNT(*) INTO COUNT FROM LF_MON_DBOPR;
IF COUNT<10 THEN
 INSERT INTO LF_MON_DBOPR(PROCENODE) VALUES ('10');
END IF;
END ;
CALL INSERTEXISTS;
DROP PROCEDURE INSERTEXISTS;

CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_MON_DBWARN') THEN
  EXECUTE IMMEDIATE '--（数据库与程序监控告警设置表）
CREATE TABLE LF_MON_DBWARN
(
	ID BIGINT PRIMARY KEY  NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
                    START WITH +1  
                    INCREMENT BY +1  
                    MINVALUE +1  
                    MAXVALUE +2147483647  
                    NO CYCLE  
                    NO CACHE  
                    NO ORDER ),	--自增ID
  MONPHONE VARCHAR(256) DEFAULT '' '' NOT NULL, --接收告警手机号
  MONEMAIL VARCHAR(256) DEFAULT '' '' NOT NULL, --接收告警邮箱  
  CREATETIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP ,--  创建时间
  UPDATETIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP  --  更新时间
) IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;


--LF_MON_DSPACINFO增加字段 GATEWAYID 网关编号
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='GATEWAYID') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD GATEWAYID BIGINT DEFAULT 0 NOT NULL';
  EXECUTE IMMEDIATE 'UPDATE LF_MON_DSPACINFO SET GATEWAYID=99';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

--LF_BUSAREASEND增加字段 GATEWAYID 网关编号
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_BUSAREASEND' AND COLNAME='GATEWAYID') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_BUSAREASEND ADD GATEWAYID BIGINT DEFAULT 0 NOT NULL';
  EXECUTE IMMEDIATE 'UPDATE LF_BUSAREASEND SET GATEWAYID=99';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_BUSAREASEND;


--删除原有外键约束
CREATE PROCEDURE DELFRKEY
BEGIN ATOMIC 
IF EXISTS(SELECT * FROM SYSCAT.KEYCOLUSE WHERE TABNAME='LF_MON_DGTACINFO' AND CONSTNAME='FK_LF_DGTACINFO_FK_LF_SGTACINFO') THEN
   EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO DROP FOREIGN KEY FK_LF_DGTACINFO_FK_LF_SGTACINFO';
END IF;
END;
CALL DELFRKEY;
DROP PROCEDURE DELFRKEY;
REORG TABLE LF_MON_DGTACINFO;


--删除原有外键约束
CREATE PROCEDURE DELFRKEY
BEGIN ATOMIC 
IF EXISTS(SELECT * FROM SYSCAT.KEYCOLUSE WHERE TABNAME='LF_MON_DSPACINFO' AND CONSTNAME='FK_LF_DSPACINFO_FK_LF_SSPACINFO') THEN
   EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO DROP FOREIGN KEY FK_LF_DSPACINFO_FK_LF_SSPACINFO';
END IF;
END;
CALL DELFRKEY;
DROP PROCEDURE DELFRKEY;
REORG TABLE LF_MON_DSPACINFO;


--删除原有唯一约束
CREATE PROCEDURE DELUQKEY
BEGIN ATOMIC 
IF EXISTS(SELECT * FROM SYSCAT.KEYCOLUSE WHERE TABNAME='LF_MON_DSPACINFO' AND CONSTNAME='SPACCIDNIQUE') THEN
   EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO DROP CONSTRAINT SPACCIDNIQUE';
END IF;
END;
CALL DELUQKEY;
DROP PROCEDURE DELUQKEY;
REORG TABLE LF_MON_DSPACINFO;

--删除原有唯一约束
CREATE PROCEDURE DELUQKEY
BEGIN ATOMIC 
IF EXISTS(SELECT * FROM SYSCAT.KEYCOLUSE WHERE TABNAME='LF_BUSAREASEND' AND CONSTNAME='BUSSENDUNIQUE') THEN
   EXECUTE IMMEDIATE 'ALTER TABLE LF_BUSAREASEND DROP CONSTRAINT BUSSENDUNIQUE';
END IF;
END;
CALL DELUQKEY;
DROP PROCEDURE DELUQKEY;
REORG TABLE LF_BUSAREASEND;

--增加唯一约束
CREATE PROCEDURE ADDUQKEY
BEGIN ATOMIC 
IF NOT EXISTS(SELECT * FROM SYSCAT.KEYCOLUSE WHERE TABNAME='LF_MON_DSPACINFO' AND CONSTNAME='SPACCIDNIQUE') THEN
   EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD CONSTRAINT SPACCIDNIQUE UNIQUE (GATEWAYID,SPACCOUNTID)';
END IF;
END;
CALL ADDUQKEY;
DROP PROCEDURE ADDUQKEY;
REORG TABLE LF_MON_DSPACINFO;

--增加唯一约束
CREATE PROCEDURE ADDUQKEY
BEGIN ATOMIC 
IF NOT EXISTS(SELECT * FROM SYSCAT.KEYCOLUSE WHERE TABNAME='LF_BUSAREASEND' AND CONSTNAME='BUSSENDUNIQUE') THEN
   EXECUTE IMMEDIATE 'ALTER TABLE LF_BUSAREASEND ADD CONSTRAINT BUSSENDUNIQUE UNIQUE (GATEWAYID,BUS_CODE,AREA_CODE,DATA_DATE)';
END IF;
END;
CALL ADDUQKEY;
DROP PROCEDURE ADDUQKEY;
REORG TABLE LF_BUSAREASEND;

--删除原有唯一约束
CREATE PROCEDURE DELUQKEY
BEGIN ATOMIC 
IF EXISTS(SELECT * FROM SYSCAT.KEYCOLUSE WHERE TABNAME='LF_MON_DGTACINFO' AND CONSTNAME='GATEACCUNIQUE') THEN
   EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO DROP CONSTRAINT GATEACCUNIQUE';
END IF;
END;
CALL DELUQKEY;
DROP PROCEDURE DELUQKEY;
REORG TABLE LF_MON_DGTACINFO;

--LF_MON_DGTACINFO 增加字段 GWNO 网关编号
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='GWNO') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD GWNO BIGINT DEFAULT 0 NOT NULL';
  EXECUTE IMMEDIATE 'UPDATE LF_MON_DGTACINFO SET GWNO=GATEWAYID';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

--增加唯一约束
CREATE PROCEDURE ADDUQKEY
BEGIN ATOMIC 
IF NOT EXISTS(SELECT * FROM SYSCAT.KEYCOLUSE WHERE TABNAME='LF_MON_DGTACINFO' AND CONSTNAME='GATEACCUNIQUE') THEN
   EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD CONSTRAINT GATEACCUNIQUE UNIQUE (GATEACCOUNT,GWNO)';
END IF;
END;
CALL ADDUQKEY;
DROP PROCEDURE ADDUQKEY;
REORG TABLE LF_MON_DGTACINFO;



CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_MON_HOSTNET') THEN
  EXECUTE IMMEDIATE '--主机网络监控信息表
CREATE TABLE LF_MON_HOSTNET
(
	ID BIGINT PRIMARY KEY  NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
                    START WITH +1  
                    INCREMENT BY +1  
                    MINVALUE +1  
                    MAXVALUE +2147483647  
                    NO CYCLE  
                    NO CACHE  
                    NO ORDER ),	--自增ID
  WEBNODE BIGINT DEFAULT 0  NOT NULL,           --WEB服务器程序的节点
  WEBNAME VARCHAR(64) DEFAULT '' '' NOT NULL,      --WEB服务器主机名称
  PROCENODE BIGINT DEFAULT 0 NOT NULL,          --监控主机所属程序的的节点
  PROCETYPE INT DEFAULT 0 NOT NULL,		--程序类型
  HOSTNAME VARCHAR(64) DEFAULT '' '' NOT NULL,     --监控主机名称
  MONTYPE SMALLINT DEFAULT 0  NOT NULL,            --0:WEB服务器主机与其他程序主机网络监控
  IPADDR VARCHAR(256) DEFAULT '' ''NOT NULL,        --多个IP以逗号“,”分隔
  CREATETIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , --创建时间
  UPDATETIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP ,--记录更新时间
  MONSTATUS SMALLINT DEFAULT 1 NOT NULL,           --监控状态：  0：未监控  1：监控
  EVTTYPE SMALLINT DEFAULT 0 NOT NULL,             --0：正常  1：告警  2：严重
  NETSTATE SMALLINT DEFAULT 0 NOT NULL,            --主机之间的网络状态  0：正常；1：断开
  SMSALFLAG1 BIGINT DEFAULT 0 NOT NULL,         --网络状态告警短信标识 网络状态短信告警状态记录
  MAILALFLAG1 BIGINT DEFAULT 0 NOT NULL,         --网络状态告警邮件标识 网络状态邮件告警状态记录
  SERVERNUM VARCHAR(8) DEFAULT ''0'' NOT NULL      --数据分析服务器节点
) IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;


--增加WEBNODE,PROCENODE唯一约束
CREATE PROCEDURE ADDUQKEY
BEGIN ATOMIC 
IF NOT EXISTS(SELECT * FROM SYSCAT.KEYCOLUSE WHERE TABNAME='LF_MON_HOSTNET' AND CONSTNAME='UQ_WNODEPNODE') THEN
   EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_HOSTNET ADD CONSTRAINT UQ_WNODEPNODE UNIQUE(WEBNODE,PROCENODE,PROCETYPE)';
END IF;
END;
CALL ADDUQKEY;
DROP PROCEDURE ADDUQKEY;
REORG TABLE LF_MON_HOSTNET;



CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_MON_HNETWARN') THEN
  EXECUTE IMMEDIATE '--主机网络监控告警设置表
CREATE TABLE LF_MON_HNETWARN
(
	ID BIGINT PRIMARY KEY  NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
                    START WITH +1  
                    INCREMENT BY +1  
                    MINVALUE +1  
                    MAXVALUE +2147483647  
                    NO CYCLE  
                    NO CACHE  
                    NO ORDER ),	--自增ID
  MONPHONE VARCHAR(256) DEFAULT '' '' NOT NULL,    --接收告警手机号
  MONEMAIL VARCHAR(256) DEFAULT '' ''NOT NULL,     --接收告警邮箱
  CREATETIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , --创建时间
  UPDATETIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP   --记录更新时间
) IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;


--LF_MON_DHOST（主机动态信息表）增加字段 IPADDR
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DHOST' AND COLNAME='IPADDR') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DHOST ADD IPADDR VARCHAR(256) DEFAULT '' '' NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_BUSAREASEND;



--LF_MTTASK表增加一个字段FILEURI文件服务地址
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MTTASK' AND COLNAME='FILEURI') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MTTASK ADD FILEURI VARCHAR(128) DEFAULT '' '' NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MTTASK;


--增加GATEACCOUNT,GATEWAYID唯一约束
CREATE PROCEDURE ADDUQKEY
BEGIN ATOMIC 
IF NOT EXISTS(SELECT * FROM SYSCAT.KEYCOLUSE WHERE TABNAME='LF_MON_DGATEBUF' AND CONSTNAME='UQ_ACCGATE') THEN
   EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGATEBUF ADD CONSTRAINT UQ_ACCGATE UNIQUE(GATEACCOUNT,GATEWAYID)';
END IF;
END;
CALL ADDUQKEY;
DROP PROCEDURE ADDUQKEY;
REORG TABLE LF_MON_DGATEBUF;

CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_FILEDATA') THEN
  EXECUTE IMMEDIATE '--文件二进制表
CREATE TABLE LF_FILEDATA
(
	ID BIGINT PRIMARY KEY  NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
                    START WITH +1  
                    INCREMENT BY +1  
                    MINVALUE +1  
                    MAXVALUE +2147483647  
                    NO CYCLE  
                    NO CACHE  
                    NO ORDER ),	--自增ID
	FILEURL  VARCHAR(128) DEFAULT '' '' NOT NULL,   --文件url 唯一
	FSDATA BLOB(1G) NOT NULL,  						--二进制数据
	NODEID   VARCHAR(24) DEFAULT '' '' NOT NULL,    --节点编号
	CREATETIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP --创建时间
) IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;


--LF_MON_ERRHIS 错误告警表历史表  增加  SP未提交告警时间段和时长
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_ERRHIS' AND COLNAME='SPOFFLINEPRD') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_ERRHIS ADD SPOFFLINEPRD VARCHAR(32) DEFAULT '' '' NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_ERR;

UPDATE LF_MON_ERRHIS SET SPOFFLINEPRD=' ';

--数据库监控实时数据表  增加入库时间
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DBSTATE' AND COLNAME='DBSERVTIME') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DBSTATE ADD DBSERVTIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DBSTATE;

--主机网络监控实时数据表  增加入库时间
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_HOSTNET' AND COLNAME='DBSERVTIME') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_HOSTNET ADD DBSERVTIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_HOSTNET;

--SP账号监控实时数据表  增加入库时间
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DSPACINFO' AND COLNAME='DBSERVTIME') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DSPACINFO ADD DBSERVTIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DSPACINFO;

--程序监控实时数据表  增加入库时间
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DPROCE' AND COLNAME='DBSERVTIME') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DPROCE ADD DBSERVTIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DPROCE;

--主机监控实时数据表  增加入库时间
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DHOST' AND COLNAME='DBSERVTIME') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DHOST ADD DBSERVTIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DHOST;

--SPGATE账号监控实时数据表 增加入库时间
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGTACINFO' AND COLNAME='DBSERVTIME') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGTACINFO ADD DBSERVTIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGTACINFO;

--SPGATE账号缓冲监控实时数据表 增加入库时间
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MON_DGATEBUF' AND COLNAME='DBSERVTIME') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MON_DGATEBUF ADD DBSERVTIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MON_DGATEBUF;


/*不同内容动态模块使用换行标识，15：不使用换行；35：使用换行*/
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_MTTASK' AND COLNAME='MSGEDCODETYPE') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_MTTASK ADD MSGEDCODETYPE SMALLINT DEFAULT 15 NOT NULL';
  EXECUTE IMMEDIATE 'UPDATE LF_MTTASK SET MSGEDCODETYPE=15';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_MTTASK;
---V5.5.0.225-V6.2.0.275empend--

---V6.2.0.275-V6.2START      ---


--EMP脚本---
--57通过上行指令维护黑名单0:关1:开
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='ADDBLABYMOORDERFLAG';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=57 AND GLOBALKEY=GLKEYSTR) THEN
  INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE, MEMO) 
    VALUES (57, 'ADDBLABYMOORDERFLAG', 1, NULL, '通过上行指令维护黑名单0:关1:开'); 
END IF;
END;


--58上行记录黑名单指令最大ID
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='ADDBLAMOMAXID';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=58 AND GLOBALKEY=GLKEYSTR) THEN
    INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE, MEMO) 
    VALUES (58, 'ADDBLAMOMAXID', (SELECT MAX(ID) FROM MO_TASK), NULL, '上行记录黑名单指令最大ID');
END IF;
END;

--59增加黑名单上行指令
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='ADDBLAMOORDER';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=59 AND GLOBALKEY=GLKEYSTR) THEN
    INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE, MEMO) 
    VALUES (59, 'ADDBLAMOORDER', NULL, 'TD', '增加黑名单上行指令');
END IF;
END;


--60：删除黑名单上行指令
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='DELBLAMOORDER';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=60 AND GLOBALKEY=GLKEYSTR) THEN
    INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE, MEMO) 
     VALUES (60, 'DELBLAMOORDER', NULL, ' ', '删除黑名单上行指令');
END IF;
END;

--61：开通上行指令维护黑名单企业
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='BLACKCORPCODE';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=61 AND GLOBALKEY=GLKEYSTR) THEN
    INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE, MEMO)
     VALUES (61, 'BLACKCORPCODE', NULL, ' ', '开通上行指令维护黑名单企业');
END IF;
END;

--62：SP账号类型开关0:所有1:EMP应用
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='SPTYPEFLAG';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=62 AND GLOBALKEY=GLKEYSTR) THEN
    INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE, MEMO)
     VALUES (62, 'SPTYPEFLAG', 1, ' ', 'SP账号类型开关0:所有1:EMP应用');
END IF;
END;

--ORACLE DB2 是否支持小写账号 0 不支持  1支持
BEGIN ATOMIC
DECLARE PARAMITEMSTR VARCHAR(32);
SET PARAMITEMSTR='SPUSER_ISLWR';
IF NOT EXISTS(SELECT * FROM LF_SYS_PARAM WHERE PARAM_ITEM=PARAMITEMSTR) THEN
INSERT INTO LF_SYS_PARAM(PARAM_ITEM,PARAM_VALUE,MEMO) VALUES(PARAMITEMSTR, '0', 'ORACLE DB2 是否支持小写账号 0 不支持  1支持');
END IF;
END;



--历史记录表 增加版本信息字段
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_VERSION_HIS' AND COLNAME='VERSIONINFO') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_VERSION_HIS ADD VERSIONINFO VARCHAR(1000) DEFAULT '' '' NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_VERSION_HIS;

--历史记录表 增加是否发布版本 1 发布版本  0 测试版本
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_VERSION_HIS' AND COLNAME='ISRELEASE') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_VERSION_HIS ADD ISRELEASE SMALLINT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_VERSION_HIS;



--更新6.2.0.285版本描述信息
UPDATE LF_VERSION_HIS SET ISRELEASE=1,VERSIONINFO='1、[性能优化]新增网关集群、web集群功能。<br/>2、[监控管理]新增对文件服务器、数据库系统、网关主机等指标监控。<br/>3、[通信管理]新增区域号段管理功能。<br/>4、[系统管理]新增邮件通知提醒功能。<br/>5、[关于平台]新增升级版本及补丁的记录说明功能。<br/>6、[查询统计]优化区域发送对比图，调用地图分析区域发送量。<br/>7、[查询统计]优化群发历史查询，增加对短信内容的模糊搜索功能。<br/>8、[发送界面]优化单个任务批量提交支持1500万数据功能。<br/>9、[发送界面]优化压缩文件格式功能，增加支持rar文件上传。<br/>' 
WHERE VERSION='6.2.0.275';

--更新6.2.0.285_SP1版本描述信息
UPDATE LF_VERSION_HIS SET ISRELEASE=1,VERSIONINFO='1、解决修改根机构名称后重新登录，企业名称未生效问题。<br/>' 
WHERE VERSION='6.2.0.285_SP1';

--更新6.2.0.285_SP2版本描述信息
UPDATE LF_VERSION_HIS SET ISRELEASE=1,VERSIONINFO='1、兼容WebService 4.0接口，更新WSDL描述文件，并支持不同号码不同内容接口拓展参数可选。<br/>2、修改WebService接口单个手机号发送拓展子号填*，*号被加在通道后末尾的问题。<br/>' 
WHERE VERSION='6.2.0.285_SP2';



/*SP账号扣费/回收 存储过程  判断存储过程是否存在*/
CREATE PROCEDURE DROPPROC
BEGIN ATOMIC 
IF EXISTS (SELECT PROCNAME FROM SYSCAT.PROCEDURES WHERE PROCNAME='LF_SPFEEDEDT') THEN
   EXECUTE IMMEDIATE 'DROP PROCEDURE LF_SPFEEDEDT';
END IF; 
END;
CALL DROPPROC();
DROP PROCEDURE DROPPROC;


/*SP账号扣费/回收 存储过程*/
CREATE PROCEDURE "LF_SPFEEDEDT"
 (IN "VARSPUSER" VARCHAR(11),  /*SP账号*/
  IN "VARSENDCOUNT" BIGINT,   /*扣费/回收条数*/
  OUT "RETURNCOUNT" INTEGER /* 输出的结果码
								0  SP账号余额扣费成功
								1  SP账号余额回收成功
								-2 SP账号余额不足
								-4 SP账号没有充值
								-5 扣费/回收条数不能为0
								-8 SP账号余额回收条数异常
							 */
 ) 
  SPECIFIC "LF_SPFEEDEDT"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN          
	DECLARE BLCOUNT INT; --SP账号余额条数
	DECLARE YXCOUNT INT; --影响行数
 	IF VARSENDCOUNT=0 THEN
		--扣费/回收条数不能为0
		SET RETURNCOUNT=-5;
	ELSE
		IF VARSENDCOUNT>0 THEN
			UPDATE USERFEE SET SENDNUM=SENDNUM-VARSENDCOUNT,SENDEDNUM=SENDEDNUM+VARSENDCOUNT WHERE USERID=VARSPUSER AND SENDNUM>=VARSENDCOUNT;
			GET DIAGNOSTICS YXCOUNT = ROW_COUNT;
			IF YXCOUNT>0 THEN
			   --SP账号余额回收成功
			   SET RETURNCOUNT=0;
			ELSE
			   SELECT COUNT(USERID) INTO BLCOUNT FROM  USERFEE WHERE USERID=VARSPUSER;
		       IF BLCOUNT=0 THEN
			     --SP账号没有充值
			     SET RETURNCOUNT=-4;
			   ELSE
				 --SP账号余额不足
				 SET RETURNCOUNT=-2;
			   END IF;
			END IF;
		ELSE
			UPDATE USERFEE SET SENDNUM=SENDNUM-VARSENDCOUNT,SENDEDNUM=SENDEDNUM+VARSENDCOUNT WHERE USERID=VARSPUSER AND SENDEDNUM+VARSENDCOUNT>=0;
			GET DIAGNOSTICS YXCOUNT = ROW_COUNT;
			IF YXCOUNT>0 THEN
			   --SP账号余额回收成功
			   SET RETURNCOUNT=1;
			ELSE
			   SELECT COUNT(USERID) INTO BLCOUNT FROM USERFEE WHERE USERID=VARSPUSER;
		       IF BLCOUNT=0 THEN
			      --扣费/回收条数不能为0
			      SET RETURNCOUNT=-4;
			   ELSE
				  --SP账号余额回收条数异常
				  SET RETURNCOUNT=-8;
			   END IF;
			END IF;
		END IF;
	END IF;
END;


CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_SPFEEALARM') THEN
  EXECUTE IMMEDIATE '--SP费用阀值告警信息表
CREATE TABLE LF_SPFEEALARM
(
	ID BIGINT PRIMARY KEY  NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
                    START WITH +1  
                    INCREMENT BY +1  
                    MINVALUE +1  
                    MAXVALUE +2147483647  
                    NO CYCLE  
                    NO CACHE  
                    NO ORDER ),	--自增ID
  SPUSER VARCHAR(11) DEFAULT '' '' NOT NULL ,-- SP账号
  NOTICENAME VARCHAR(32) DEFAULT '' '' NOT NULL ,-- 通知人姓名
  ALARMPHONE VARCHAR(32) DEFAULT '' '' NOT NULL ,-- 告警手机号码
  MODI_USERID BIGINT DEFAULT 0 NOT NULL ,-- 最后更新记录的操作员ID
  CORP_CODE VARCHAR(64) DEFAULT '' '' NOT NULL ,-- 企业编码
  CREATE_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP ,-- 创建时间
  UPDATE_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP, -- 更新时间
  ALARMEDCOUNT INT DEFAULT 0 NOT NULL --告警次数
) IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;



CREATE PROCEDURE "CREATEEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT TABNAME FROM SYSCAT.TABLES WHERE TABNAME='LF_SPFEE_LOG') THEN
  EXECUTE IMMEDIATE '-- (SP账号充值/回收日志)
CREATE TABLE LF_SPFEE_LOG
(
	ID BIGINT PRIMARY KEY  NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
                    START WITH +1  
                    INCREMENT BY +1  
                    MINVALUE +1  
                    MAXVALUE +2147483647  
                    NO CYCLE  
                    NO CACHE  
                    NO ORDER ),	--自增ID
  SPUSER VARCHAR(11) DEFAULT '' '' NOT NULL ,	  -- SP账号
  ICOUNT BIGINT DEFAULT 0 NOT NULL ,	-- 充值/回收数量
  RESULT INT DEFAULT 0 NOT NULL ,	-- DEFAULT 0 ：成功，1：失败
  USERID BIGINT DEFAULT 0 NOT NULL,	-- 操作员ID
  CORP_CODE VARCHAR(64) DEFAULT '' '' NOT NULL ,-- 企业编码
  OPR_TIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , -- 操作时间
  MEMO VARCHAR(512) DEFAULT '' '' NOT NULL
) IN EMP_TABLESPACE';
END IF;
END ;
CALL CREATEEXISTS;
DROP PROCEDURE CREATEEXISTS;



/*SP账号充值回收 存储过程  判断存储过程是否存在*/
CREATE PROCEDURE DROPPROC
BEGIN ATOMIC 
IF EXISTS (SELECT PROCNAME FROM SYSCAT.PROCEDURES WHERE PROCNAME='LF_SPUSERBALANCE') THEN
   EXECUTE IMMEDIATE 'DROP PROCEDURE LF_SPUSERBALANCE';
END IF; 
END;
CALL DROPPROC();
DROP PROCEDURE DROPPROC;

/*SP账号充值回收 存储过程  判断存储过程是否存在*/
CREATE PROCEDURE LF_SPUSERBALANCE
 (IN VARSPUSER VARCHAR(11), --SP账号
  IN VARCOUNT INTEGER, --充值数量
  IN VARCOATTYPE INTEGER, --充值（1）/回收（0）
  OUT VARRETURNCOUNT INTEGER /**输出的结果码
								0 充值/回收成功
								-2 SP账号充值/回收数不能为空或者为0
								-5 回收余额数大于SP账号可分配数
								-6 获取SP账号余额记录失败
								-7 SP账号没有进行充值过
							*/
 ) 
  SPECIFIC "LF_SPUSERBALANCE"
  LANGUAGE SQL
  NOT DETERMINISTIC
  CALLED ON NULL INPUT
  EXTERNAL ACTION
  OLD SAVEPOINT LEVEL
  MODIFIES SQL DATA
  INHERIT SPECIAL REGISTERS
  BEGIN      
    DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VARBLCOUNT BIGINT;
	DECLARE VARUID INT;
	DECLARE VARYXCOUNT INT;
	 IF VARCOUNT = 0 OR VARCOUNT IS NULL THEN
        --SP账号充值/回收数不能为空或者为0
         SET VARRETURNCOUNT=-2;
         RETURN;
     END IF;
	 --充值
     IF VARCOATTYPE=1 THEN
		UPDATE USERFEE SET SENDNUM=SENDNUM+VARCOUNT WHERE USERID=UPPER(VARSPUSER);
        GET DIAGNOSTICS VARYXCOUNT = ROW_COUNT;
        IF VARYXCOUNT=0 THEN
		  --插入费用表
          SELECT UID INTO VARUID  FROM USERDATA WHERE USERID=UPPER(VARSPUSER);
		  INSERT INTO USERFEE (UID,USERID,SENDNUM) VALUES (VARUID,UPPER(VARSPUSER),VARCOUNT);
        END IF;
    ELSE
		  UPDATE USERFEE SET SENDNUM=SENDNUM-VARCOUNT WHERE SENDNUM>=VARCOUNT AND USERID=UPPER(VARSPUSER);
          GET DIAGNOSTICS VARYXCOUNT = ROW_COUNT;
          IF VARYXCOUNT=0 THEN
			  SELECT COUNT(USERID) INTO VARBLCOUNT FROM USERFEE  WHERE USERID=UPPER(VARSPUSER);
              IF SQLCODE<>0 THEN
                   --获取SP账号余额记录失败
                   SET VARRETURNCOUNT=-6;
                   ROLLBACK;
                   RETURN;
			 END IF;
              IF VARBLCOUNT=0 THEN
                --SP账号没有进行充值过
                SET VARRETURNCOUNT=-7;
              ELSE
                --回收余额数大于SP账号可分配数
                SET VARRETURNCOUNT=-5;
              END IF;
              ROLLBACK;
              RETURN;
          END IF;
       END IF;
      --充值/回收成功
      SET VARRETURNCOUNT=0;
      COMMIT;
END;

--通信管理－网关前端配置－SP账号充值/回收 ： /spb_spBalanceMgr.htm
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2823;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
	 INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
  	 VALUES (PRIID, 13, 1, '查看', '1900-1425-0', 'SP账号充值/回收', '网关前端配置', '1900-1425', '/spb_spBalanceMgr.htm');
END IF;
END;

--通信管理－网关前端配置－SP账号充值/回收  加权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2823;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER VALUES(1,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2823;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER VALUES(2,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2823;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER VALUES(4,PRIID);
END IF;
END;



--通信管理－网关前端配置－SP账号充值/回收-充值权限 
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2824;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
	 INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
  	 VALUES (PRIID, 13, null, '充值', '1900-1425-1', 'SP账号充值/回收', '网关前端配置', '1900-1425', null);
END IF;
END;

--通信管理－网关前端配置－SP账号充值/回收-充值权限   加权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2824;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER VALUES(1,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2824;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER VALUES(2,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2824;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER VALUES(4,PRIID);
END IF;
END;



--通信管理－网关前端配置－SP账号充值/回收-回收权限 
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2825;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
	  INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
  	  VALUES (PRIID, 13, null, '回收', '1900-1425-2', 'SP账号充值/回收', '网关前端配置', '1900-1425', null);
END IF;
END;

--通信管理－网关前端配置－SP账号充值/回收-回收权限   加权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2825;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER VALUES(1,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2825;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER VALUES(2,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2825;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER VALUES(4,PRIID);
END IF;
END;


--通信管理－网关前端配置－SP账号充值/回收-阀值权限 
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2826;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
	 INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
  	 VALUES (PRIID, 13, null, '阀值', '1900-1425-3', 'SP账号充值/回收', '网关前端配置', '1900-1425', null);
END IF;
END;

--通信管理－网关前端配置－SP账号充值/回收-阀值权限    加权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2826;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER VALUES(1,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2826;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER VALUES(2,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2826;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER VALUES(4,PRIID);
END IF;
END;


--通信管理－网关前端配置－SP账号充值/回收-批量充值 权限 
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2827;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
	 INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
  	 VALUES (PRIID, 13, null, '批量充值', '1900-1425-4', 'SP账号充值/回收', '网关前端配置', '1900-1425', null);
END IF;
END;

--通信管理－网关前端配置－SP账号充值/回收-批量充值权限   加权限
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2827;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER VALUES(1,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2827;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER VALUES(2,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2827;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER VALUES(4,PRIID);
END IF;
END;



--63：超过内存总量百分比时间
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='EXCEEDMEMORYTIME';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=63 AND GLOBALKEY=GLKEYSTR) THEN
      INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE, MEMO) 
  	  VALUES (63, 'EXCEEDMEMORYTIME', 300000, ' ', '超过内存总量百分比时间');
END IF;
END;

--64：内存总量百分比
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='MEMORYPERCENTAGE';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=64 AND GLOBALKEY=GLKEYSTR) THEN
    INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE, MEMO) 
	VALUES (64, 'MEMORYPERCENTAGE', 0, '0.8', '内存总量百分比');
END IF;
END;

--65：查询运营商余额备用URL
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='BALANCEBAKURL';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=65 AND GLOBALKEY=GLKEYSTR) THEN
  INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE, MEMO) 
  VALUES (65, 'BALANCEBAKURL', 0, 'http://112.91.147.37:8015/mboss/WebService/SubToUnionInterface.asmx?WSDL@http://218.204.222.12:8015/mboss/WebService/SubToUnionInterface.asmx?WSDL'
  , '查询运营商余额备用URL');
END IF;
END;

--66：实时数据保留实时库时间
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='READDATASAVETIME';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=66 AND GLOBALKEY=GLKEYSTR) THEN
   INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE, MEMO) VALUES (66, 'READDATASAVETIME', -1, ' ', '实时数据保留实时库时间');
END IF;
END;

--67：使用历史库时间
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='USEHISTORYDBTIME';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=67 AND GLOBALKEY=GLKEYSTR) THEN
   INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE, MEMO) VALUES (67, 'USEHISTORYDBTIME', 0, '201610 ', '使用历史库时间');
END IF;
END;

--68:查询上行退订设置黑名单号码数
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='MOTDCOUNT';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=68 AND GLOBALKEY=GLKEYSTR) THEN
  INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE, MEMO) 
  VALUES (68, 'MOTDCOUNT', 500, ' ', '查询上行退订设置黑名单号码数');
END IF;
END;



--69:服务器请求URL地址0不使用1使用
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='USESERVERURLFLAG';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=69 AND GLOBALKEY=GLKEYSTR) THEN
	INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE, MEMO) 
	VALUES (69, 'USESERVERURLFLAG', 0, ' ', '服务器请求URL地址0不使用1使用');
END IF;
END;

--70:服务器请求URL地址
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='SERVERURL';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=70 AND GLOBALKEY=GLKEYSTR) THEN
	INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE, MEMO) 
	VALUES (70, 'SERVERURL', 0, ' ', '服务器请求URL地址');
END IF;
END;

---EMP脚本END----

---V6.2.0.275-V6.2END      ---

--71:短信接入模板编码
BEGIN ATOMIC
DECLARE GLKEYSTR VARCHAR(32);
SET GLKEYSTR='TEMP_CODE';
IF NOT EXISTS(SELECT * FROM LF_GLOBAL_VARIABLE WHERE GLOBALID=71 AND GLOBALKEY=GLKEYSTR) THEN
	INSERT INTO LF_GLOBAL_VARIABLE (GLOBALID, GLOBALKEY, GLOBALVALUE, GLOBALSTRVALUE, MEMO)
	VALUES (71, 'TEMP_CODE', 1000000000, ' ','短信接入模板编码');
END IF;
END;


/*网关初始化数据
INSERT INTO GW_MULTI_ENTERP(ECID,FUNTYPE) VALUES (100001, 'cstd/jd0001');
网关初始化数据*/

CREATE TABLE LF_MT_PRI
(
	ID BIGINT PRIMARY KEY  NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
                    START WITH +1  
                    INCREMENT BY +1  
                    MINVALUE +1  
                    MAXVALUE +2147483647  
                    NO CYCLE  
                    NO CACHE  
                    NO ORDER ),	--自增ID
	SPUSERID VARCHAR(32) DEFAULT '' NOT NULL,/*发送账号*/
	USER_ID BIGINT DEFAULT 0 NOT NULL,/*操作员USERID*/
	CREATETIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP ,/*创建时间*/
	CREATE_USERID BIGINT DEFAULT 0 NOT NULL,/*创建者USERID*/
	CORP_CODE VARCHAR(64) DEFAULT '' NOT NULL /*企业编码*/
) IN EMP_TABLESPACE;


/*接入账号查看权限 权限 */
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2834;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
	 INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
  	 VALUES (PRIID,13, 1, '查看', '1900-1470-0', '接入账号查看权限', '网关前端配置', '1900-1470', '/pgb_accessPri.htm');
END IF;
END;

/*接入账号查看权限 权限 */
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2834;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER VALUES(1,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2834;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER VALUES(2,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2834;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER VALUES(4,PRIID);
END IF;
END;

/*接入账号查看权限 关系绑定 权限 */
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2842;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
	 INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
  	 VALUES (PRIID, 13, NULL, '关系绑定', '1900-1470-1', '接入账号查看权限', '网关前端配置', '1900-1470', NULL);
END IF;
END;

/*接入账号查看权限 关系绑定 权限 */
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2842;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER VALUES(1,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2842;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER VALUES(2,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2842;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER VALUES(4,PRIID);
END IF;
END;

--企业表增加 是否开启上行退订功能 默认值为0  0不启动  1是启用
CREATE PROCEDURE "ADDCOLUMNEXISTS"
BEGIN ATOMIC 
IF NOT EXISTS (SELECT * FROM SYSCAT.COLUMNS WHERE TABNAME='LF_CORP' AND COLNAME='ISOPENTD') THEN
  EXECUTE IMMEDIATE 'ALTER TABLE LF_CORP ADD ISOPENTD INT DEFAULT 0 NOT NULL';
END IF;
END ;
CALL ADDCOLUMNEXISTS;
DROP PROCEDURE ADDCOLUMNEXISTS;
REORG TABLE LF_CORP;



/*代理账号管理*/
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2845;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
	 INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
  	 VALUES (PRIID, 13, 1, '查看', '1900-1480-0', '代理账号管理', '网关前端配置', '1900-1480', '/pag_proxyMage.htm');
END IF;
END;

/*代理账号管理*/
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2845;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER VALUES(1,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2845;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER VALUES(2,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2845;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER VALUES(4,PRIID);
END IF;
END;


/*代理账号管理 新增权限*/
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2846;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
	 INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
  	 VALUES (PRIID, 13, NULL, '新增', '1900-1480-1', '代理账号管理', '网关前端配置', '1900-1480', NULL);
END IF;
END;

/*代理账号管理 新增权限*/
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2846;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER VALUES(1,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2846;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER VALUES(2,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2846;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER VALUES(4,PRIID);
END IF;
END;


/*代理账号管理 修改权限*/
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2847;
IF NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=PRIID) THEN
	 INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
  	 VALUES (PRIID, 13, NULL, '修改', '1900-1480-2', '代理账号管理', '网关前端配置', '1900-1480', NULL);
END IF;
END;

/*代理账号管理 修改权限*/
BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2847;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=1) THEN
INSERT INTO LF_IMPOWER VALUES(1,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2847;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=2) THEN
INSERT INTO LF_IMPOWER VALUES(2,PRIID);
END IF;
END;

BEGIN ATOMIC
DECLARE PRIID BIGINT;
SET PRIID=2847;
IF NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=PRIID AND ROLE_ID=4) THEN
INSERT INTO LF_IMPOWER VALUES(4,PRIID);
END IF;
END;



--增加版本信息
BEGIN ATOMIC 
DECLARE VERSIONSTR VARCHAR(32);
DECLARE DBVERSIONSTR VARCHAR(32);
DECLARE WBSVERSIONSTR VARCHAR(32);
DECLARE SPGATEVERSIONSTR VARCHAR(32);
DECLARE NUMSTR INT;
DECLARE TOTALSTR INT;
SET VERSIONSTR = '6.6.0.343';
SET DBVERSIONSTR = '6.35';
SET WBSVERSIONSTR='8.4.10.163';
SET SPGATEVERSIONSTR='6.1.23.316';
SET NUMSTR=4;
SET TOTALSTR=4;
--EMP产品版本记录
IF NOT EXISTS(SELECT * FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=1000) THEN
--EMP-WEB
INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
VALUES(1000,1000,VERSIONSTR,CURRENT TIMESTAMP,CURRENT TIMESTAMP,'EMP-WEB');
ELSE
UPDATE LF_VERSION SET UPDATETIME=CURRENT TIMESTAMP,VERSION=VERSIONSTR WHERE VERSION=VERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=1000;
END IF;
IF NOT EXISTS(SELECT * FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=2000) THEN
--EMP_GATEWAY
INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
VALUES(1000,2000,WBSVERSIONSTR,CURRENT TIMESTAMP,CURRENT TIMESTAMP,'EMP_GATEWAY');
ELSE
UPDATE LF_VERSION SET UPDATETIME=CURRENT TIMESTAMP,VERSION=WBSVERSIONSTR WHERE VERSION=WBSVERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=2000;
END IF;
IF NOT EXISTS(SELECT * FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=3000) THEN
--SMT_SPGATE
INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
VALUES(1000,3000,SPGATEVERSIONSTR,CURRENT TIMESTAMP,CURRENT TIMESTAMP,'SMT_SPGATE');
ELSE
UPDATE LF_VERSION SET UPDATETIME=CURRENT TIMESTAMP,VERSION=SPGATEVERSIONSTR WHERE VERSION=SPGATEVERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=3000;
END IF;
--EMP产品版本历史记录
IF NOT EXISTS(SELECT * FROM LF_VERSION_HIS WHERE VERSION=VERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=1000) THEN
--EMP-WEB
INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO,ISRELEASE,VERSIONINFO)
VALUES(1000,1000,VERSIONSTR,CURRENT TIMESTAMP,CURRENT TIMESTAMP,'EMP-WEB',1,'1、EMP接入需支持SMPP3.4国际标准接口，包括客户侧接入和连接运营商侧；<br />2、支持手机上行指令加入全局黑名单，同时提供开关设置；<br />3、文件缓存优化；<br />4、查询接口调用频率限制；<br />5、LINUX系统下使用非root用户安装部署；<br />6、LINUX部署工具优化及增加进程守护。<br />');
ELSE
UPDATE LF_VERSION_HIS SET UPDATETIME=CURRENT TIMESTAMP,ISRELEASE=1,VERSIONINFO='1、EMP接入需支持SMPP3.4国际标准接口，包括客户侧接入和连接运营商侧；<br />2、支持手机上行指令加入全局黑名单，同时提供开关设置；<br />3、文件缓存优化；<br />4、查询接口调用频率限制；<br />5、LINUX系统下使用非root用户安装部署；<br />6、LINUX部署工具优化及增加进程守护。<br />' WHERE VERSION=VERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=1000;
END IF;

IF NOT EXISTS(SELECT * FROM LF_VERSION_HIS WHERE VERSION=WBSVERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=2000) THEN
--EMP_GATEWAY
INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
VALUES(1000,2000,WBSVERSIONSTR,CURRENT TIMESTAMP,CURRENT TIMESTAMP,'EMP_GATEWAY');
ELSE
UPDATE LF_VERSION_HIS SET UPDATETIME=CURRENT TIMESTAMP WHERE VERSION=WBSVERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=2000;
END IF;

IF NOT EXISTS(SELECT * FROM LF_VERSION_HIS WHERE VERSION=SPGATEVERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=3000) THEN
--SMP_SPGATE
INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
VALUES(1000,3000,SPGATEVERSIONSTR,CURRENT TIMESTAMP,CURRENT TIMESTAMP,'SMP_SPGATE');
ELSE
UPDATE LF_VERSION_HIS SET UPDATETIME=CURRENT TIMESTAMP WHERE VERSION=SPGATEVERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=3000;
END IF;

IF NOT EXISTS(SELECT * FROM LF_DB_SCRIPT WHERE VERSION=DBVERSIONSTR AND CURRENT_NO=NUMSTR AND TOTAL=TOTALSTR) THEN
--EMP产品数据库版本信息表
INSERT INTO LF_DB_SCRIPT(VERSION,UPDATETIME,CREATETIME,CURRENT_NO,TOTAL,STATE,MEMO)
VALUES(DBVERSIONSTR,CURRENT TIMESTAMP,CURRENT TIMESTAMP,NUMSTR,TOTALSTR,2,'3号脚本');
ELSE
UPDATE LF_DB_SCRIPT SET STATE=2,UPDATETIME=CURRENT TIMESTAMP WHERE  VERSION=DBVERSIONSTR AND CURRENT_NO=NUMSTR AND TOTAL=TOTALSTR;
END IF;
END;