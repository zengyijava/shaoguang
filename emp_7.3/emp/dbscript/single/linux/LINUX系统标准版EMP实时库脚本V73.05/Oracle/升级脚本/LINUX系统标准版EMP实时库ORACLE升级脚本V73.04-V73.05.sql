-----------V73.04-V73.05 START------------------------
DECLARE COUNTNUM INT;
        DBVERSIONSTR VARCHAR2(32);
        NUMNO INT;
        TOTALINT INT;
BEGIN
  DBVERSIONSTR:='73.05';
  NUMNO:=1;
  TOTALINT:=1;
  SELECT COUNT(*) INTO COUNTNUM FROM LF_DB_SCRIPT WHERE VERSION=DBVERSIONSTR;
  IF COUNTNUM=0 THEN
    --EMP产品数据库版本信息表
    INSERT INTO LF_DB_SCRIPT(VERSION,UPDATETIME,CREATETIME,CURRENT_NO,TOTAL,STATE,MEMO)
    VALUES(DBVERSIONSTR,SYSDATE,SYSDATE,NUMNO,TOTALINT,1,'WEB包更改');
    COMMIT;
  END IF;
END;
/

/*WEB升级脚本 START*/
-- 删除重复数据
DELETE FROM A_PROVINCECITY where city='遵义';
INSERT INTO A_PROVINCECITY (PROVINCE, CITY, AREACODE, PROVINCECODE)VALUES ('贵州', '遵义', 852, 851);
/*WEB升级脚本 END*/

/*网关升级脚本 START*/
--PROMPT
--PROMPT CREATING PROCEDURE GW_WR_MTTASKBAKV3
--PROMPT ===============================
--PROMPT
CREATE OR REPLACE PROCEDURE GW_WR_MTTASKBAKV3
 (
    PIUID         IN GW_MT_TASK_BAK."UID"%TYPE,
    PIPTMSGID     IN GW_MT_TASK_BAK.PTMSGID%TYPE,
    PIECID        IN GW_MT_TASK_BAK.ECID%TYPE,
    PISENDSTATUS  IN GW_MT_TASK_BAK.SENDSTATUS%TYPE,
    PIRETFLAG     IN GW_MT_TASK_BAK.RETFLAG%TYPE,
    PIPKNUMBER    IN GW_MT_TASK_BAK.PKNUMBER%TYPE,
    PIPKTOTAL     IN GW_MT_TASK_BAK.PKTOTAL%TYPE,
    PIFEEFLAG     IN GW_MT_TASK_BAK.FEEFLAG%TYPE,
    PISENDLEVEL   IN GW_MT_TASK_BAK.SENDLEVEL%TYPE,
    PIRECVMTTIME  IN GW_MT_TASK_BAK.RECVMTTIME%TYPE,
    PIUSERID      IN GW_MT_TASK_BAK.USERID%TYPE,
    PISPGATE      IN GW_MT_TASK_BAK.SPGATE%TYPE,
    PICPNO        IN GW_MT_TASK_BAK.CPNO%TYPE,
    PIPHONE       IN GW_MT_TASK_BAK.PHONE%TYPE,
    PIMESSAGE     IN GW_MT_TASK_BAK.MESSAGE%TYPE,
    PITASKID      IN GW_MT_TASK_BAK.TASKID%TYPE,
    PIERRORCODE   IN GW_MT_TASK_BAK.ERRORCODE%TYPE,
    PITPUDHI      IN GW_MT_TASK_BAK.TPUDHI%TYPE,
    PILONGMSGSEQ  IN GW_MT_TASK_BAK.LONGMSGSEQ%TYPE,
    PIMSGFMT      IN GW_MT_TASK_BAK.MSGFMT%TYPE,
    PIUNICOM      IN GW_MT_TASK_BAK.UNICOM%TYPE,
    PIMOBILEAREA  IN GW_MT_TASK_BAK.MOBILEAREA%TYPE,
    PISVRTYPE     IN GW_MT_TASK_BAK.SVRTYPE%TYPE,
    PIP1          IN GW_MT_TASK_BAK.P1%TYPE,
    PIP2          IN GW_MT_TASK_BAK.P2%TYPE,
    PIP3          IN GW_MT_TASK_BAK.P3%TYPE,
    PIP4          IN GW_MT_TASK_BAK.P4%TYPE,
    PIUSERMSGID   IN GW_MT_TASK_BAK.USERMSGID%TYPE,
    PIMODULEID    IN GW_MT_TASK_BAK.MODULEID%TYPE,
    PIATTIME      IN GW_MT_TASK_BAK.ATTIME%TYPE,
    PIVALIDTIME   IN GW_MT_TASK_BAK.VALIDTIME%TYPE,
    PISENDTYPE    IN GW_MT_TASK_BAK.SENDTYPE%TYPE,
    PIBATCHID     IN GW_MT_TASK_BAK.BATCHID%TYPE,
    PIAREACODE    IN GW_MT_TASK_BAK.AREACODE%TYPE,
    PICUSTID     IN GW_MT_TASK_BAK.CUSTID%TYPE,
    PIEXDATA    IN GW_MT_TASK_BAK.EXDATA%TYPE,
	PISUID1    IN GW_MT_TASK_BAK.SUID1%TYPE,
	PILUID1    IN GW_MT_TASK_BAK.LUID1%TYPE,
	PILONGMSG 	  IN GW_MT_TASK_BAK.LONGMSG%TYPE,
    PITMPLID 	  IN GW_MT_TASK_BAK.TMPLID %TYPE,
    PICHGRADE     IN GW_MT_TASK_BAK.CHGRADE%TYPE,
    PIMSGTYPE     IN GW_MT_TASK_BAK.MSGTYPE%TYPE,
    PIRMSVALIDTM  IN GW_MT_TASK_BAK.RMSVALIDTM%TYPE,
    PIRMSRPTFLAG  IN GW_MT_TASK_BAK.RMSRPTFLAG%TYPE,
    PIPROTOCOLVER IN GW_MT_TASK_BAK.PROTOCOLVER%TYPE,
    PITMPLTYPE    IN GW_MT_TASK_BAK.TMPLTYPE%TYPE,
    PITITLE 	  IN GW_MT_TASK_BAK.TITLE%TYPE,
    PISHOWAY      IN GW_MT_TASK_BAK.SHOWAY%TYPE,
    PIDLDWAY 	  IN GW_MT_TASK_BAK.DLDWAY%TYPE,
    PIDLDNEY 	  IN GW_MT_TASK_BAK.DLDNEY%TYPE,
    PIISFREE 	  IN GW_MT_TASK_BAK.ISFREE%TYPE,
    PISHOWTIME 	  IN GW_MT_TASK_BAK.SHOWTIME%TYPE
 )
AS
  PICNT NUMBER;
  BEGIN
    SELECT COUNT(ID) INTO PICNT FROM GW_MT_TASK_BAK WHERE PTMSGID=PIPTMSGID;
  IF PICNT=0 THEN	---不存在则往GW_MT_TASK_BAK表里插入数据
    INSERT INTO GW_MT_TASK_BAK("UID",PTMSGID,ECID,SENDSTATUS,RETFLAG,PKNUMBER,PKTOTAL,FEEFLAG,SENDLEVEL,
    RECVMTTIME,USERID,SPGATE,CPNO,PHONE,MESSAGE,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,
    MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1,
	LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME)
    VALUES(PIUID,PIPTMSGID,PIECID,PISENDSTATUS,PIRETFLAG,PIPKNUMBER,PIPKTOTAL,PIFEEFLAG,PISENDLEVEL,PIRECVMTTIME,
    PIUSERID,PISPGATE,PICPNO,PIPHONE,PIMESSAGE,PITASKID,PIERRORCODE,PITPUDHI,PILONGMSGSEQ,PIMSGFMT,PIUNICOM,
    PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA,PISUID1,PILUID1,
	PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIRMSRPTFLAG,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME);
  END IF;
END;
/

-------------------增加版本信息-------------------------------------------
DECLARE
  VERSION INT;
BEGIN
  SELECT COUNT(*) INTO VERSION FROM VERSION_CMPP WHERE VERSION='4.06.08';
  IF VERSION < 1 THEN
    INSERT INTO VERSION_CMPP (VERSION,VERSIONDATE,UPGRADETIME)
    VALUES ('4.06.08',TO_CHAR(SYSDATE,'YYYY-MM-DD'),TO_CHAR(SYSDATE,'HH24:MI:SS'));
  END IF;
  COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE COMPILE_PROCEDURE
AS
V_SQL VARCHAR2(2000);
BEGIN

  FOR V IN (SELECT * FROM USER_OBJECTS WHERE OBJECT_TYPE IN ('PROCEDURE','TRIGGER') AND STATUS='INVALID' AND OBJECT_NAME NOT LIKE '%BIN$%')
    LOOP
      V_SQL:= 'ALTER  '||V.OBJECT_TYPE||' '|| V.OBJECT_NAME||' COMPILE';
      EXECUTE IMMEDIATE V_SQL;
    END LOOP;
END;
/
CALL COMPILE_PROCEDURE();
/
/*网关升级脚本 END*/


--增加版本信息--
DECLARE COUNTNUM INT;
        VERSIONSTR VARCHAR2(32);
        DBVERSIONSTR VARCHAR2(32);
        WBSVERSIONSTR VARCHAR2(32);
        SPGATEVERSIONSTR VARCHAR2(32);
        NUMNO INT;
        TOTALINT INT;
BEGIN
    VERSIONSTR:='7.3.5.588.SP5';
    DBVERSIONSTR:='73.05';
    WBSVERSIONSTR:='8.11.4.389';
    SPGATEVERSIONSTR:='6.1.51.343';
  NUMNO:=1;
  TOTALINT:=1;
  --EMP产品版本记录
  SELECT COUNT(*) INTO COUNTNUM FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=1000;
  IF COUNTNUM=0 THEN
   --EMP-WEB
   INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
   VALUES(1000,1000,VERSIONSTR,SYSDATE,SYSDATE,'EMP-WEB');
  ELSE
    UPDATE LF_VERSION SET UPDATETIME=SYSDATE,VERSION=VERSIONSTR WHERE PRODUCT_ID=1000 AND PROCESS_ID=1000;
  END IF;
  COMMIT;
  SELECT COUNT(*) INTO COUNTNUM FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=2000;
  IF COUNTNUM=0 THEN
   --EMP_GATEWARY
   INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
   VALUES(1000,2000,WBSVERSIONSTR,SYSDATE,SYSDATE,'EMP_GATEWARY');
  ELSE
    UPDATE LF_VERSION SET UPDATETIME=SYSDATE,VERSION=WBSVERSIONSTR WHERE PRODUCT_ID=1000 AND PROCESS_ID=2000;
  END IF;
  COMMIT;
  SELECT COUNT(*) INTO COUNTNUM FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=3000;
  IF COUNTNUM=0 THEN
   --SMT_SPGATE
   INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
   VALUES(1000,3000,SPGATEVERSIONSTR,SYSDATE,SYSDATE,'SMT_SPGATE');
  ELSE
    UPDATE LF_VERSION SET UPDATETIME=SYSDATE,VERSION=SPGATEVERSIONSTR WHERE PRODUCT_ID=1000 AND PROCESS_ID=3000;
  END IF;
  COMMIT;

  --EMP产品版本历史记录
  SELECT COUNT(*) INTO COUNTNUM FROM LF_VERSION_HIS WHERE VERSION=VERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=1000;
  IF COUNTNUM=0 THEN
    --EMP-WEB
    INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO,ISRELEASE,VERSIONINFO)
    VALUES(1000,1000,VERSIONSTR,SYSDATE,SYSDATE,'EMP-WEB',1,'1、修复了最新版本谷歌浏览器无法打开页面的问题。<br />2、修复了移动办公 > 企业短信，经典/传统皮肤下，选择短信模板，没有翻页选项的问题。<br />3、修复了移动办公 > 移动财务 ：手工录入数据时，点击‘提交’后短信内容不正确，且只有第一行数据有效，其他行的数据变为无效号码的问题。<br />4、修复了移动办公 > 移动财务，通过手动录入数据的方式添加发送号码，号码中自动添加转义符，多个号码无法发送的问题等。<br />');
  ELSE
    UPDATE LF_VERSION_HIS SET UPDATETIME=SYSDATE,ISRELEASE=1,VERSIONINFO='1、修复了最新版本谷歌浏览器无法打开页面的问题。<br />2、修复了移动办公 > 企业短信，经典/传统皮肤下，选择短信模板，没有翻页选项的问题。<br />3、修复了移动办公 > 移动财务 ：手工录入数据时，点击‘提交’后短信内容不正确，且只有第一行数据有效，其他行的数据变为无效号码的问题。<br />4、修复了移动办公 > 移动财务，通过手动录入数据的方式添加发送号码，号码中自动添加转义符，多个号码无法发送的问题等。<br />' WHERE VERSION=VERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=1000;
  END IF;
  COMMIT;

  SELECT COUNT(*) INTO COUNTNUM FROM LF_VERSION_HIS WHERE VERSION=WBSVERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=2000;
  IF COUNTNUM=0 THEN
    --EMP_GATEWARY
    INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
    VALUES(1000,2000,WBSVERSIONSTR,SYSDATE,SYSDATE,'EMP_GATEWARY');
  ELSE
    UPDATE LF_VERSION_HIS SET UPDATETIME=SYSDATE WHERE VERSION=WBSVERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=2000;
  END IF;
  COMMIT;

  SELECT COUNT(*) INTO COUNTNUM FROM LF_VERSION_HIS WHERE VERSION=SPGATEVERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=3000;
  IF COUNTNUM=0 THEN
    --SMT_SPGATE
    INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
    VALUES(1000,3000,SPGATEVERSIONSTR,SYSDATE,SYSDATE,'SMT_SPGATE');
  ELSE
    UPDATE LF_VERSION_HIS SET UPDATETIME=SYSDATE WHERE VERSION=SPGATEVERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=3000;
  END IF;
  COMMIT;

  SELECT COUNT(*) INTO COUNTNUM FROM LF_DB_SCRIPT WHERE VERSION=DBVERSIONSTR;
  IF COUNTNUM=0 THEN
    --EMP产品数据库版本信息表
    INSERT INTO LF_DB_SCRIPT(VERSION,UPDATETIME,CREATETIME,CURRENT_NO,TOTAL,STATE,MEMO)
    VALUES(DBVERSIONSTR,SYSDATE,SYSDATE,NUMNO,TOTALINT,2,'WEB更改');
  ELSE
    UPDATE LF_DB_SCRIPT SET STATE=2,UPDATETIME=SYSDATE WHERE  VERSION=DBVERSIONSTR AND CURRENT_NO=NUMNO AND TOTAL=TOTALINT;
  END IF;
  COMMIT;
END;
/
--重新编译所有存储过程和触发器
CALL COMPILE_PROCEDURE();
/
-----------V73.04-V73.05 END------------------------