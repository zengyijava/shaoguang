/*****V73.04-V73.05 END*/
DELIMITER $
DROP PROCEDURE IF EXISTS `LF_PVERV0`  $

CREATE DEFINER=`root`@`%`  PROCEDURE `LF_PVERV0`(
    DBVERSIONSTR VARCHAR(32),
    NUM INT,
    TOTALSTR INT
)
BEGIN
    IF NOT EXISTS(SELECT * FROM LF_DB_SCRIPT WHERE VERSION=DBVERSIONSTR) THEN
    /*EMP产品数据库版本信息表*/ 
    INSERT INTO LF_DB_SCRIPT(VERSION,UPDATETIME,CREATETIME,CURRENT_NO,TOTAL,STATE,MEMO)
    VALUES(DBVERSIONSTR,NOW(),NOW(),NUM,TOTALSTR,1,'WEB包更改');
    END IF;
END        $   

CALL LF_PVERV0('73.05',1,1)  $
DROP PROCEDURE IF EXISTS `LF_PVERV0`  $

/*WEB升级脚本 START*/
/*删除重复数据*/
DELETE FROM A_PROVINCECITY where city='遵义'  $
INSERT INTO A_PROVINCECITY (PROVINCE, CITY, AREACODE, PROVINCECODE)VALUES ('贵州', '遵义', 852, 851)  $
/*WEB升级脚本 END*/

/*网关升级脚本 START*/
-- ----------------------------
-- PROCEDURE STRUCTURE FOR GW_WR_MTTASKBAKV3
-- ----------------------------
DROP PROCEDURE IF EXISTS `GW_WR_MTTASKBAKV3`  $

CREATE DEFINER=`root`@`%` PROCEDURE `GW_WR_MTTASKBAKV3`
 (
    PIUID         INT(11),
    PIPTMSGID     BIGINT(20),
    PIECID        INT(11),
    PISENDSTATUS  SMALLINT,
    PIRETFLAG     TINYINT UNSIGNED,
    PIPKNUMBER    TINYINT UNSIGNED,
    PIPKTOTAL     TINYINT UNSIGNED,
    PIFEEFLAG     TINYINT UNSIGNED,
    PISENDLEVEL   TINYINT UNSIGNED,
    PIRECVMTTIME  DATETIME,
    PIUSERID      VARCHAR(11),
    PISPGATE      VARCHAR(21),
    PICPNO        VARCHAR(21),
    PIPHONE       VARCHAR(21),
    PIMESSAGE     VARCHAR(3000),
    PITASKID      INT(11),
    PIERRORCODE   VARCHAR(7),
    PITPUDHI      TINYINT UNSIGNED,
    PILONGMSGSEQ  TINYINT UNSIGNED,
    PIMSGFMT      TINYINT UNSIGNED,
    PIUNICOM      TINYINT UNSIGNED,
    PIMOBILEAREA  INT(11),
    PISVRTYPE     VARCHAR(64),
    PIP1          VARCHAR(64),
    PIP2          VARCHAR(64),
    PIP3          VARCHAR(64),
    PIP4          VARCHAR(64),
    PIUSERMSGID   BIGINT(20),
    PIMODULEID    INT(11),
    PIATTIME      BIGINT(20),
    PIVALIDTIME   BIGINT(20),
    PISENDTYPE    TINYINT UNSIGNED,
    PIBATCHID     BIGINT(20),
    PIAREACODE    INT(11),
    P_CUSTID VARCHAR(64),
	P_EXDATA VARCHAR(64),
	P_SUID1 VARCHAR(64),
	P_LUID1 VARCHAR(64),
    P_LONGMSG VARCHAR(4000),
    P_TMPLID BIGINT,
    P_CHGRADE TINYINT,
    P_MSGTYPE TINYINT,
    P_RMSVALIDTM INT,
    P_RMSRPTFLAG TINYINT,
    P_PROTOCOLVER TINYINT,
    P_TMPLTYPE TINYINT,
    P_TITLE VARCHAR(40),
    P_SHOWAY VARCHAR(16),
    P_DLDWAY INT,
    P_DLDNEY INT,
    P_ISFREE INT,
    P_SHOWTIME BIGINT
 )
BEGIN
    DECLARE PICNT INT(11);
    SELECT COUNT(ID) INTO PICNT FROM GW_MT_TASK_BAK WHERE PTMSGID=PIPTMSGID;
  IF PICNT=0 THEN	#write GW_MT_TASK_BAK
    INSERT INTO GW_MT_TASK_BAK(UID,PTMSGID,ECID,SENDSTATUS,RETFLAG,PKNUMBER,PKTOTAL,FEEFLAG,SENDLEVEL,
    RECVMTTIME,USERID,SPGATE,CPNO,PHONE,MESSAGE,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,
    MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1,
	LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME)
    VALUES(PIUID,PIPTMSGID,PIECID,PISENDSTATUS,PIRETFLAG,PIPKNUMBER,PIPKTOTAL,PIFEEFLAG,PISENDLEVEL,PIRECVMTTIME,
    PIUSERID,PISPGATE,PICPNO,PIPHONE,PIMESSAGE,PITASKID,PIERRORCODE,PITPUDHI,PILONGMSGSEQ,PIMSGFMT,PIUNICOM,
    PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1,
	P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_RMSRPTFLAG,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME);
  END IF;
END  $


CALL S_WR_VERINFO('4.06.09')  $
/*网关升级脚本 END*/

DROP PROCEDURE IF EXISTS `LF_PVERV0` $

CREATE DEFINER=`root`@`%` PROCEDURE `LF_PVERV0`(
    VERSIONSTR VARCHAR(32),
    DBVERSIONSTR VARCHAR(32),
    WBSVERSION VARCHAR(32),
    SPGATEVERSION VARCHAR(32),
    NUM INT,
    TOTALSTR INT
)
BEGIN
	/*EMP产品版本记录*/
	/*EMP-WEB*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=1000) THEN
		INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
		VALUES(1000,1000,VERSIONSTR,NOW(),NOW(),'EMP-WEB');
	ELSE
		UPDATE LF_VERSION SET UPDATETIME=NOW(),VERSION=VERSIONSTR WHERE PRODUCT_ID=1000 AND PROCESS_ID=1000;
	END IF;
	/*EMP_GATEWAY*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=2000) THEN
		INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
		VALUES(1000,2000,WBSVERSION,NOW(),NOW(),'EMP_GATEWAY');
	ELSE
		UPDATE LF_VERSION SET UPDATETIME=NOW(),VERSION=WBSVERSION WHERE  PRODUCT_ID=1000 AND PROCESS_ID=2000;
	END IF;
	/*SMT_SPGATE*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=3000) THEN
		INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
		VALUES(1000,3000,SPGATEVERSION,NOW(),NOW(),'SMT_SPGATE');
	ELSE
		UPDATE LF_VERSION SET UPDATETIME=NOW(),VERSION=SPGATEVERSION WHERE  PRODUCT_ID=1000 AND PROCESS_ID=3000;
	END IF;
	/*EMP产品版本历史记录*/
	/*EMP-WEB*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION_HIS WHERE VERSION=VERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=1000) THEN
			INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO,ISRELEASE,VERSIONINFO)
			VALUES(1000,1000,VERSIONSTR,NOW(),NOW(),'EMP-WEB',1,'1、修复了最新版本谷歌浏览器无法打开页面的问题。<br />2、修复了移动办公 > 企业短信，经典/传统皮肤下，选择短信模板，没有翻页选项的问题。<br />3、修复了移动办公 > 移动财务 ：手工录入数据时，点击‘提交’后短信内容不正确，且只有第一行数据有效，其他行的数据变为无效号码的问题。<br />4、修复了移动办公 > 移动财务，通过手动录入数据的方式添加发送号码，号码中自动添加转义符，多个号码无法发送的问题等。<br />');
	ELSE
			UPDATE LF_VERSION_HIS SET UPDATETIME=NOW(),ISRELEASE=1,VERSIONINFO='1、修复了最新版本谷歌浏览器无法打开页面的问题。<br />2、修复了移动办公 > 企业短信，经典/传统皮肤下，选择短信模板，没有翻页选项的问题。<br />3、修复了移动办公 > 移动财务 ：手工录入数据时，点击‘提交’后短信内容不正确，且只有第一行数据有效，其他行的数据变为无效号码的问题。<br />4、修复了移动办公 > 移动财务，通过手动录入数据的方式添加发送号码，号码中自动添加转义符，多个号码无法发送的问题等。<br />' WHERE PRODUCT_ID=1000 AND PROCESS_ID=1000;
	END IF;
	/*EMP_GATEWAY*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION_HIS WHERE VERSION=WBSVERSION AND PRODUCT_ID=1000 AND PROCESS_ID=2000) THEN
		INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
		VALUES(1000,2000,WBSVERSION,NOW(),NOW(),'EMP_GATEWAY');
	ELSE
		UPDATE LF_VERSION_HIS SET UPDATETIME=NOW() WHERE  PRODUCT_ID=1000 AND PROCESS_ID=2000;
	END IF;
	/*SMT_SPGATE*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION_HIS WHERE VERSION=SPGATEVERSION AND PRODUCT_ID=1000 AND PROCESS_ID=3000) THEN
		INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
		VALUES(1000,3000,SPGATEVERSION,NOW(),NOW(),'SMT_SPGATE');
	ELSE
		UPDATE LF_VERSION_HIS SET UPDATETIME=NOW() WHERE  PRODUCT_ID=1000 AND PROCESS_ID=3000;
	END IF;
	IF NOT EXISTS(SELECT * FROM LF_DB_SCRIPT WHERE VERSION=DBVERSIONSTR AND CURRENT_NO=NUM AND TOTAL=TOTALSTR) THEN
		/*EMP产品数据库版本信息表*/ 
		INSERT INTO LF_DB_SCRIPT(VERSION,UPDATETIME,CREATETIME,CURRENT_NO,TOTAL,STATE,MEMO)
		VALUES(DBVERSIONSTR,NOW(),NOW(),NUM,TOTALSTR,2,'1号脚本');
	ELSE
		UPDATE LF_DB_SCRIPT SET STATE=2,UPDATETIME=NOW() WHERE  CURRENT_NO=NUM AND TOTAL=TOTALSTR;
	END IF;
END     $

CALL LF_PVERV0('7.3.5.588.SP5','73.05','8.11.4.389','6.1.51.343',1,1) $
DROP PROCEDURE IF EXISTS `LF_PVERV0` $
/*****V73.04-V73.05 END*/