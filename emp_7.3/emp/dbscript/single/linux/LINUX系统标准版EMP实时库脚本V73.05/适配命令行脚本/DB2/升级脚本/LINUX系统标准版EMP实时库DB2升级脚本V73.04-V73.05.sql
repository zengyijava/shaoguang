--------------------V73.04-V73.05 START------------------ 
BEGIN ATOMIC
DECLARE DBVERSIONSTR VARCHAR(32);
DECLARE NUMSTR INT;
DECLARE TOTALSTR INT;
SET DBVERSIONSTR = '73.05';
SET NUMSTR=1;
SET TOTALSTR=1;
IF NOT EXISTS (SELECT * FROM LF_DB_SCRIPT WHERE VERSION=DBVERSIONSTR) THEN
--EMP产品数据库版本信息表 
INSERT INTO LF_DB_SCRIPT(VERSION,UPDATETIME,CREATETIME,CURRENT_NO,TOTAL,STATE,MEMO)
VALUES(DBVERSIONSTR,CURRENT TIMESTAMP,CURRENT TIMESTAMP,NUMSTR,TOTALSTR,1,'WEB包更改');
END IF;
END &&


/*WEB升级脚本 START*/
-- 删除重复数据
DELETE FROM A_PROVINCECITY where city='遵义' &&
BEGIN
IF NOT EXISTS (SELECT * FROM A_PROVINCECITY WHERE PROVINCE='贵州' AND CITY='遵义' AND AREACODE=852 AND PROVINCECODE=851) THEN
INSERT INTO A_PROVINCECITY (PROVINCE, CITY, AREACODE, PROVINCECODE)VALUES ('贵州', '遵义', 852, 851);
END IF ;
END &&
/*WEB升级脚本 END*/


/*网关升级脚本 START*/
CREATE OR REPLACE PROCEDURE "DELPROC"(IN "PROCNAME1" VARCHAR(30))
  begin
DECLARE STR VARCHAR (256);
DECLARE STR1 VARCHAR (256);
SELECT PROCNAME INTO STR1 FROM SYSCAT.PROCEDURES WHERE  PROCNAME=PROCNAME1;
if  STR1 is not null THEN
  SET STR ='DROP PROCEDURE '||PROCNAME1;
  execute immediate str ;
end if;
end  &&

CALL DELPROC('GW_WR_MTTASKBAKV3')  &&
CREATE OR REPLACE PROCEDURE GW_WR_MTTASKBAKV3
 (
    IN PIUID         INTEGER,
    IN PIPTMSGID     BIGINT,
    IN PIECID        INTEGER,
    IN PISENDSTATUS  INTEGER,
    IN PIRETFLAG     SMALLINT,
    IN PIPKNUMBER    SMALLINT,
    IN PIPKTOTAL     SMALLINT,
    IN PIFEEFLAG     SMALLINT,
    IN PISENDLEVEL   SMALLINT,
    IN PIRECVMTTIME  TIMESTAMP,
    IN PIUSERID      VARCHAR(11),
    IN PISPGATE      VARCHAR(21),
    IN PICPNO        VARCHAR(21),
    IN PIPHONE       VARCHAR(21),
    IN PIMESSAGE     VARCHAR(3000),
    IN PITASKID      INTEGER,
    IN PIERRORCODE   CHARACTER(7),
    IN PITPUDHI      SMALLINT,
    IN PILONGMSGSEQ  SMALLINT,
    IN PIMSGFMT      SMALLINT,
    IN PIUNICOM      SMALLINT,
    IN PIMOBILEAREA  INTEGER,
    IN PISVRTYPE     VARCHAR(64),
    IN PIP1          VARCHAR(64),
    IN PIP2          VARCHAR(64),
    IN PIP3          VARCHAR(64),
    IN PIP4          VARCHAR(64),
    IN PIUSERMSGID   BIGINT,
    IN PIMODULEID    INTEGER,
    IN PIATTIME      BIGINT,
    IN PIVALIDTIME   BIGINT,
    IN PISENDTYPE    SMALLINT,
    IN PIBATCHID     BIGINT,
    IN PIAREACODE    INTEGER,
    IN PICUSTID VARCHAR(64),
    IN PIEXDATA VARCHAR(64),
	IN PISUID1 VARCHAR(64),
	IN PILUID1 VARCHAR(64),
	IN PILONGMSG	 VARCHAR(4000),
    IN PITMPLID 	   BIGINT,
    IN PICHGRADE    SMALLINT,
    IN PIMSGTYPE    SMALLINT,
    IN PIRMSVALIDTM SMALLINT,
    IN PIRMSRPTFLAG SMALLINT,
    IN PIPROTOCOLVER SMALLINT,
    IN PITMPLTYPE SMALLINT,
    IN PITITLE	 VARCHAR(40),
    IN PISHOWAY	 VARCHAR(16),
    IN PIDLDWAY     INTEGER,
    IN PIDLDNEY     INTEGER,
    IN PIISFREE     INTEGER,
    IN PISHOWTIME   BIGINT
 )
BEGIN
    DECLARE PICNT INTEGER;
    SELECT COUNT(ID) INTO PICNT FROM GW_MT_TASK_BAK WHERE PTMSGID=PIPTMSGID;
  IF PICNT=0 THEN	--不存在则往GW_MT_TASK_BAK里插入数据
    INSERT INTO GW_MT_TASK_BAK(UID,PTMSGID,ECID,SENDSTATUS,RETFLAG,PKNUMBER,PKTOTAL,FEEFLAG,SENDLEVEL,
    RECVMTTIME,USERID,SPGATE,CPNO,PHONE,MESSAGE,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,
    MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1,
	LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME)
    VALUES(PIUID,PIPTMSGID,PIECID,PISENDSTATUS,PIRETFLAG,PIPKNUMBER,PIPKTOTAL,PIFEEFLAG,PISENDLEVEL,PIRECVMTTIME,
    PIUSERID,PISPGATE,PICPNO,PIPHONE,PIMESSAGE,PITASKID,PIERRORCODE,PITPUDHI,PILONGMSGSEQ,PIMSGFMT,PIUNICOM,
    PIMOBILEAREA,PISVRTYPE,PIP1,PIP2,PIP3,PIP4,PIUSERMSGID,PIMODULEID,PIATTIME,PIVALIDTIME,PISENDTYPE,PIBATCHID,PIAREACODE,PICUSTID,PIEXDATA,PISUID1,PILUID1,
	PILONGMSG,PITMPLID,PICHGRADE,PIMSGTYPE,PIRMSVALIDTM,PIRMSRPTFLAG,PIPROTOCOLVER,PITMPLTYPE,PITITLE,PISHOWAY,PIDLDWAY,PIDLDNEY,PIISFREE,PISHOWTIME);
  END IF;
END  &&

DROP PROCEDURE "DELPROC"   &&

BEGIN ATOMIC
DECLARE PIVERSION VARCHAR(32);
SET PIVERSION = '4.06.09';
IF NOT EXISTS (SELECT VERSION FROM VERSION_CMPP WHERE VERSION = PIVERSION) THEN
INSERT INTO VERSION_CMPP (VERSION,VERSIONDATE,UPGRADETIME)
VALUES (PIVERSION,CURRENT DATE,(TRIM(CHAR(YEAR(CURRENT TIMESTAMP)))||'-'|| (CASE MONTH(CURRENT TIMESTAMP) WHEN
1 THEN '01' WHEN 2 THEN '02' WHEN 3 THEN '03' WHEN 4 THEN '04' WHEN 5 THEN '05' WHEN 6 THEN '06'WHEN 7 THEN '07' WHEN 8 THEN '08' WHEN 9 THEN '09'   ELSE
TRIM(CHAR(MONTH(CURRENT TIMESTAMP))) END)||'-'||TRIM(CHAR(DAY(CURRENT TIMESTAMP)))||' '||TRIM(CHAR(HOUR(CURRENT TIMESTAMP)))||':'||TRIM(CHAR(MINUTE(CURRENT TIMESTAMP)))||':'||TRIM(CHAR(SECOND(CURRENT TIMESTAMP)))));
END IF;
END   &&
/*网关升级脚本   END*/


CREATE OR REPLACE PROCEDURE "ADDVERSIONEXISTS"
  BEGIN ATOMIC
    DECLARE VERSIONSTR VARCHAR(32);
    DECLARE DBVERSION VARCHAR(32);
    DECLARE WBSVERSION VARCHAR(32);
    DECLARE SPGATEVERSION VARCHAR(32);
    DECLARE NUM INT;
    DECLARE TOTAL INT;
    SET VERSIONSTR = '7.3.5.588.SP5';
    SET DBVERSION = '73.05';
    SET WBSVERSION = '8.11.4.389';
    SET SPGATEVERSION = '6.1.51.343';
    SET NUM =1;
    SET TOTAL=1;
    --EMP产品版本记录
    --EMP-WEB
    IF NOT EXISTS(SELECT * FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=1000)
    THEN
      INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
      VALUES(1000,1000,VERSIONSTR,CURRENT TIMESTAMP,CURRENT TIMESTAMP,'EMP-WEB');
    ELSE
      UPDATE LF_VERSION SET UPDATETIME=CURRENT TIMESTAMP,VERSION=VERSIONSTR WHERE PRODUCT_ID=1000 AND PROCESS_ID=1000;
    END IF;
    --EMP_GATEWAY
    IF NOT EXISTS(SELECT * FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=2000)
    THEN
      INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
      VALUES(1000,2000,WBSVERSION,CURRENT TIMESTAMP,CURRENT TIMESTAMP,'EMP_GATEWAY');
    ELSE
      UPDATE LF_VERSION SET UPDATETIME=CURRENT TIMESTAMP,VERSION=WBSVERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=2000;
    END IF;
    --SMT_SPGATE
    IF NOT EXISTS(SELECT * FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=3000)
    THEN
      INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
      VALUES(1000,3000,SPGATEVERSION,CURRENT TIMESTAMP,CURRENT TIMESTAMP,'SMT_SPGATE');
    ELSE
      UPDATE LF_VERSION SET UPDATETIME=CURRENT TIMESTAMP,VERSION=SPGATEVERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=3000;
    END IF;
    --EMP产品版本历史记录
    --EMP-WEB
    IF NOT EXISTS(SELECT * FROM LF_VERSION_HIS WHERE VERSION=VERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=1000)
    THEN
      INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO,ISRELEASE,VERSIONINFO)
      VALUES(1000,1000,VERSIONSTR,CURRENT TIMESTAMP,CURRENT TIMESTAMP,'EMP-WEB',1,'1、修复了最新版本谷歌浏览器无法打开页面的问题。<br />2、修复了移动办公 > 企业短信，经典/传统皮肤下，选择短信模板，没有翻页选项的问题。<br />3、修复了移动办公 > 移动财务 ：手工录入数据时，点击‘提交’后短信内容不正确，且只有第一行数据有效，其他行的数据变为无效号码的问题。<br />4、修复了移动办公 > 移动财务，通过手动录入数据的方式添加发送号码，号码中自动添加转义符，多个号码无法发送的问题等。<br />');
    ELSE
      UPDATE LF_VERSION_HIS SET UPDATETIME=CURRENT TIMESTAMP,ISRELEASE=1,VERSIONINFO='1、修复了最新版本谷歌浏览器无法打开页面的问题。<br />2、修复了移动办公 > 企业短信，经典/传统皮肤下，选择短信模板，没有翻页选项的问题。<br />3、修复了移动办公 > 移动财务 ：手工录入数据时，点击‘提交’后短信内容不正确，且只有第一行数据有效，其他行的数据变为无效号码的问题。<br />4、修复了移动办公 > 移动财务，通过手动录入数据的方式添加发送号码，号码中自动添加转义符，多个号码无法发送的问题等。<br />' WHERE VERSION=VERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=1000;
    END IF;
    --EMP_GATEWAY
    IF NOT EXISTS(SELECT * FROM LF_VERSION_HIS WHERE VERSION=WBSVERSION AND PRODUCT_ID=1000 AND PROCESS_ID=2000)
    THEN
      INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
      VALUES(1000,2000,WBSVERSION,CURRENT TIMESTAMP,CURRENT TIMESTAMP,'EMP_GATEWAY');
    ELSE
      UPDATE LF_VERSION_HIS SET UPDATETIME=CURRENT TIMESTAMP WHERE VERSION=WBSVERSION AND PRODUCT_ID=1000 AND PROCESS_ID=2000;
    END IF;
    --SMT_SPGATE
    IF NOT EXISTS(SELECT * FROM LF_VERSION_HIS WHERE VERSION=SPGATEVERSION AND PRODUCT_ID=1000 AND PROCESS_ID=3000)
    THEN
      INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
      VALUES(1000,3000,SPGATEVERSION,CURRENT TIMESTAMP,CURRENT TIMESTAMP,'SMT_SPGATE');
    ELSE
      UPDATE LF_VERSION_HIS SET UPDATETIME=CURRENT TIMESTAMP WHERE VERSION=SPGATEVERSION AND PRODUCT_ID=1000 AND PROCESS_ID=3000;
    END IF;
    IF NOT EXISTS(SELECT * FROM LF_DB_SCRIPT WHERE VERSION=DBVERSION AND CURRENT_NO=NUM AND TOTAL=TOTAL)
    THEN
      --EMP产品数据库版本信息表
      INSERT INTO LF_DB_SCRIPT(VERSION,UPDATETIME,CREATETIME,CURRENT_NO,TOTAL,STATE,MEMO)
      VALUES(DBVERSION,CURRENT TIMESTAMP,CURRENT TIMESTAMP,NUM,TOTAL,2,'版本号更改');
    ELSE
      UPDATE LF_DB_SCRIPT SET STATE=2,UPDATETIME=CURRENT TIMESTAMP,MEMO='版本号更改' WHERE  VERSION=DBVERSION AND CURRENT_NO=NUM AND TOTAL=TOTAL;
    END IF;
  END  &&
CALL ADDVERSIONEXISTS  &&
DROP PROCEDURE ADDVERSIONEXISTS  &&
--------------------V73.04-V73.05 END------------------