-----------V73.07-V73.08 START ------------------------
DECLARE COUNTNUM INT;
        DBVERSIONSTR VARCHAR2(32);
        NUMNO INT;
        TOTALINT INT;
BEGIN
  DBVERSIONSTR:='73.08';
  NUMNO:=1;
  TOTALINT:=1;
  SELECT COUNT(*) INTO COUNTNUM FROM LF_DB_SCRIPT WHERE VERSION=DBVERSIONSTR;
  IF COUNTNUM=0 THEN
    --EMP产品数据库版本信息表
    INSERT INTO LF_DB_SCRIPT(VERSION,UPDATETIME,CREATETIME,CURRENT_NO,TOTAL,STATE,MEMO)
    VALUES(DBVERSIONSTR,SYSDATE,SYSDATE,NUMNO,TOTALINT,1,'WEB包更改');
    COMMIT;
  END IF;
END;
/

/*WEB升级脚本 START*/
/*WEB升级脚本 END*/

/*网关升级脚本 START*/
/*网关升级脚本 END*/


--增加版本信息--
DECLARE COUNTNUM INT;
        VERSIONSTR VARCHAR2(32);
        DBVERSIONSTR VARCHAR2(32);
        WBSVERSIONSTR VARCHAR2(32);
        SPGATEVERSIONSTR VARCHAR2(32);
        NUMNO INT;
        TOTALINT INT;
BEGIN
    VERSIONSTR:='7.3.8.612.SP8';
    DBVERSIONSTR:='73.08';
    WBSVERSIONSTR:='8.6.4.219';
    SPGATEVERSIONSTR:='6.1.52.344';
  NUMNO:=1;
  TOTALINT:=1;
  --EMP产品版本记录
  SELECT COUNT(*) INTO COUNTNUM FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=1000;
  IF COUNTNUM=0 THEN
   --EMP-WEB
   INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
   VALUES(1000,1000,VERSIONSTR,SYSDATE,SYSDATE,'EMP-WEB');
  ELSE
    UPDATE LF_VERSION SET UPDATETIME=SYSDATE,VERSION=VERSIONSTR WHERE PRODUCT_ID=1000 AND PROCESS_ID=1000;
  END IF;
  COMMIT;
  SELECT COUNT(*) INTO COUNTNUM FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=2000;
  IF COUNTNUM=0 THEN
   --EMP_GATEWARY
   INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
   VALUES(1000,2000,WBSVERSIONSTR,SYSDATE,SYSDATE,'EMP_GATEWARY');
  ELSE
    UPDATE LF_VERSION SET UPDATETIME=SYSDATE,VERSION=WBSVERSIONSTR WHERE PRODUCT_ID=1000 AND PROCESS_ID=2000;
  END IF;
  COMMIT;
  SELECT COUNT(*) INTO COUNTNUM FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=3000;
  IF COUNTNUM=0 THEN
   --SMT_SPGATE
   INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
   VALUES(1000,3000,SPGATEVERSIONSTR,SYSDATE,SYSDATE,'SMT_SPGATE');
  ELSE
    UPDATE LF_VERSION SET UPDATETIME=SYSDATE,VERSION=SPGATEVERSIONSTR WHERE PRODUCT_ID=1000 AND PROCESS_ID=3000;
  END IF;
  COMMIT;

  --EMP产品版本历史记录
  SELECT COUNT(*) INTO COUNTNUM FROM LF_VERSION_HIS WHERE VERSION=VERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=1000;
  IF COUNTNUM=0 THEN
    --EMP-WEB
    INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO,ISRELEASE,VERSIONINFO)
    VALUES(1000,1000,VERSIONSTR,SYSDATE,SYSDATE,'EMP-WEB',1,'1.修复群发任务查看修改定时任务时，提示发送内容不能为空，导致不能修改定时任务的问题<br/>2.修复状态码导入模板时出错的时候，会闪现多个dialog框的问题<br/>3.查询统计-数据查询-自定参数统计报表，选择时间区间为同一天时间查询，无法查询出数据，实际当天有数据<br/>4.查询统计-统计报表，运营商/SP账号/机构/操作员/业务类型/区域报表，查询统计-数据分析，总体发送趋势，短信类型应为信息类型<br/>5.解决插入操作日志表超时的问题<br/>6.解决V73.00 Oracle全新脚本mt_datareport表缺少recfail字段<br/>7.解决查询统计-统计报表-区域统计报表模块，oracle/db2环境查询报错');
  ELSE
    UPDATE LF_VERSION_HIS SET UPDATETIME=SYSDATE,ISRELEASE=1,VERSIONINFO='1.修复群发任务查看修改定时任务时，提示发送内容不能为空，导致不能修改定时任务的问题<br/>2.修复状态码导入模板时出错的时候，会闪现多个dialog框的问题<br/>3.查询统计-数据查询-自定参数统计报表，选择时间区间为同一天时间查询，无法查询出数据，实际当天有数据<br/>4.查询统计-统计报表，运营商/SP账号/机构/操作员/业务类型/区域报表，查询统计-数据分析，总体发送趋势，短信类型应为信息类型<br/>5.解决插入操作日志表超时的问题<br/>6.解决V73.00 Oracle全新脚本mt_datareport表缺少recfail字段<br/>7.解决查询统计-统计报表-区域统计报表模块，oracle/db2环境查询报错' WHERE VERSION=VERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=1000;
  END IF;
  COMMIT;

  SELECT COUNT(*) INTO COUNTNUM FROM LF_VERSION_HIS WHERE VERSION=WBSVERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=2000;
  IF COUNTNUM=0 THEN
    --EMP_GATEWARY
    INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
    VALUES(1000,2000,WBSVERSIONSTR,SYSDATE,SYSDATE,'EMP_GATEWARY');
  ELSE
    UPDATE LF_VERSION_HIS SET UPDATETIME=SYSDATE WHERE VERSION=WBSVERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=2000;
  END IF;
  COMMIT;

  SELECT COUNT(*) INTO COUNTNUM FROM LF_VERSION_HIS WHERE VERSION=SPGATEVERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=3000;
  IF COUNTNUM=0 THEN
    --SMT_SPGATE
    INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
    VALUES(1000,3000,SPGATEVERSIONSTR,SYSDATE,SYSDATE,'SMT_SPGATE');
  ELSE
    UPDATE LF_VERSION_HIS SET UPDATETIME=SYSDATE WHERE VERSION=SPGATEVERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=3000;
  END IF;
  COMMIT;

  SELECT COUNT(*) INTO COUNTNUM FROM LF_DB_SCRIPT WHERE VERSION=DBVERSIONSTR;
  IF COUNTNUM=0 THEN
    --EMP产品数据库版本信息表
    INSERT INTO LF_DB_SCRIPT(VERSION,UPDATETIME,CREATETIME,CURRENT_NO,TOTAL,STATE,MEMO)
    VALUES(DBVERSIONSTR,SYSDATE,SYSDATE,NUMNO,TOTALINT,2,'WEB更改');
  ELSE
    UPDATE LF_DB_SCRIPT SET STATE=2,UPDATETIME=SYSDATE WHERE  VERSION=DBVERSIONSTR AND CURRENT_NO=NUMNO AND TOTAL=TOTALINT;
  END IF;
  COMMIT;
END;
/

/*
 * 修复V73.00全新脚本MT_DATAREPORT表缺少RECFAIL字段
 */
DECLARE NUM NUMBER;
BEGIN
  SELECT COUNT(1) INTO NUM FROM COLS WHERE TABLE_NAME = 'MT_DATAREPORT' AND COLUMN_NAME ='RECFAIL';
  IF NUM = 0 THEN
    EXECUTE IMMEDIATE 'ALTER TABLE MT_DATAREPORT ADD RECFAIL NUMBER(11) DEFAULT 0 NOT NULL';
  END IF;
END;
/

CREATE OR REPLACE PROCEDURE GW_H_STATISTIV3(PROCESSFLAG IN NUMBER,ISP1 IN NUMBER,ISP2 IN NUMBER,ISP3 IN NUMBER,ISP4 IN NUMBER)
AUTHID CURRENT_USER
IS
   STR VARCHAR2(4000);
   TABLENAME VARCHAR2(20);
   ISEXIST NUMBER;
   MAXIYMD NUMBER;
   DIFFDATE NUMBER;
   CURPROCESSFLAG NUMBER;
BEGIN
  --------------------VER 3.2-------------------------------------
--删除临时
          TABLENAME :='TMEP_STATISTICS';
          ISEXIST:=0;
          SELECT COUNT(TABLE_NAME) INTO ISEXIST FROM USER_TABLES WHERE TABLE_NAME=UPPER(TABLENAME);
          IF(ISEXIST>0) THEN
            BEGIN
                  STR := 'DROP TABLE '||TABLENAME;
                  EXECUTE IMMEDIATE STR;
            END;
          END IF;
--创建临时表

      --  SPISUNCM NUMBER(11),
 STR :='CREATE GLOBAL TEMPORARY TABLE '|| TABLENAME ||'(
        USERID VARCHAR2(11),
        TASKID NUMBER(11),
        SPGATE VARCHAR2(21),
        SPISUNCM NUMBER(11),
        SPID VARCHAR2(32),
        SVRTYPE VARCHAR2(64),
        P1 VARCHAR2(64),
        P2 VARCHAR2(64),
        P3 VARCHAR2(64),
        P4 VARCHAR2(64),
        IYMD NUMBER(11),
        IYEAR NUMBER(11),
        IMONTH NUMBER(11),
        IHOUR NUMBER(11),
        ICOUNT NUMBER(11),
        SUCC NUMBER(11),
        FAIL NUMBER(11),
    RECFAIL NUMBER(11),
        NRET NUMBER(11),
        SENDTYPE NUMBER(11),
        MOBILEAREA NUMBER(11),
        BATCHID NUMBER(22),
        AREACODE NUMBER(11),
    TMPLID NUMBER(22),
    CHGRADE NUMBER(11),
    MSGTYPE NUMBER(11)
 )';

--DBMS_OUTPUT.PUT_LINE(STR);
 EXECUTE IMMEDIATE STR;
 --统计
  CURPROCESSFLAG:=PROCESSFLAG;
  SELECT NVL(MAX(IYMD),20000101) INTO MAXIYMD  FROM MT_DATAREPORT;
  DIFFDATE:= TO_DATE(TO_CHAR(SYSDATE-2,'YYYY-MM-DD'),'YYYY-MM-DD HH24:MI:SS')-to_date(MAXIYMD,'YYYY-MM-DD HH24:MI:SS') ;
  IF DIFFDATE>0 THEN
          CURPROCESSFLAG:=CURPROCESSFLAG+DIFFDATE;
  END IF;
 STR:= 'INSERT INTO  '|| TABLENAME ||' (USERID,TASKID,SPGATE,SPISUNCM,SPID,SVRTYPE,P1,P2,P3,P4,IYMD,IYEAR,IMONTH,IHOUR,ICOUNT,SUCC,FAIL,RECFAIL,NRET,SENDTYPE,MOBILEAREA,BATCHID,AREACODE,TMPLID,CHGRADE,MSGTYPE)
               SELECT  USERID,TASKID,SPGATE,UNICOM,SPID,SVRTYPE';
               IF ISP1=1 THEN
                  STR:=STR||',P1';
                ELSE
                  STR:=STR||','' '' AS P1';
                END IF;
               IF ISP2=1 THEN
                  STR:=STR||',P2';
                ELSE
                  STR:=STR||','' '' AS P2';
                END IF;
                IF ISP3=1 THEN
                  STR:=STR||',P3';
                ELSE
                  STR:=STR||','' '' AS P3';
                END IF;
                IF ISP4=1 THEN
                  STR:=STR||',P4';
                ELSE
                  STR:=STR||','' '' AS P4';
                END IF;

               STR:=STR||',
               TO_NUMBER(TO_CHAR(SENDTIME,''YYYYMMDD'')) AS IYMD,
               TO_NUMBER(TO_CHAR(SENDTIME,''YYYY'')) AS IYEAR,
               TO_NUMBER(TO_CHAR(SENDTIME,''MM'')) AS MON,
               TO_NUMBER(TO_CHAR(SENDTIME,''HH24'')) AS HOUR,
               COUNT(ID),
               NVL(COUNT(CASE TRIM(ERRORCODE) WHEN ''DELIVRD'' THEN 1 WHEN ''0'' THEN 1 ELSE NULL END),0),
               NVL(COUNT(CASE SUBSTR(ERRORCODE,1,3) WHEN ''E1:'' THEN 1 WHEN ''E2:'' THEN 1 ELSE NULL END),0),
         NVL(COUNT(CASE SUBSTR(ERRORCODE,1,3)  WHEN ''E2:'' THEN 1 ELSE NULL END),0),
               NVL(COUNT(CASE NVL(TRIM(ERRORCODE),''0'') WHEN ''0'' THEN 1 ELSE NULL END),0),
               SENDTYPE,
               MOBILEAREA,
               BATCHID,
               AREACODE,
         TMPLID,
         CHGRADE,
         MSGTYPE
               FROM GW_MT_TASK_BAK
               WHERE  SENDTIME >=  '|| 'TO_DATE(TO_CHAR(SYSDATE-'||CURPROCESSFLAG||',''YYYY-MM-DD''),''YYYY-MM-DD HH24:MI:SS '') '|| ' AND SENDTIME < '|| 'TO_DATE(TO_CHAR(SYSDATE,''YYYY-MM-DD''),''YYYY-MM-DD HH24:MI:SS '')' ||'
               GROUP BY USERID,TASKID,SPGATE,UNICOM,SPID,SVRTYPE';
                 IF ISP1=1 THEN
                  STR:=STR||',P1';
                 END IF;
                IF ISP2=1 THEN
                  STR:=STR||',P2';
                 END IF;
                IF ISP3=1 THEN
                  STR:=STR||',P3';
                 END IF;
                 IF ISP4=1 THEN
                  STR:=STR||',P4';
                 END IF;
               STR:=STR||',SENDTYPE,MOBILEAREA,BATCHID,AREACODE,TMPLID,CHGRADE,MSGTYPE,
               TO_NUMBER(TO_CHAR(SENDTIME,''YYYYMMDD'')),
               TO_NUMBER(TO_CHAR(SENDTIME,''YYYY'')),
               TO_NUMBER(TO_CHAR(SENDTIME,''MM'')),
               TO_NUMBER(TO_CHAR(SENDTIME,''HH24''))';
        -- DBMS_OUTPUT.PUT_LINE(STR);

 EXECUTE IMMEDIATE STR;
       --SELECT MIN(),MAX() INTO  FROM TMEP_STATISTICS
 --插入或更新统计表
       STR:='DELETE FROM MT_DATAREPORT WHERE EXISTS (SELECT IYMD FROM '||TABLENAME||' A WHERE A.IYMD=MT_DATAREPORT.IYMD)';
      -- EXECUTE IMMEDIATE STR;

       --STR:='DELETE FROM MT_DATAREPORT WHERE IYMD BETWEEN CAST(TO_CHAR(SYSDATE-'||PROCESSFLAG||',''YYYYMMDD'') AS INT) AND CAST(TO_CHAR(SYSDATE,''YYYYMMDD'') AS INT)' ;
       EXECUTE IMMEDIATE STR;

       STR:='INSERT INTO MT_DATAREPORT M
       (USERID,TASKID,SPGATE,SPISUNCM,SPID,SVRTYPE,P1,P2,P3,P4,IYMD,IHOUR,IMONTH,Y,ICOUNT,RSUCC,RFAIL1,RFAIL2,RECFAIL,RNRET,SENDTYPE,MOBILEAREA,BATCHID,AREACODE,TMPLID,CHGRADE,MSGTYPE)
       SELECT T.USERID,T.TASKID,T.SPGATE,T.SPISUNCM,T.SPID,T.SVRTYPE,T.P1,T.P2,T.P3,T.P4,T.IYMD,T.IHOUR,T.IMONTH,T.IYEAR,T.ICOUNT,T.SUCC,T.FAIL,
       (T.ICOUNT-T.SUCC-T.FAIL-T.NRET),T.RECFAIL,T.NRET,T.SENDTYPE,T.MOBILEAREA,T.BATCHID,T.AREACODE,T.TMPLID,T.CHGRADE,T.MSGTYPE FROM '|| TABLENAME ||'  T';

--DBMS_OUTPUT.PUT_LINE(STR);
 EXECUTE IMMEDIATE STR;

 EXECUTE IMMEDIATE  'DROP TABLE '||TABLENAME;
 COMMIT;
END ;
/

--重新编译所有存储过程和触发器
CALL COMPILE_PROCEDURE();
/
-----------V73.07-V73.08 END------------------------