/*****V71.00-V71.01 START*/
DELIMITER $
DROP PROCEDURE IF EXISTS `LF_PVERV0`$
/*DELIMITER ;*/
CREATE DEFINER=`root`@`%`  PROCEDURE `LF_PVERV0`(
    DBVERSIONSTR VARCHAR(32),
    NUM INT,
    TOTALSTR INT
)
BEGIN
    IF NOT EXISTS(SELECT * FROM LF_DB_SCRIPT WHERE VERSION=@DBVERSIONSTR) THEN
    /*EMP产品数据库版本信息表*/  
    INSERT INTO LF_DB_SCRIPT(VERSION,UPDATETIME,CREATETIME,CURRENT_NO,TOTAL,STATE,MEMO)
    VALUES(DBVERSIONSTR,NOW(),NOW(),NUM,TOTALSTR,1,'Web脚本更新');
    END IF;
END$           
/*;; DELIMITER ;*/   
CALL LF_PVERV0('73.00',1,1)$
DROP PROCEDURE IF EXISTS `LF_PVERV0`$
 
/* 网关升级脚本START */  
/** 升级脚本(V4.06.05-V4.06.06) START*/
/*DELIMITER ;*/
DROP PROCEDURE IF EXISTS CREATETABLE$
CREATE DEFINER=`root`@`%` PROCEDURE `CREATETABLE`(PITYPE INT,PIYM INT)
BEGIN
DECLARE STR VARCHAR(4000);
DECLARE TABLENAME VARCHAR(16);

IF @PITYPE=1 THEN
SET TABLENAME=CONCAT('MTTASK',PIYM);
SET STR=CONCAT('CREATE TABLE `',TABLENAME,
'` (
  `ID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `MDAY` INT(11) NOT NULL DEFAULT ''0'',
  `USERID` VARCHAR(11) NOT NULL DEFAULT '''',
  `SPID` VARCHAR(32) NOT NULL DEFAULT '''',
  `SPGATE` VARCHAR(21) NOT NULL DEFAULT '''',
  `CPNO` VARCHAR(21) NOT NULL DEFAULT '''',
  `PHONE` VARCHAR(21) NOT NULL DEFAULT '''',
  `SPMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `RETFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `FEEFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `PKNUMBER` INT(11) NOT NULL DEFAULT ''0'',
  `PKTOTAL` INT(11) NOT NULL DEFAULT ''0'',
  `SENDSTATUS` INT(11) NOT NULL DEFAULT ''0'',
  `SENDFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `RECVFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `DONEDATE` VARCHAR(10) NOT NULL DEFAULT '''',
  `ERRORCODE` VARCHAR(7) NOT NULL DEFAULT '''',
  `SENDLEVEL` INT(11) NOT NULL DEFAULT ''0'',
  `SENDTYPE` INT(11) NOT NULL DEFAULT ''0'',
  `UNICOM` INT(11) NOT NULL DEFAULT ''0'',
  `MOBILEAREA` INT(11) NOT NULL DEFAULT ''0'',
  `SENDTIME` DATETIME NOT NULL DEFAULT ''0000-00-00 00:00:00'',
  `RECVTIME` DATETIME NOT NULL DEFAULT ''0000-00-00 00:00:00'',
  `MESSAGE` VARCHAR(3000) NOT NULL DEFAULT '''',
  `TASKID` INT(11) NOT NULL DEFAULT ''0'',
  `ECID` INT(11) NOT NULL DEFAULT ''0'',
  `PTMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `SVRTYPE` VARCHAR(64) NOT NULL DEFAULT '''',
  `P1` VARCHAR(64) NOT NULL DEFAULT '''',
  `P2` VARCHAR(64) NOT NULL DEFAULT '''',
  `P3` VARCHAR(64) NOT NULL DEFAULT '''',
  `P4` VARCHAR(64) NOT NULL DEFAULT '''',
  `USERMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `MODULEID` INT(11) NOT NULL DEFAULT ''0'',
  `ATTIME` BIGINT(20) NOT NULL DEFAULT ''0'',
  `VALIDTIME` BIGINT(20) NOT NULL DEFAULT ''0'',
  `BATCHID`  BIGINT(20) NOT NULL DEFAULT 0,
  `AREACODE`  INT(11) NOT NULL DEFAULT 0 ,
  `CUSTID`	VARCHAR(64)  NOT NULL DEFAULT '''',
  `EXDATA`	VARCHAR(64)  NOT NULL DEFAULT '''',
  `LONGMSG`	VARCHAR(4000)  NOT NULL DEFAULT '''',
  `TMPLID`  BIGINT NOT NULL DEFAULT 0,
  `CHGRADE`	TINYINT  NOT NULL DEFAULT 0,
  `MSGTYPE`	TINYINT  NOT NULL DEFAULT 0,
  `ERRORCODE2`	CHAR(7)  NOT NULL DEFAULT '''',
  `DOWNTM`	DATETIME  NOT NULL DEFAULT ''1990-01-01 08:00:00'',
  `RMSVALIDTM`	INT  NOT NULL DEFAULT 0,
  `RMSRPTFLAG`	TINYINT  NOT NULL DEFAULT 1,
  `PROTOCOLVER`	TINYINT NOT NULL DEFAULT 0,
  `TMPLTYPE`	TINYINT NOT NULL DEFAULT 0,
  `TITLE`	VARCHAR(40)  NOT NULL DEFAULT '''',	
  `SHOWAY`	VARCHAR(16)  NOT NULL DEFAULT '''',
  `DLDWAY`	INT NOT NULL DEFAULT 0,
  `DLDNEY`	INT NOT NULL DEFAULT 0,
  `ISFREE`	INT NOT NULL DEFAULT 0,
  `SHOWTIME`	BIGINT NOT NULL DEFAULT 0
  UNIQUE KEY `IX_',TABLENAME,'_PTID` (`PTMSGID`),
  KEY `IX_',TABLENAME,'_P1` (`P1`),
  KEY `IX_',TABLENAME,'_SVRTYPE` (`SVRTYPE`),
  KEY `IX_',TABLENAME,'_TASKID` (`TASKID`),
  KEY `IX_',TABLENAME,'_STIME` (`SENDTIME`),
  KEY `IX_',TABLENAME,'_UID` (`USERID`),
  KEY `IX_',TABLENAME,'_BATCHID` (`BATCHID`),
  KEY `IX_',TABLENAME,'_AREACODE` (`AREACODE`),
   KEY `IX_',TABLENAME,'_PHONE` (`PHONE`)
) ENGINE=INNODB DEFAULT CHARSET=GBK;');

ELSEIF @PITYPE=2 THEN
SET TABLENAME=CONCAT('MMSTASK',PIYM);
SET STR=CONCAT('CREATE TABLE `',TABLENAME,
'` (
  `ID` INT(11) NOT NULL,
  `MDAY` INT(11) NOT NULL DEFAULT ''0'',
  `USERID` VARCHAR(11) NOT NULL DEFAULT '''',
  `SPGATE` VARCHAR(21) NOT NULL DEFAULT '''',
  `CPNO` VARCHAR(21) NOT NULL DEFAULT '''',
  `PHONE` VARCHAR(21) NOT NULL DEFAULT '''',
  `SPMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `RETFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `FEEFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `PKNUMBER` INT(11) NOT NULL DEFAULT ''0'',
  `PKTOTAL` INT(11) NOT NULL DEFAULT ''0'',
  `SENDSTATUS` INT(11) NOT NULL DEFAULT ''0'',
  `SENDFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `RECVFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `DONEDATE` VARCHAR(10) NOT NULL DEFAULT '''',
  `ERRORCODE` VARCHAR(7) NOT NULL DEFAULT '''',
  `SENDLEVEL` INT(11) NOT NULL DEFAULT ''0'',
  `SENDTYPE` INT(11) NOT NULL DEFAULT ''0'',
  `UNICOM` INT(11) NOT NULL DEFAULT ''0'',
  `SENDTIME` DATETIME NOT NULL DEFAULT ''0000-00-00 00:00:00'',
  `RECVTIME` DATETIME NOT NULL DEFAULT ''0000-00-00 00:00:00'',
  `MESSAGE` VARCHAR(3000) NOT NULL DEFAULT '''',
  `TASKID` INT(11) NOT NULL DEFAULT ''0'',
  `ECID` INT(11) NOT NULL DEFAULT ''0'',
  `PTMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `SPID` VARCHAR(32) NOT NULL DEFAULT '''',
  `MOBILEAREA` INT(11) NOT NULL DEFAULT ''0'',
  `SVRTYPE` VARCHAR(64) NOT NULL DEFAULT '''',
  `P1` VARCHAR(64) NOT NULL DEFAULT '''',
  `P2` VARCHAR(64) NOT NULL DEFAULT '''',
  `P3` VARCHAR(64) NOT NULL DEFAULT '''',
  `P4` VARCHAR(64) NOT NULL DEFAULT '''',
  `USERMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `MODULEID` INT(11) NOT NULL DEFAULT ''0'',
  `ATTIME` BIGINT(20) NOT NULL DEFAULT ''0'',
  `VALIDTIME` BIGINT(20) NOT NULL DEFAULT ''0'',
  `SPMSGID2` VARCHAR(64) NOT NULL DEFAULT '''',
  `JTYPE` TINYINT(4) NOT NULL DEFAULT ''0'',
  `ORDERCPNO` VARCHAR(21) NOT NULL DEFAULT '''',
  `PASSTHROUGH` TINYINT(4) NOT NULL DEFAULT ''0'',
  `MSGTITLE` VARCHAR(720) NOT NULL DEFAULT '''',
  `TMPLID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `MSGTYPE` TINYINT(4) NOT NULL DEFAULT ''0'',
  `ERRORMSG` VARCHAR(256) NOT NULL DEFAULT '''',
  PRIMARY KEY  (`ID`),
  UNIQUE KEY `IX_',TABLENAME,'_PTMSGID` (`PTMSGID`),
  KEY `IX_',TABLENAME,'_USERID` (`USERID`),
  KEY `IX_',TABLENAME,'_SENDTIME` (`SENDTIME`),
  KEY `IX_',TABLENAME,'_TASKID` (`TASKID`),
  KEY `IX_',TABLENAME,'_SVRTYPE` (`SVRTYPE`),
  KEY `IX_',TABLENAME,'_P1` (`P1`)
) ENGINE=INNODB DEFAULT CHARSET=GBK;');

ELSEIF  @PITYPE=3 THEN
SET TABLENAME=CONCAT('MOTASK',PIYM);
SET STR=CONCAT('CREATE TABLE `',TABLENAME,
'` (
  `ID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `UID` INT(11) NOT NULL DEFAULT ''0'',
  `USERID` VARCHAR(11) NOT NULL DEFAULT '''',
  `SPNUMBER` VARCHAR(21) NOT NULL DEFAULT '''',
  `SERVICEID` VARCHAR(10) NOT NULL DEFAULT '''',
  `SENDSTATUS` INT(11) NOT NULL DEFAULT ''0'',
  `DELIVERTIME` TIMESTAMP NOT NULL DEFAULT ''0000-00-00 00:00:00'',
  `PHONE` VARCHAR(21) NOT NULL DEFAULT '''',
  `MSGCONTENT` VARCHAR(3000) NOT NULL DEFAULT '''',
  `ECID` INT(11) NOT NULL DEFAULT ''0'',
  `ORGUID` INT(11) NOT NULL DEFAULT ''0'',
  `PTMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `TP_PID` INT(11) NOT NULL DEFAULT ''0'',
  `TP_UDHI` INT(11) NOT NULL DEFAULT ''0'',
  `MSGFMT` INT(11) NOT NULL DEFAULT ''0'',
  `UNICOM` INT(11) NOT NULL DEFAULT ''0'',
  PRIMARY KEY  (`ID`)
) ENGINE=INNODB DEFAULT CHARSET=GBK;');

ELSE
SET TABLENAME=CONCAT('MMSMOTASK',PIYM);
SET STR=CONCAT('CREATE TABLE `',TABLENAME,
'` (
  `ID` INT(11) NOT NULL,
  `UID` INT(11) NOT NULL DEFAULT ''0'',
  `USERID` VARCHAR(11) NOT NULL DEFAULT '''',
  `SPNUMBER` VARCHAR(11) NOT NULL DEFAULT '''',
  `SERVICEID` VARCHAR(10) NOT NULL DEFAULT '''',
  `SENDSTATUS` INT(11) NOT NULL DEFAULT ''0'',
  `DELIVERTIME` DATETIME NOT NULL DEFAULT ''0000-00-00 00:00:00'',
  `PHONE` VARCHAR(21) NOT NULL DEFAULT '''',
  `MSGCONTENT` VARCHAR(3000) NOT NULL DEFAULT '''',
  `ECID` INT(11) NOT NULL DEFAULT ''0'',
  `ORGUID` INT(11) NOT NULL DEFAULT ''0'',
  `PTMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `TP_PID` INT(11) NOT NULL DEFAULT ''0'',
  `TP_UDHI` INT(11) NOT NULL DEFAULT ''0'',
  `MSGFMT` INT(11) NOT NULL DEFAULT ''15'',
  `UNICOM` INT(11) NOT NULL DEFAULT ''0'',
  `PASSTHROUGH` TINYINT(4) NOT NULL DEFAULT ''0'',
  `MSGTYPE` TINYINT(4) NOT NULL DEFAULT ''0'',
  `MSGTITLE` VARCHAR(200) NOT NULL DEFAULT '''',
  PRIMARY KEY  (`ID`)
) ENGINE=INNODB DEFAULT CHARSET=GBK;');
END IF;

SET @SQL=STR;
PREPARE SL FROM @SQL;
EXECUTE SL;
DEALLOCATE PREPARE SL;

END$
/*DELIMITER ;*/

/*DELIMITER ;*/
DROP TRIGGER IF EXISTS `TIG_MTTASKBAK`$
CREATE TRIGGER `TIG_MTTASKBAK` BEFORE INSERT ON `GW_MT_TASK_BAK` FOR EACH ROW BEGIN
SET @P_CURTIME = NOW();
IF DATE_FORMAT(NEW.RECVMTTIME, '%Y-%m-%d') = '0000-00-00' THEN
    SET NEW.RECVMTTIME = @P_CURTIME;
END IF;
IF DATE_FORMAT(NEW.TRANSMTTIME, '%Y-%m-%d') = '0000-00-00' THEN
    SET NEW.TRANSMTTIME = @P_CURTIME;
END IF;
IF DATE_FORMAT(NEW.SENDTIME, '%Y-%m-%d') = '0000-00-00' THEN
    SET NEW.SENDTIME = @P_CURTIME;
END IF;
IF DATE_FORMAT(NEW.RECVTIME, '%Y-%m-%d') = '0000-00-00' THEN
    SET NEW.RECVTIME = @P_CURTIME;
END IF;
IF DATE_FORMAT(NEW.TRANSRPTTIME, '%Y-%m-%d') = '0000-00-00' THEN
    SET NEW.TRANSRPTTIME = @P_CURTIME;
END IF;
IF DATE_FORMAT(NEW.SENDRPTTIME, '%Y-%m-%d') = '0000-00-00' THEN
    SET NEW.SENDRPTTIME = @P_CURTIME;
END IF;
IF DATE_FORMAT(NEW.DOWNTM, '%Y-%m-%d') = '0000-00-00' THEN
    SET NEW.DOWNTM = @P_CURTIME;
END IF;
END$
/*DELIMITER ;*/

/*DELIMITER ;*/
DROP PROCEDURE IF EXISTS `GW_H_TRANSFERV1`$
CREATE DEFINER=`root`@`%` PROCEDURE `GW_H_TRANSFERV1`(P_MININDEX BIGINT,P_MAXINDEX BIGINT,P_PROCESSFLAG INT,P_LOTSIZE INT)
BEGIN

	DECLARE P_STR VARCHAR(4000);
	DECLARE P_TABLENAME VARCHAR(20);
        DECLARE   CURYM INT;
        DECLARE   MINYM INT;
        DECLARE   MAXYM INT;

        #转移
        SELECT CAST(DATE_FORMAT(MIN(SENDTIME) ,'%Y%m') AS SIGNED) ,CAST(DATE_FORMAT(MAX(SENDTIME) ,'%Y%m') AS SIGNED)  INTO MINYM,MAXYM FROM GW_MT_TASK_BAK WHERE ID BETWEEN P_MININDEX AND P_MAXINDEX;
        SET CURYM = MINYM;
        WHILE CURYM<=MAXYM DO

	SET P_TABLENAME = CONCAT('MTTASK',CURYM );
        SET P_STR = CONCAT('INSERT  INTO ',P_TABLENAME,
			 ' (ID,MDAY,USERID,SPGATE,CPNO,PHONE,SPMSGID,RETFLAG,FEEFLAG,PKNUMBER,PKTOTAL,SENDSTATUS,SENDFLAG,RECVFLAG,DONEDATE,ERRORCODE,SENDLEVEL,SENDTYPE,UNICOM,SENDTIME,RECVTIME,MESSAGE,TASKID,ECID,PTMSGID,MOBILEAREA,SPID,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,DOWNTM)
                          SELECT ID, DATE_FORMAT(M.SENDTIME,''%d'') AS MDAY,USERID,SPGATE,CPNO,PHONE,SPMSGID,RETFLAG,FEEFLAG,PKNUMBER,PKTOTAL,SENDSTATUS,SENDFLAG,RECVFLAG,DONEDATE,ERRORCODE,SENDLEVEL,SENDTYPE,UNICOM,SENDTIME,RECVTIME,MESSAGE,TASKID,ECID,PTMSGID,MOBILEAREA,SPID,SVRTYPE,
                          P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,DOWNTM
                          FROM GW_MT_TASK_BAK M WHERE CAST(DATE_FORMAT(SENDTIME,''%Y%m'') AS SIGNED)=',CURYM,' AND ID<=',P_MAXINDEX);
#SELECT P_STR;
	SET @SQL=P_STR;
         PREPARE SL FROM @SQL;
         EXECUTE SL;
         DEALLOCATE PREPARE SL;

          IF CAST(SUBSTRING(CAST(CURYM AS CHAR(6)),5,2) AS SIGNED)=12 THEN
                SET CURYM = CAST(CONCAT(CAST(CAST(SUBSTRING(CAST(CURYM AS CHAR(6)),1,4)AS SIGNED)+1 AS CHAR(4)),'01' )AS SIGNED);
          ELSE
               SET CURYM = CURYM+1  ;
          END IF;
        END WHILE;
END$
/*DELIMITER ;*/

REPLACE INTO A_GWPARAMCONF(PARAMITEM, PARAMNAME,  PARAMMEMO,DEFAULTVALUE, VALUERANGE,CONTROLTYPE, GWTYPE,PARAMATTRIBUTE, HKPARAMNAME, HKPARAMMEMO, ENPARAMNAME, ENPARAMMEMO)
VALUES('PUSHCONFIG', '推送字段是否为JSON数组','推送字段是否为JSON数组(0:字符串,1:JSON数组)','0','0,1',1,4000,1,'推送字段是否為JSON數組','推送字段是否為JSON數組(0:字符串,1:JSON數組)','Whether the push field is a JSON array','Whether the push field is a JSON array (0: string, 1: JSON array)')$

INSERT INTO A_GWPARAMVALUE(GWNO, GWTYPE, PARAMITEM, PARAMVALUE)
SELECT DISTINCT GWNO,4000,'PUSHCONFIG','0' FROM A_GWPARAMVALUE 
WHERE  NOT EXISTS(SELECT * FROM A_GWPARAMVALUE WHERE PARAMITEM='PUSHCONFIG' AND  GWTYPE=4000) AND  GWTYPE=4000$

/*DELIMITER ;*/
DROP PROCEDURE IF EXISTS `S_WR_MTTASK`$
CREATE DEFINER=`root`@`%` PROCEDURE `S_WR_MTTASK`(P_UID INT,	P_PTMSGID BIGINT,
	P_SENDSTATUS TINYINT UNSIGNED,
	P_RETFLAG TINYINT UNSIGNED,
	P_PKTOTAL TINYINT UNSIGNED,
	P_PHONECOUNT INT,
	P_SPLITLEN TINYINT UNSIGNED,
	P_MULTILEN1 TINYINT UNSIGNED,
	P_MULTILEN2 TINYINT UNSIGNED,
	P_SIGNLEN TINYINT UNSIGNED,
	P_ECID INT,
	P_USERID VARCHAR(11), P_SPGATE VARCHAR(21),
	P_CPNO VARCHAR(21),
	P_RECVMTTIME DATETIME,
	P_MESSAGE VARCHAR(3000)  CHARSET 'GBK',
	P_SHOUJI VARCHAR(3500),
	P_FEEFLAG TINYINT UNSIGNED,
	P_SENDLEVEL TINYINT UNSIGNED,
	P_TASKID INT,
	P_ERRORCODE CHAR(7),
	P_TPUDHI TINYINT UNSIGNED,
	P_LONGMSGSEQ TINYINT UNSIGNED,
	P_MSGFMT TINYINT UNSIGNED,
	P_UNICOM TINYINT UNSIGNED,
  P_MOBILEAREA INT UNSIGNED, 
  P_PKNUMBER TINYINT UNSIGNED,
  P_SVRTYPE VARCHAR(64),
  P_P1 VARCHAR(64),
  P_P2 VARCHAR(64),
  P_P3 VARCHAR(64),
  P_P4 VARCHAR(64),
  P_USERMSGID BIGINT,
  P_MODULEID INT,
  P_ATTIME BIGINT,
  P_VALIDTIME BIGINT,
  P_SENDTYPE TINYINT UNSIGNED,
  P_BATCHID BIGINT,
  P_AREACODE INT,
  P_CUSTID VARCHAR(64),
  P_EXDATA VARCHAR(64))
  TOP:BEGIN
    DECLARE P_TMPMSGID BIGINT;
	DECLARE P_LOCATION INT;
	DECLARE P_START INT;
	DECLARE P_RESULTPHONE VARCHAR(21); #存储拆分后的字符
	DECLARE P_STRSPLIT VARCHAR(2);
	DECLARE P_LEN INT;
	DECLARE P_RESULTMSG VARCHAR(3000); #存储拆分后的字符
	DECLARE P_PKNUM INT;
	DECLARE P_TMPNUM INT;

    CREATE TEMPORARY TABLE IF NOT EXISTS P_TMP_WRMTTASK(UID INT,USERID VARCHAR(11),SPGATE VARCHAR(21),CPNO VARCHAR(21),
						PHONE VARCHAR(21),PTMSGID BIGINT,MESSAGE VARCHAR(3000),
						SENDSTATUS TINYINT,RETFLAG TINYINT,PKNUMBER TINYINT,
						PKTOTAL TINYINT,RECVMTTIME DATETIME,ECID INT,FEEFLAG TINYINT,
						SENDLEVEL TINYINT,TASKID INT,ERRORCODE CHAR(7),TPUDHI TINYINT,
						LONGMSGSEQ TINYINT,MSGFMT TINYINT,UNICOM TINYINT,MOBILEAREA INT,
						SVRTYPE VARCHAR(64),P1 VARCHAR(64),P2 VARCHAR(64),P3 VARCHAR(64),
						P4 VARCHAR(64),USERMSGID BIGINT,MODULEID INT,ATTIME BIGINT,VALIDTIME BIGINT,SENDTYPE INT,AREACODE INT,CUSTID VARCHAR(64),EXDATA VARCHAR(64));

	TRUNCATE TABLE P_TMP_WRMTTASK;

    SET P_LEN = CHAR_LENGTH(P_MESSAGE)-P_SIGNLEN;
	SET P_TMPNUM = 0;
	SET P_PKNUM = 1;
	SET P_STRSPLIT = ',';

    IF @P_PHONECOUNT < 1 THEN #手机个数为0
		LEAVE TOP;
    END IF;

	IF @P_MSGFMT=4 OR @P_MSGFMT=248 OR @P_MSGFMT=246 THEN
		SET P_SPLITLEN=140;
		SET P_MULTILEN1=134;
		SET P_MULTILEN2=134;
		SET P_SIGNLEN=0;
	END IF;

	IF @P_MSGFMT=25 THEN
		IF NOT EXISTS (SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID=@P_PTMSGID) THEN
		   INSERT INTO GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
		   RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA)
		   VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_PTMSGID,P_MESSAGE,P_SENDSTATUS,P_RETFLAG, P_PKNUMBER,P_PKTOTAL,
		   P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM, P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA);
        END IF;
	END IF;

	IF @P_PHONECOUNT = 1 THEN #单发
        IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = @P_PTMSGID) THEN
            IF @P_PKTOTAL = 1 THEN
        		INSERT GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
        		RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,
        		P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA)
        		VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_PTMSGID,P_MESSAGE,P_SENDSTATUS,
        		P_RETFLAG,P_PKTOTAL,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,
        		P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA);
            ELSE
        		SET P_PKNUM = 1;
        		SET P_TMPMSGID = P_PTMSGID;
                IF @P_PKTOTAL = 2 AND P_LEN <= @P_MULTILEN1 THEN
    				SET P_RESULTMSG = SUBSTRING(P_MESSAGE,1,P_SPLITLEN);#拆分后的字符
    				SET P_TMPMSGID = P_TMPMSGID;
    				IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = @P_PTMSGID) THEN
        				INSERT P_TMP_WRMTTASK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
        				RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
        				VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,
        				P_RETFLAG,P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA);
    				END IF;

    				SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_SPLITLEN+1,P_LEN-P_SPLITLEN+P_SIGNLEN);#拆分后的字符
    				SET P_TMPMSGID = P_TMPMSGID+17179869184;
    				SET P_PKNUM = P_PKNUM+1;
    				IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = @P_PTMSGID) THEN
        				INSERT P_TMP_WRMTTASK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
        				PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
        				VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
        				P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA);
                    END IF;
                ELSE
                    WHILE P_PKNUM <= @P_PKTOTAL DO
						IF P_PKNUM = @P_PKTOTAL THEN
							SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_TMPNUM+1,P_MULTILEN2+P_SIGNLEN);#拆分后的字符
							SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
							#PRINT P_RESULTMSG
						ELSEIF P_PKNUM = P_PKTOTAL-1 THEN
							IF P_LEN-(P_PKNUM-1)*@P_MULTILEN1 > @P_MULTILEN2 AND P_LEN-(P_PKNUM-1)*@P_MULTILEN1 <= @P_MULTILEN1 THEN
								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_LEN-(P_PKNUM-1)*P_MULTILEN1-1);
								SET P_TMPNUM = P_LEN-1;
							ELSE
								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);
								SET P_TMPNUM = (P_PKNUM-1)*P_MULTILEN1+P_MULTILEN1;
						    END IF;

							SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
						ELSE
							SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);#拆分后的字符
							#PRINT P_RESULTMSG
							SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
						END IF;

						IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    						INSERT P_TMP_WRMTTASK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    						PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
    						VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    						P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA);
                        END IF;

						SET P_PKNUM = P_PKNUM+1;

                    END WHILE;
                END IF;
            		INSERT INTO GW_MT_TASK_BAK (UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
            		PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA)
            		SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,
            		A.PKNUMBER,A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME,A.SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA FROM P_TMP_WRMTTASK A;
                END IF;
            
		END IF;
	ELSE #群发
		SET P_SHOUJI = CONCAT(P_STRSPLIT , P_SHOUJI , P_STRSPLIT);
		SET P_LOCATION = LOCATE(P_STRSPLIT,P_SHOUJI);

		IF @P_PKTOTAL < 1 THEN #没有短信内容
			LEAVE TOP;
        END IF;

		IF @P_PKTOTAL >= 1 THEN #需要拆分长短信
			WHILE P_LOCATION <> 0 DO #拆分手机号码
				SET P_START = P_LOCATION;
				SET P_LOCATION = LOCATE(P_STRSPLIT,P_SHOUJI,P_START+1);
				IF P_LOCATION > 0 THEN
					SET P_RESULTPHONE = SUBSTRING(P_SHOUJI,P_START+1,P_LOCATION-P_START-1);#拆分后的字符
					#PRINT P_RESULTPHONE
					#IF P_RESULTPHONE <> ''
					SET P_TMPMSGID = P_PTMSGID;
					IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
						IF @P_PKTOTAL = 1 THEN
							INSERT P_TMP_WRMTTASK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
							PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
							VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_MESSAGE,P_SENDSTATUS,P_RETFLAG,
							P_PKTOTAL,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA);
						ELSE
							SET P_PKNUM = 1;
							#SET P_TOTALSPLITNUM = P_PKTOTAL-1
							IF @P_PKTOTAL = 2 AND P_LEN <= @P_MULTILEN1 THEN
								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,1,P_SPLITLEN);#拆分后的字符
								SET P_TMPMSGID = P_TMPMSGID;
								IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    								INSERT P_TMP_WRMTTASK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    								PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
    								VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    								P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA);
                                END IF;

								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_SPLITLEN+1,P_LEN-P_SPLITLEN+P_SIGNLEN);#拆分后的字符
								SET P_TMPMSGID = P_TMPMSGID+17179869184;
								SET P_PKNUM = P_PKNUM+1;
								IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    								INSERT P_TMP_WRMTTASK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    								PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
    								VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    								P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA);
								END IF;
                             ELSE
								WHILE P_PKNUM <= @P_PKTOTAL DO
									IF P_PKNUM = @P_PKTOTAL THEN
										SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_TMPNUM+1,P_MULTILEN2+P_SIGNLEN);#拆分后的字符
										SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
									ELSEIF P_PKNUM = P_PKTOTAL-1 THEN
										IF P_LEN-(P_PKNUM-1)*@P_MULTILEN1 > @P_MULTILEN2 AND P_LEN-(P_PKNUM-1)*@P_MULTILEN1 <= @P_MULTILEN1 THEN
											SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_LEN-(P_PKNUM-1)*P_MULTILEN1-1);
											SET P_TMPNUM = P_LEN-1;
										ELSE
											SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);
											SET P_TMPNUM = (P_PKNUM-1)*P_MULTILEN1+P_MULTILEN1;
										END IF;
										SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
									ELSE
										SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);#拆分后的字符
										#PRINT P_RESULTMSG
										SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
									END IF;
									IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    									INSERT P_TMP_WRMTTASK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    									PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
    									VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    									P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA);
									END IF;
                                    SET P_PKNUM = P_PKNUM+1;
								END WHILE;
                             END IF; #END OF @P_PKTOTAL = 2
						  END IF; # END OF @P_PKTOTAL = 1
					   END	IF;	#NOT EXISTS(SELECT
					   SET P_PTMSGID = P_PTMSGID+1;
                   END IF;
				END WHILE;
			END IF;

			INSERT INTO GW_MT_TASK_BAK (UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
			PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA)
			SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,
			A.PKNUMBER,A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME,A.SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA FROM P_TMP_WRMTTASK A;
	  END IF;
END$
/*DELIMITER ;*/

CALL S_WR_VERINFO('4.06.06')$
/** 升级脚本(V4.06.05-V4.06.06) END*/

/** 升级脚本(V4.06.06-V4.06.07) START*/
/*DELIMITER ;*/
DROP PROCEDURE IF EXISTS COLUMNADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COLUMNADD`(TBNAME VARCHAR(15),COLNAME VARCHAR(32),COLTYPE VARCHAR(64))
BEGIN
DECLARE  CURRENTDATABASE VARCHAR(100);
DECLARE  P_STR VARCHAR(300);
SELECT DATABASE() INTO CURRENTDATABASE;
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=CURRENTDATABASE AND TABLE_NAME = @TBNAME AND COLUMN_NAME =@COLNAME) THEN
   SET P_STR= CONCAT('ALTER TABLE ',TBNAME,' ADD ',COLNAME ,' ',COLTYPE);
   SET @SQL = P_STR;
   PREPARE STMT FROM @SQL;
   EXECUTE STMT;
   DEALLOCATE PREPARE STMT;
END IF;
END$
/*DELIMITER ;*/

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'GW_MT_TASK_BAK' AND COLUMN_NAME ='SUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('GW_MT_TASK_BAK','SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$


DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'GW_MT_TASK_BAK' AND COLUMN_NAME ='LUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('GW_MT_TASK_BAK','LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'MT_LEVEL0_QUEUE' AND COLUMN_NAME ='SUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('MT_LEVEL0_QUEUE','SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'MT_LEVEL0_QUEUE' AND COLUMN_NAME ='LUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('MT_LEVEL0_QUEUE','LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'MT_LEVEL1_QUEUE' AND COLUMN_NAME ='SUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('MT_LEVEL1_QUEUE','SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'MT_LEVEL1_QUEUE' AND COLUMN_NAME ='LUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('MT_LEVEL1_QUEUE','LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'MT_LEVEL2_QUEUE' AND COLUMN_NAME ='SUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('MT_LEVEL2_QUEUE','SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'MT_LEVEL2_QUEUE' AND COLUMN_NAME ='LUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('MT_LEVEL2_QUEUE','LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'MT_LEVEL3_QUEUE' AND COLUMN_NAME ='SUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('MT_LEVEL3_QUEUE','SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'MT_LEVEL3_QUEUE' AND COLUMN_NAME ='LUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('MT_LEVEL3_QUEUE','LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'MT_LEVEL4_QUEUE' AND COLUMN_NAME ='SUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('MT_LEVEL4_QUEUE','SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'MT_LEVEL4_QUEUE' AND COLUMN_NAME ='LUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('MT_LEVEL4_QUEUE','LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'MT_LEVEL5_QUEUE' AND COLUMN_NAME ='SUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('MT_LEVEL5_QUEUE','SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'MT_LEVEL5_QUEUE' AND COLUMN_NAME ='LUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('MT_LEVEL5_QUEUE','LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'MT_LEVEL6_QUEUE' AND COLUMN_NAME ='SUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('MT_LEVEL6_QUEUE','SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'MT_LEVEL6_QUEUE' AND COLUMN_NAME ='LUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('MT_LEVEL6_QUEUE','LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'MT_LEVEL7_QUEUE' AND COLUMN_NAME ='SUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('MT_LEVEL7_QUEUE','SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'MT_LEVEL7_QUEUE' AND COLUMN_NAME ='LUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('MT_LEVEL7_QUEUE','LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'MT_LEVEL8_QUEUE' AND COLUMN_NAME ='SUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('MT_LEVEL8_QUEUE','SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'MT_LEVEL8_QUEUE' AND COLUMN_NAME ='LUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('MT_LEVEL8_QUEUE','LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'MT_LEVEL9_QUEUE' AND COLUMN_NAME ='SUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('MT_LEVEL9_QUEUE','SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'MT_LEVEL9_QUEUE' AND COLUMN_NAME ='LUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('MT_LEVEL9_QUEUE','LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$


-- 当前月份历史表添加字段
/*DELIMITER ;*/
DROP PROCEDURE IF EXISTS PRO_ADDCOL_CUR$
CREATE DEFINER=`root`@`%` PROCEDURE PRO_ADDCOL_CUR()
BEGIN
DECLARE TABLENAME1 VARCHAR(20);
DECLARE TABLENAME2 VARCHAR(20);
DECLARE DATABASENAME1 VARCHAR(20);
DECLARE DATABASENAME2 VARCHAR(20);
DECLARE STR VARCHAR(256);
DECLARE V_SQL VARCHAR(256);
DECLARE done INT DEFAULT 0;
DECLARE CUR_TABLE  CURSOR FOR SELECT  TABLE_SCHEMA,TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE  TABLE_NAME LIKE 'MTTASK%';
DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;
SET TABLENAME1 =CONCAT('MTTASK',CAST(DATE_FORMAT(date_add(now(), interval -0 month),'%Y%m') AS SIGNED));
SELECT DATABASE() INTO DATABASENAME1;
OPEN CUR_TABLE;
   emp_loop: LOOP
        FETCH CUR_TABLE INTO DATABASENAME2,TABLENAME2;
        IF done=1 THEN
             LEAVE emp_loop;
         END IF;
        ##添加字段
       IF  TABLENAME2=TABLENAME1 and DATABASENAME2=DATABASENAME1  THEN
        BEGIN
			IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = TABLENAME2 AND COLUMN_NAME ='SUID1' AND COLUMN_TYPE = 'varchar(64)') THEN
				CALL COLUMNADD(TABLENAME2,'SUID1','VARCHAR(64) ');
			END IF;
            IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = TABLENAME2 AND COLUMN_NAME ='LUID1' AND COLUMN_TYPE = 'varchar(64)') THEN
				CALL COLUMNADD(TABLENAME2,'LUID1','VARCHAR(64) ');
			END IF;
       END;

       END IF;
END LOOP emp_loop;
CLOSE CUR_TABLE;
END$
/*DELIMITER ;*/
CALL PRO_ADDCOL_CUR()$
DROP PROCEDURE IF EXISTS PRO_ADDCOL_CUR$

-- 当前月份之后的历史表添加字段
/*DELIMITER ;*/
DROP PROCEDURE IF EXISTS PRO_ADDCOL$
CREATE DEFINER=`root`@`%` PROCEDURE PRO_ADDCOL()
BEGIN
DECLARE TABLENAME1 VARCHAR(20);
DECLARE TABLENAME2 VARCHAR(20);
DECLARE DATABASENAME1 VARCHAR(20);
DECLARE DATABASENAME2 VARCHAR(20);
DECLARE STR VARCHAR(256);
DECLARE V_SQL VARCHAR(256);
DECLARE done INT DEFAULT 0;
DECLARE CUR_TABLE  CURSOR FOR SELECT  TABLE_SCHEMA,TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE  TABLE_NAME LIKE 'MTTASK%';
DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;
SET TABLENAME1 =CONCAT('MTTASK',CAST(DATE_FORMAT(date_add(now(), interval -0 month),'%Y%m') AS SIGNED));
SELECT DATABASE() INTO DATABASENAME1;
OPEN CUR_TABLE;
   emp_loop: LOOP
        FETCH CUR_TABLE INTO DATABASENAME2,TABLENAME2;
        IF done=1 THEN
             LEAVE emp_loop;
         END IF;
        ##添加字段
       IF  TABLENAME2>TABLENAME1 and DATABASENAME2=DATABASENAME1  THEN
        BEGIN
			IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = TABLENAME2 AND COLUMN_NAME ='SUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
				CALL COLUMNADD(TABLENAME2,'SUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
			END IF;
            IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = TABLENAME2 AND COLUMN_NAME ='LUID1' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
				CALL COLUMNADD(TABLENAME2,'LUID1','VARCHAR(64)     NOT NULL  DEFAULT ''''');
			END IF;
       END;

       END IF;
END LOOP emp_loop;
CLOSE CUR_TABLE;
END$
/*DELIMITER ;*/
CALL PRO_ADDCOL()$
DROP PROCEDURE IF EXISTS PRO_ADDCOL$

/*DELIMITER ;*/
DROP PROCEDURE IF EXISTS `CREATETABLE`$
CREATE DEFINER=`root`@`%` PROCEDURE `CREATETABLE`(PITYPE INT,PIYM INT)
BEGIN
DECLARE STR VARCHAR(4000);
DECLARE TABLENAME VARCHAR(16);

IF @PITYPE=1 THEN
SET TABLENAME=CONCAT('MTTASK',PIYM);
SET STR=CONCAT('CREATE TABLE `',TABLENAME,
'` (
  `ID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `MDAY` INT(11) NOT NULL DEFAULT ''0'',
  `USERID` VARCHAR(11) NOT NULL DEFAULT '''',
  `SPID` VARCHAR(32) NOT NULL DEFAULT '''',
  `SPGATE` VARCHAR(21) NOT NULL DEFAULT '''',
  `CPNO` VARCHAR(21) NOT NULL DEFAULT '''',
  `PHONE` VARCHAR(21) NOT NULL DEFAULT '''',
  `SPMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `RETFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `FEEFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `PKNUMBER` INT(11) NOT NULL DEFAULT ''0'',
  `PKTOTAL` INT(11) NOT NULL DEFAULT ''0'',
  `SENDSTATUS` INT(11) NOT NULL DEFAULT ''0'',
  `SENDFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `RECVFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `DONEDATE` VARCHAR(10) NOT NULL DEFAULT '''',
  `ERRORCODE` VARCHAR(7) NOT NULL DEFAULT '''',
  `SENDLEVEL` INT(11) NOT NULL DEFAULT ''0'',
  `SENDTYPE` INT(11) NOT NULL DEFAULT ''0'',
  `UNICOM` INT(11) NOT NULL DEFAULT ''0'',
  `MOBILEAREA` INT(11) NOT NULL DEFAULT ''0'',
  `SENDTIME` DATETIME NOT NULL DEFAULT ''0000-00-00 00:00:00'',
  `RECVTIME` DATETIME NOT NULL DEFAULT ''0000-00-00 00:00:00'',
  `MESSAGE` VARCHAR(3000) NOT NULL DEFAULT '''',
  `TASKID` INT(11) NOT NULL DEFAULT ''0'',
  `ECID` INT(11) NOT NULL DEFAULT ''0'',
  `PTMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `SVRTYPE` VARCHAR(64) NOT NULL DEFAULT '''',
  `P1` VARCHAR(64) NOT NULL DEFAULT '''',
  `P2` VARCHAR(64) NOT NULL DEFAULT '''',
  `P3` VARCHAR(64) NOT NULL DEFAULT '''',
  `P4` VARCHAR(64) NOT NULL DEFAULT '''',
  `USERMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `MODULEID` INT(11) NOT NULL DEFAULT ''0'',
  `ATTIME` BIGINT(20) NOT NULL DEFAULT ''0'',
  `VALIDTIME` BIGINT(20) NOT NULL DEFAULT ''0'',
  `BATCHID`  BIGINT(20) NOT NULL DEFAULT 0,
  `AREACODE`  INT(11) NOT NULL DEFAULT 0 ,
  `CUSTID`	VARCHAR(64)  NOT NULL DEFAULT '''',
  `EXDATA`	VARCHAR(64)  NOT NULL DEFAULT '''',
  `LONGMSG`	VARCHAR(4000)  NOT NULL DEFAULT '''',
  `TMPLID`  BIGINT NOT NULL DEFAULT 0,
  `CHGRADE`	TINYINT  NOT NULL DEFAULT 0,
  `MSGTYPE`	TINYINT  NOT NULL DEFAULT 0,
  `RMSVALIDTM`	INT  NOT NULL DEFAULT 0,
  `ERRORCODE2`	CHAR(7)  NOT NULL DEFAULT '''',
  `DOWNTM`	DATETIME  NOT NULL DEFAULT ''1990-01-01 08:00:00'',
  `RMSRPTFLAG`	TINYINT  NOT NULL DEFAULT 1,
  `PROTOCOLVER`	TINYINT NOT NULL DEFAULT 0,
  `TMPLTYPE`	TINYINT NOT NULL DEFAULT 0,
  `TITLE`	VARCHAR(40)  NOT NULL DEFAULT '''',
  `SHOWAY`	VARCHAR(16)  NOT NULL DEFAULT '''',
  `DLDWAY`	INT NOT NULL DEFAULT 0,
  `DLDNEY`	INT NOT NULL DEFAULT 0,
  `ISFREE`	INT NOT NULL DEFAULT 0,
  `SHOWTIME`	BIGINT NOT NULL DEFAULT 0,
  `SUID1`	VARCHAR(64)  NOT NULL DEFAULT '''',
  `LUID1`	VARCHAR(64)  NOT NULL DEFAULT '''',
  UNIQUE KEY `IX_',TABLENAME,'_PTID` (`PTMSGID`),
  KEY `IX_',TABLENAME,'_P1` (`P1`),
  KEY `IX_',TABLENAME,'_SVRTYPE` (`SVRTYPE`),
  KEY `IX_',TABLENAME,'_TASKID` (`TASKID`),
  KEY `IX_',TABLENAME,'_STIME` (`SENDTIME`),
  KEY `IX_',TABLENAME,'_UID` (`USERID`),
  KEY `IX_',TABLENAME,'_BATCHID` (`BATCHID`),
  KEY `IX_',TABLENAME,'_AREACODE` (`AREACODE`),
   KEY `IX_',TABLENAME,'_PHONE` (`PHONE`)
) ENGINE=INNODB DEFAULT CHARSET=GBK;');

ELSEIF @PITYPE=2 THEN
SET TABLENAME=CONCAT('MMSTASK',PIYM);
SET STR=CONCAT('CREATE TABLE `',TABLENAME,
'` (
  `ID` INT(11) NOT NULL,
  `MDAY` INT(11) NOT NULL DEFAULT ''0'',
  `USERID` VARCHAR(11) NOT NULL DEFAULT '''',
  `SPGATE` VARCHAR(21) NOT NULL DEFAULT '''',
  `CPNO` VARCHAR(21) NOT NULL DEFAULT '''',
  `PHONE` VARCHAR(21) NOT NULL DEFAULT '''',
  `SPMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `RETFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `FEEFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `PKNUMBER` INT(11) NOT NULL DEFAULT ''0'',
  `PKTOTAL` INT(11) NOT NULL DEFAULT ''0'',
  `SENDSTATUS` INT(11) NOT NULL DEFAULT ''0'',
  `SENDFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `RECVFLAG` INT(11) NOT NULL DEFAULT ''0'',
  `DONEDATE` VARCHAR(10) NOT NULL DEFAULT '''',
  `ERRORCODE` VARCHAR(7) NOT NULL DEFAULT '''',
  `SENDLEVEL` INT(11) NOT NULL DEFAULT ''0'',
  `SENDTYPE` INT(11) NOT NULL DEFAULT ''0'',
  `UNICOM` INT(11) NOT NULL DEFAULT ''0'',
  `SENDTIME` DATETIME NOT NULL DEFAULT ''0000-00-00 00:00:00'',
  `RECVTIME` DATETIME NOT NULL DEFAULT ''0000-00-00 00:00:00'',
  `MESSAGE` VARCHAR(3000) NOT NULL DEFAULT '''',
  `TASKID` INT(11) NOT NULL DEFAULT ''0'',
  `ECID` INT(11) NOT NULL DEFAULT ''0'',
  `PTMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `SPID` VARCHAR(32) NOT NULL DEFAULT '''',
  `MOBILEAREA` INT(11) NOT NULL DEFAULT ''0'',
  `SVRTYPE` VARCHAR(64) NOT NULL DEFAULT '''',
  `P1` VARCHAR(64) NOT NULL DEFAULT '''',
  `P2` VARCHAR(64) NOT NULL DEFAULT '''',
  `P3` VARCHAR(64) NOT NULL DEFAULT '''',
  `P4` VARCHAR(64) NOT NULL DEFAULT '''',
  `USERMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `MODULEID` INT(11) NOT NULL DEFAULT ''0'',
  `ATTIME` BIGINT(20) NOT NULL DEFAULT ''0'',
  `VALIDTIME` BIGINT(20) NOT NULL DEFAULT ''0'',
  `SPMSGID2` VARCHAR(64) NOT NULL DEFAULT '''',
  `JTYPE` TINYINT(4) NOT NULL DEFAULT ''0'',
  `ORDERCPNO` VARCHAR(21) NOT NULL DEFAULT '''',
  `PASSTHROUGH` TINYINT(4) NOT NULL DEFAULT ''0'',
  `MSGTITLE` VARCHAR(720) NOT NULL DEFAULT '''',
  `TMPLID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `MSGTYPE` TINYINT(4) NOT NULL DEFAULT ''0'',
  `ERRORMSG` VARCHAR(256) NOT NULL DEFAULT '''',
  PRIMARY KEY  (`ID`),
  UNIQUE KEY `IX_',TABLENAME,'_PTMSGID` (`PTMSGID`),
  KEY `IX_',TABLENAME,'_USERID` (`USERID`),
  KEY `IX_',TABLENAME,'_SENDTIME` (`SENDTIME`),
  KEY `IX_',TABLENAME,'_TASKID` (`TASKID`),
  KEY `IX_',TABLENAME,'_SVRTYPE` (`SVRTYPE`),
  KEY `IX_',TABLENAME,'_P1` (`P1`)
) ENGINE=INNODB DEFAULT CHARSET=GBK;');

ELSEIF  @PITYPE=3 THEN
SET TABLENAME=CONCAT('MOTASK',PIYM);
SET STR=CONCAT('CREATE TABLE `',TABLENAME,
'` (
  `ID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `UID` INT(11) NOT NULL DEFAULT ''0'',
  `USERID` VARCHAR(11) NOT NULL DEFAULT '''',
  `SPNUMBER` VARCHAR(21) NOT NULL DEFAULT '''',
  `SERVICEID` VARCHAR(10) NOT NULL DEFAULT '''',
  `SENDSTATUS` INT(11) NOT NULL DEFAULT ''0'',
  `DELIVERTIME` TIMESTAMP NOT NULL DEFAULT ''0000-00-00 00:00:00'',
  `PHONE` VARCHAR(21) NOT NULL DEFAULT '''',
  `MSGCONTENT` VARCHAR(3000) NOT NULL DEFAULT '''',
  `ECID` INT(11) NOT NULL DEFAULT ''0'',
  `ORGUID` INT(11) NOT NULL DEFAULT ''0'',
  `PTMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `TP_PID` INT(11) NOT NULL DEFAULT ''0'',
  `TP_UDHI` INT(11) NOT NULL DEFAULT ''0'',
  `MSGFMT` INT(11) NOT NULL DEFAULT ''0'',
  `UNICOM` INT(11) NOT NULL DEFAULT ''0'',
  PRIMARY KEY  (`ID`)
) ENGINE=INNODB DEFAULT CHARSET=GBK;');

ELSE
SET TABLENAME=CONCAT('MMSMOTASK',PIYM);
SET STR=CONCAT('CREATE TABLE `',TABLENAME,
'` (
  `ID` INT(11) NOT NULL,
  `UID` INT(11) NOT NULL DEFAULT ''0'',
  `USERID` VARCHAR(11) NOT NULL DEFAULT '''',
  `SPNUMBER` VARCHAR(11) NOT NULL DEFAULT '''',
  `SERVICEID` VARCHAR(10) NOT NULL DEFAULT '''',
  `SENDSTATUS` INT(11) NOT NULL DEFAULT ''0'',
  `DELIVERTIME` DATETIME NOT NULL DEFAULT ''0000-00-00 00:00:00'',
  `PHONE` VARCHAR(21) NOT NULL DEFAULT '''',
  `MSGCONTENT` VARCHAR(3000) NOT NULL DEFAULT '''',
  `ECID` INT(11) NOT NULL DEFAULT ''0'',
  `ORGUID` INT(11) NOT NULL DEFAULT ''0'',
  `PTMSGID` BIGINT(20) NOT NULL DEFAULT ''0'',
  `TP_PID` INT(11) NOT NULL DEFAULT ''0'',
  `TP_UDHI` INT(11) NOT NULL DEFAULT ''0'',
  `MSGFMT` INT(11) NOT NULL DEFAULT ''15'',
  `UNICOM` INT(11) NOT NULL DEFAULT ''0'',
  `PASSTHROUGH` TINYINT(4) NOT NULL DEFAULT ''0'',
  `MSGTYPE` TINYINT(4) NOT NULL DEFAULT ''0'',
  `MSGTITLE` VARCHAR(200) NOT NULL DEFAULT '''',
  PRIMARY KEY  (`ID`)
) ENGINE=INNODB DEFAULT CHARSET=GBK;');
END IF;

SET @SQL=STR;
PREPARE SL FROM @SQL;
EXECUTE SL;
DEALLOCATE PREPARE SL;

END$
/*DELIMITER ;*/

/*DELIMITER ;*/
DROP PROCEDURE IF EXISTS `GW_H_TRANSFERV1`$
CREATE DEFINER=`root`@`%` PROCEDURE `GW_H_TRANSFERV1`(P_MININDEX BIGINT,P_MAXINDEX BIGINT,P_PROCESSFLAG INT,P_LOTSIZE INT)
BEGIN

	DECLARE P_STR VARCHAR(4000);
	DECLARE P_TABLENAME VARCHAR(20);
        DECLARE   CURYM INT;
        DECLARE   MINYM INT;
        DECLARE   MAXYM INT;

        #转移
        SELECT CAST(DATE_FORMAT(MIN(SENDTIME) ,'%Y%m') AS SIGNED) ,CAST(DATE_FORMAT(MAX(SENDTIME) ,'%Y%m') AS SIGNED)  INTO MINYM,MAXYM FROM GW_MT_TASK_BAK WHERE ID BETWEEN P_MININDEX AND P_MAXINDEX;
        SET CURYM = MINYM;
        WHILE CURYM<=MAXYM DO

	SET P_TABLENAME = CONCAT('MTTASK',CURYM );
        SET P_STR = CONCAT('INSERT  INTO ',P_TABLENAME,
			 ' (ID,MDAY,USERID,SPGATE,CPNO,PHONE,SPMSGID,RETFLAG,FEEFLAG,PKNUMBER,PKTOTAL,SENDSTATUS,SENDFLAG,RECVFLAG,DONEDATE,ERRORCODE,SENDLEVEL,SENDTYPE,UNICOM,SENDTIME,RECVTIME,MESSAGE,TASKID,ECID,PTMSGID,MOBILEAREA,SPID,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,DOWNTM,SUID1,LUID1)
                          SELECT ID, DATE_FORMAT(M.SENDTIME,''%d'') AS MDAY,USERID,SPGATE,CPNO,PHONE,SPMSGID,RETFLAG,FEEFLAG,PKNUMBER,PKTOTAL,SENDSTATUS,SENDFLAG,RECVFLAG,DONEDATE,ERRORCODE,SENDLEVEL,SENDTYPE,UNICOM,SENDTIME,RECVTIME,MESSAGE,TASKID,ECID,PTMSGID,MOBILEAREA,SPID,SVRTYPE,
                          P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,RMSRPTFLAG,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,DOWNTM,SUID1,LUID1
                          FROM GW_MT_TASK_BAK M WHERE CAST(DATE_FORMAT(SENDTIME,''%Y%m'') AS SIGNED)=',CURYM,' AND ID<=',P_MAXINDEX);
#SELECT P_STR;
	SET @SQL=P_STR;
         PREPARE SL FROM @SQL;
         EXECUTE SL;
         DEALLOCATE PREPARE SL;

          IF CAST(SUBSTRING(CAST(CURYM AS CHAR(6)),5,2) AS SIGNED)=12 THEN
                SET CURYM = CAST(CONCAT(CAST(CAST(SUBSTRING(CAST(CURYM AS CHAR(6)),1,4)AS SIGNED)+1 AS CHAR(4)),'01' )AS SIGNED);
          ELSE
               SET CURYM = CURYM+1  ;
          END IF;
        END WHILE;
END$
/*DELIMITER ;*/

/*DELIMITER ;*/
DROP PROCEDURE  IF EXISTS GW_RD_MTLVLQUEV1$
CREATE DEFINER=`root`@`%` PROCEDURE `GW_RD_MTLVLQUEV1`(P_DESTUID INT,
	P_SENDLEVEL INT,
	P_MAXREADCNT INT,
	P_STRUID VARCHAR(4000),P_CURTIME BIGINT,P_TABLENO INT)
BEGIN
    DECLARE P_SQLSTR VARCHAR(4000);
    DECLARE P_TABNAME VARCHAR(20);
    SET P_CURTIME = IFNULL(P_CURTIME, 0);
    IF  P_TABLENO>=0  AND   P_TABLENO<=9 THEN
       SET P_TABNAME=CONCAT('MT_LEVEL',  CONVERT(P_TABLENO,CHAR(1)),'_QUEUE');
    ELSE
       SET P_TABNAME='MT_LEVEL0_QUEUE';
    END IF;
    SET P_SQLSTR = 'SELECT ID,UID,DESTUID,LOGINUID,ECID,TASKID,FEEFLAG,USERID,SPGATE,CPNO,PHONE,PTMSGID,RETFLAG,TPUDHI,PKNUMBER,PKTOTAL,SENDSTATUS,';
    SET P_SQLSTR = CONCAT(P_SQLSTR,'PHONECOUNT,SPLITFLAG,SENDLEVEL,LONGMSGSEQ,MSGFMT,MESSAGE,SENDTIME AS RECVMTTIME,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1  FROM ',P_TABNAME);
    SET P_SQLSTR = CONCAT(P_SQLSTR,' WHERE DESTUID=', P_DESTUID,' AND UID NOT IN (',P_STRUID,') AND (ATTIME<=',P_CURTIME,' OR ATTIME<0) ');
    SET P_SQLSTR = CONCAT(P_SQLSTR,' AND SENDLEVEL=',P_SENDLEVEL,' LIMIT ',P_MAXREADCNT);

    SET @SQL = P_SQLSTR;
   PREPARE SL FROM @SQL;

  EXECUTE SL;

    DEALLOCATE PREPARE SL;
END$
/*DELIMITER ;*/

/*DELIMITER ;*/
DROP PROCEDURE IF EXISTS `GW_WR_MTTASKV5`$
CREATE DEFINER=`root`@`%` PROCEDURE `GW_WR_MTTASKV5`(
P_UID INT,
P_PTMSGID BIGINT,
	P_SENDSTATUS TINYINT UNSIGNED,
	P_RETFLAG TINYINT UNSIGNED,
	P_PKTOTAL TINYINT UNSIGNED,
	P_PHONECOUNT INT,
	P_SPLITLEN TINYINT UNSIGNED,
	P_MULTILEN1 TINYINT UNSIGNED,
	P_MULTILEN2 TINYINT UNSIGNED,
	P_SIGNLEN TINYINT UNSIGNED,
	P_ECID INT,
	P_USERID VARCHAR(11),
P_SPGATE VARCHAR(21),
	P_CPNO VARCHAR(21),
	P_RECVMTTIME DATETIME,
	P_MESSAGE VARCHAR(3000)  CHARSET 'GBK',
	P_SHOUJI VARCHAR(3500),
	P_FEEFLAG TINYINT UNSIGNED,
	P_SENDLEVEL TINYINT UNSIGNED,
	P_TASKID INT,
	P_ERRORCODE CHAR(7),
	P_TPUDHI TINYINT UNSIGNED,
	P_LONGMSGSEQ TINYINT UNSIGNED,
	P_MSGFMT TINYINT UNSIGNED,
	P_UNICOM TINYINT UNSIGNED,
  P_MOBILEAREA INT UNSIGNED,
  P_PKNUMBER TINYINT UNSIGNED,
  P_SVRTYPE VARCHAR(64),
  P_P1 VARCHAR(64),
  P_P2 VARCHAR(64),
  P_P3 VARCHAR(64),
  P_P4 VARCHAR(64),
  P_USERMSGID BIGINT,
  P_MODULEID INT,
  P_ATTIME BIGINT,
  P_VALIDTIME BIGINT,
  P_SENDTYPE TINYINT UNSIGNED,
  P_BATCHID BIGINT,
  P_AREACODE INT,
  P_CUSTID VARCHAR(64),
  P_EXDATA VARCHAR(64),
	P_SUID1 VARCHAR(64),
	P_LUID1 VARCHAR(64))
  TOP:BEGIN
    DECLARE P_TMPMSGID BIGINT;
	DECLARE P_LOCATION INT;
	DECLARE P_START INT;
	DECLARE P_RESULTPHONE VARCHAR(21); #存储拆分后的字符
	DECLARE P_STRSPLIT VARCHAR(2);
	DECLARE P_LEN INT;
	DECLARE P_RESULTMSG VARCHAR(3000); #存储拆分后的字符
	DECLARE P_PKNUM INT;
	DECLARE P_TMPNUM INT;

    CREATE TEMPORARY TABLE IF NOT EXISTS P_TMP_WRMTTASKV2(UID INT,USERID VARCHAR(11),SPGATE VARCHAR(21),CPNO VARCHAR(21),
						PHONE VARCHAR(21),PTMSGID BIGINT,MESSAGE VARCHAR(3000),
						SENDSTATUS TINYINT,RETFLAG TINYINT,PKNUMBER TINYINT,
						PKTOTAL TINYINT,RECVMTTIME DATETIME,ECID INT,FEEFLAG TINYINT,
						SENDLEVEL TINYINT,TASKID INT,ERRORCODE CHAR(7),TPUDHI TINYINT,
						LONGMSGSEQ TINYINT,MSGFMT TINYINT,UNICOM TINYINT,MOBILEAREA INT,
						SVRTYPE VARCHAR(64),P1 VARCHAR(64),P2 VARCHAR(64),P3 VARCHAR(64),
						P4 VARCHAR(64),USERMSGID BIGINT,MODULEID INT,ATTIME BIGINT,VALIDTIME BIGINT,SENDTYPE INT,AREACODE INT,CUSTID VARCHAR(64),EXDATA VARCHAR(64),SUID1 VARCHAR(64),LUID1 VARCHAR(64));

	TRUNCATE TABLE P_TMP_WRMTTASKV2;

    SET P_LEN = CHAR_LENGTH(P_MESSAGE)-P_SIGNLEN;
	SET P_TMPNUM = 0;
	SET P_PKNUM = 1;
	SET P_STRSPLIT = ',';

    IF @P_PHONECOUNT < 1 THEN #手机个数为0
		LEAVE TOP;
    END IF;

	IF @P_MSGFMT=4 OR @P_MSGFMT=248 OR @P_MSGFMT=246 THEN
		SET P_SPLITLEN=140;
		SET P_MULTILEN1=134;
		SET P_MULTILEN2=134;
		SET P_SIGNLEN=0;
	END IF;

	IF @P_MSGFMT=25 THEN
		IF NOT EXISTS (SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID=@P_PTMSGID) THEN
		   INSERT INTO GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
		   RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
		   VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_PTMSGID,P_MESSAGE,P_SENDSTATUS,P_RETFLAG, P_PKNUMBER,P_PKTOTAL,
		   P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM, P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1);
        END IF;
	END IF;

	IF @P_PHONECOUNT = 1 THEN #单发
        IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = @P_PTMSGID) THEN
            IF @P_PKTOTAL = 1 THEN
        		INSERT GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
        		RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,
        		P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
        		VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_PTMSGID,P_MESSAGE,P_SENDSTATUS,
        		P_RETFLAG,P_PKTOTAL,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,
        		P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1);
            ELSE
        		SET P_PKNUM = 1;
        		SET P_TMPMSGID = P_PTMSGID;
                IF @P_PKTOTAL = 2 AND P_LEN <= @P_MULTILEN1 THEN
    				SET P_RESULTMSG = SUBSTRING(P_MESSAGE,1,P_SPLITLEN);#拆分后的字符
    				SET P_TMPMSGID = P_TMPMSGID;
    				IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = @P_PTMSGID) THEN
        				INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
        				RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
        				VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,
        				P_RETFLAG,P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1);
    				END IF;

    				SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_SPLITLEN+1,P_LEN-P_SPLITLEN+P_SIGNLEN);#拆分后的字符
    				SET P_TMPMSGID = P_TMPMSGID+17179869184;
    				SET P_PKNUM = P_PKNUM+1;
    				IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = @P_PTMSGID) THEN
        				INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
        				PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
        				VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
        				P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1);
                    END IF;
                ELSE
                    WHILE P_PKNUM <= @P_PKTOTAL DO
						IF P_PKNUM = @P_PKTOTAL THEN
							SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_TMPNUM+1,P_MULTILEN2+P_SIGNLEN);#拆分后的字符
							SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
							#PRINT P_RESULTMSG
						ELSEIF P_PKNUM = P_PKTOTAL-1 THEN
							IF P_LEN-(P_PKNUM-1)*@P_MULTILEN1 > @P_MULTILEN2 AND P_LEN-(P_PKNUM-1)*@P_MULTILEN1 <= @P_MULTILEN1 THEN
								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_LEN-(P_PKNUM-1)*P_MULTILEN1-1);
								SET P_TMPNUM = P_LEN-1;
							ELSE
								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);
								SET P_TMPNUM = (P_PKNUM-1)*P_MULTILEN1+P_MULTILEN1;
						    END IF;

							SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
						ELSE
							SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);#拆分后的字符
							#PRINT P_RESULTMSG
							SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
						END IF;

						IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    						INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    						PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
    						VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    						P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1);
                        END IF;

						SET P_PKNUM = P_PKNUM+1;

                    END WHILE;
                END IF;
            		INSERT INTO GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
            		PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
            		SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,
            		A.PKNUMBER,A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME,A.SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1 FROM P_TMP_WRMTTASKV2 A;
                END IF;

		END IF;
	ELSE #群发
		SET P_SHOUJI = CONCAT(P_STRSPLIT , P_SHOUJI , P_STRSPLIT);
		SET P_LOCATION = LOCATE(P_STRSPLIT,P_SHOUJI);

		IF @P_PKTOTAL < 1 THEN #没有短信内容
			LEAVE TOP;
        END IF;

		IF @P_PKTOTAL >= 1 THEN #需要拆分长短信
			WHILE P_LOCATION <> 0 DO #拆分手机号码
				SET P_START = P_LOCATION;
				SET P_LOCATION = LOCATE(P_STRSPLIT,P_SHOUJI,P_START+1);
				IF P_LOCATION > 0 THEN
					SET P_RESULTPHONE = SUBSTRING(P_SHOUJI,P_START+1,P_LOCATION-P_START-1);#拆分后的字符
					#PRINT P_RESULTPHONE
					#IF P_RESULTPHONE <> ''
					SET P_TMPMSGID = P_PTMSGID;
					IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
						IF @P_PKTOTAL = 1 THEN
							INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
							PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
							VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_MESSAGE,P_SENDSTATUS,P_RETFLAG,
							P_PKTOTAL,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1);
						ELSE
							SET P_PKNUM = 1;
							#SET P_TOTALSPLITNUM = P_PKTOTAL-1
							IF @P_PKTOTAL = 2 AND P_LEN <= @P_MULTILEN1 THEN
								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,1,P_SPLITLEN);#拆分后的字符
								SET P_TMPMSGID = P_TMPMSGID;
								IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    								INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    								PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
    								VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    								P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1);
                                END IF;

								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_SPLITLEN+1,P_LEN-P_SPLITLEN+P_SIGNLEN);#拆分后的字符
								SET P_TMPMSGID = P_TMPMSGID+17179869184;
								SET P_PKNUM = P_PKNUM+1;
								IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    								INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    								PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
    								VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    								P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1);
								END IF;
                             ELSE
								WHILE P_PKNUM <= @P_PKTOTAL DO
									IF P_PKNUM = @P_PKTOTAL THEN
										SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_TMPNUM+1,P_MULTILEN2+P_SIGNLEN);#拆分后的字符
										SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
									ELSEIF P_PKNUM = P_PKTOTAL-1 THEN
										IF P_LEN-(P_PKNUM-1)*@P_MULTILEN1 > @P_MULTILEN2 AND P_LEN-(P_PKNUM-1)*@P_MULTILEN1 <= @P_MULTILEN1 THEN
											SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_LEN-(P_PKNUM-1)*P_MULTILEN1-1);
											SET P_TMPNUM = P_LEN-1;
										ELSE
											SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);
											SET P_TMPNUM = (P_PKNUM-1)*P_MULTILEN1+P_MULTILEN1;
										END IF;
										SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
									ELSE
										SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);#拆分后的字符
										#PRINT P_RESULTMSG
										SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
									END IF;
									IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    									INSERT P_TMP_WRMTTASKV2(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    									PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
    									VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    									P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1);
									END IF;
                                    SET P_PKNUM = P_PKNUM+1;
								END WHILE;
                             END IF; #END OF @P_PKTOTAL = 2
						  END IF; # END OF @P_PKTOTAL = 1
					   END	IF;	#NOT EXISTS(SELECT
					   SET P_PTMSGID = P_PTMSGID+1;
                   END IF;
				END WHILE;
			END IF;

			INSERT INTO GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
			PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
			SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,
			A.PKNUMBER,A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME,A.SENDTYPE,P_BATCHID,A.AREACODE,A.CUSTID,A.EXDATA,A.SUID1,A.LUID1 FROM P_TMP_WRMTTASKV2 A;
	  END IF;
END$
/*DELIMITER ;*/

/*DELIMITER ;*/
DROP PROCEDURE IF EXISTS `GW_WR_MTTASKSRV5`$
CREATE DEFINER=`root`@`%` PROCEDURE `GW_WR_MTTASKSRV5`(P_UID INT,P_PTMSGID BIGINT,
	P_SENDSTATUS TINYINT UNSIGNED,
	P_RETFLAG TINYINT UNSIGNED,
	P_PKTOTAL TINYINT UNSIGNED,
	P_PHONECOUNT INT,
	P_ECID INT,
	P_USERID VARCHAR(11),
	P_SPGATE VARCHAR(21),
	P_CPNO VARCHAR(21),
	P_RECVMTTIME DATETIME,
	P_MESSAGE VARCHAR(3000)  CHARSET 'GBK',
	P_SHOUJI VARCHAR(3500),
	P_FEEFLAG TINYINT UNSIGNED,
	P_PKNUMBER TINYINT UNSIGNED,
	P_SENDLEVEL TINYINT UNSIGNED,
	P_TASKID INT,
	P_ERRORCODE CHAR(7),
	P_TPUDHI TINYINT UNSIGNED,
	P_LONGMSGSEQ TINYINT UNSIGNED,
	P_MSGFMT TINYINT UNSIGNED,
	P_UNICOM TINYINT UNSIGNED,
	P_MOBILEAREA INT,
	P_SVRTYPE VARCHAR(64),
	P_P1 VARCHAR(64),
	P_P2 VARCHAR(64),
	P_P3 VARCHAR(64),
	P_P4 VARCHAR(64),
	P_USERMSGID BIGINT,
	P_MODULEID INT,
	P_ATTIME BIGINT,
	P_VALIDTIME BIGINT,
	P_SENDTYPE INT,
	P_BATCHID BIGINT,
	P_AREACODE INT,
	P_CUSTID VARCHAR(64),
	P_EXDATA VARCHAR(64),
	P_SUID1 VARCHAR(64),
	P_LUID1 VARCHAR(64))
TOP:BEGIN
    DECLARE P_LOCATION INT;
	DECLARE P_START INT;
	DECLARE P_RESULTPHONE VARCHAR(21); #存储拆分后的字符
	DECLARE P_STRSPLIT VARCHAR(2);

    CREATE TEMPORARY TABLE IF NOT EXISTS P_TMP_MTSR(UID INT,USERID VARCHAR(11),SPGATE VARCHAR(21),CPNO VARCHAR(21),
						PHONE VARCHAR(21),PTMSGID BIGINT ,MESSAGE VARCHAR(3000),
						SENDSTATUS TINYINT UNSIGNED,RETFLAG TINYINT UNSIGNED,PKNUMBER TINYINT UNSIGNED,
						PKTOTAL TINYINT UNSIGNED,RECVMTTIME DATETIME,ECID INT,FEEFLAG TINYINT UNSIGNED,
						SENDLEVEL TINYINT UNSIGNED,TASKID INT,ERRORCODE CHAR(7),TPUDHI TINYINT UNSIGNED,
						LONGMSGSEQ TINYINT UNSIGNED,MSGFMT TINYINT UNSIGNED,UNICOM TINYINT UNSIGNED,MOBILEAREA INT,
						SVRTYPE VARCHAR(64),P1 VARCHAR(64),P2 VARCHAR(64),P3 VARCHAR(64),
						P4 VARCHAR(64),USERMSGID BIGINT,MODULEID INT,ATTIME BIGINT,VALIDTIME BIGINT,SENDTYPE INT,AREACODE INT,CUSTID VARCHAR(64),EXDATA VARCHAR(64),SUID1 VARCHAR(64),LUID1 VARCHAR(64));
    TRUNCATE TABLE P_TMP_MTSR;

    SET P_STRSPLIT = ',';

    IF @P_PHONECOUNT < 1 THEN #手机个数为0
		LEAVE TOP;
    END IF;

	IF @P_PHONECOUNT = 1 THEN #单发
		IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = @P_PTMSGID) THEN
		   INSERT GW_MT_TASK_BAK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG,
		   PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG, SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,
		   P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
		   VALUES(P_UID,P_USERID, P_SPGATE, P_CPNO, P_SHOUJI, P_PTMSGID, P_MESSAGE, P_SENDSTATUS, P_RETFLAG,
		   P_PKNUMBER, P_PKTOTAL, P_RECVMTTIME, P_ECID, P_FEEFLAG, P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,
		   P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1);
		END IF;
	ELSE #群发
		SET P_SHOUJI = CONCAT(P_STRSPLIT , P_SHOUJI , P_STRSPLIT);
		SET P_LOCATION = LOCATE(P_STRSPLIT,P_SHOUJI);
		WHILE P_LOCATION <> 0 DO #拆分手机号码
			SET P_START = P_LOCATION;
			SET P_LOCATION = LOCATE(P_STRSPLIT,P_SHOUJI,P_START+1);
			IF P_LOCATION > 0 THEN
				SET P_RESULTPHONE = SUBSTRING(P_SHOUJI,P_START+1,P_LOCATION-P_START-1);#拆分后的字符
				#PRINT P_RESULTPHONE
				IF P_RESULTPHONE <> '' THEN
					IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = @P_PTMSGID) THEN
					   INSERT P_TMP_MTSR(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG,
					   PKNUMBER, PKTOTAL, RECVMTTIME,ECID, FEEFLAG, SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
					   VALUES(P_UID,P_USERID, P_SPGATE, P_CPNO, P_RESULTPHONE, P_PTMSGID, P_MESSAGE, P_SENDSTATUS, P_RETFLAG,
					   P_PKNUMBER, P_PKTOTAL, P_RECVMTTIME, P_ECID, P_FEEFLAG, P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA,P_SUID1,P_LUID1);
                    END IF;
					SET P_PTMSGID = P_PTMSGID+1;
				END IF;
			END IF;
		END	WHILE;

		INSERT INTO GW_MT_TASK_BAK(UID,USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, SENDSTATUS, RETFLAG,
		PKNUMBER, PKTOTAL, RECVMTTIME, ECID, FEEFLAG, SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,
		P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,SUID1,LUID1)
		SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,
		A.PKNUMBER,A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,
		A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME ,A.SENDTYPE,P_BATCHID,P_AREACODE,A.CUSTID,A.EXDATA,A.SUID1,A.LUID1 FROM P_TMP_MTSR A;
	END IF;
/*
,P_SVRTYPE VARCHAR(64),P_P1 VARCHAR(64),P_P2 VARCHAR(64),P_P3 VARCHAR(64),P_P4 VARCHAR(64),P_USERMSGID BIGINT,P_MODULEID INT,P_ATTIME BIGINT,P_VALIDTIME BIGINT
,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME
,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME
*/
END$
/*DELIMITER ;*/

/*DELIMITER ;*/
DROP PROCEDURE IF EXISTS `GW_WR_MTLVLQUEV4`$
CREATE DEFINER=`root`@`%` PROCEDURE `GW_WR_MTLVLQUEV4`(P_PIUID        INT,
   P_PIPTMSGID    BIGINT,
   P_PIRETFLAG    TINYINT UNSIGNED,
   P_PIPKTOTAL    TINYINT UNSIGNED,
   P_PIPHONECOUNT INT,
   P_PISENDSTATUS TINYINT UNSIGNED,
   P_PISPLITFLAG  TINYINT UNSIGNED,
   P_PIECID       INT,
   P_PIUSERID     VARCHAR(11),
   P_PISPGATE     VARCHAR(21),
   P_PICPNO       VARCHAR(21),
   P_PIRECVMTTIME DATETIME,
   P_PIPHONE      VARCHAR(3500),
   P_PIMESSAGE    VARCHAR(3000) CHARSET 'GBK',
   P_PIFEEFLAG    TINYINT UNSIGNED,
   P_PIDESTUID    INT,
   P_PILOGINUID   INT,
   P_PIPKNUMBER   TINYINT UNSIGNED,
   P_PISENDLEVEL  TINYINT UNSIGNED,
   P_PITPUDHI     TINYINT UNSIGNED,
   P_PITASKID     INT,
   P_PILONGMSGSEQ TINYINT UNSIGNED,
   P_PIMSGFMT     TINYINT UNSIGNED,
   P_PITOTALCOUNT INT,
   P_SVRTYPE VARCHAR(64),
   P_P1 VARCHAR(64),
   P_P2 VARCHAR(64),
   P_P3 VARCHAR(64),
   P_P4 VARCHAR(64),
   P_USERMSGID BIGINT,
   P_MODULEID INT,
   P_ATTIME BIGINT,
   P_VALIDTIME BIGINT,
   P_SENDTYPE INT,
   P_BATCHID BIGINT,
   P_AREACODE INT,
   P_CUSTID VARCHAR(64),
   P_EXDATA VARCHAR(64),
   P_LONGMSG VARCHAR(4000),
   P_TMPLID BIGINT,
   P_CHGRADE TINYINT,
   P_MSGTYPE TINYINT,
   P_RMSVALIDTM INT,
   P_PROTOCOLVER TINYINT,
   P_TMPLTYPE TINYINT,
   P_TITLE VARCHAR(40),
   P_SHOWAY VARCHAR(16),
   P_DLDWAY INT,
   P_DLDNEY INT,
   P_ISFREE INT,
   P_SHOWTIME BIGINT,
   P_SUID1 VARCHAR(64),
   P_LUID1 VARCHAR(64),
   P_TABLENO INT)
BEGIN
    CASE P_TABLENO
WHEN 0 THEN
  IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL0_QUEUE WHERE PTMSGID=@P_PIPTMSGID) THEN
	   INSERT INTO MT_LEVEL0_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT,
	   PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
	   VALUES(P_PIUID, P_PIUSERID, P_PISPGATE, P_PICPNO, P_PIPHONE, P_PIPTMSGID, P_PIMESSAGE, P_PIRETFLAG, P_PIPKTOTAL, P_PITOTALCOUNT,
	   P_PIPHONECOUNT,P_PIRECVMTTIME, P_PISENDSTATUS, P_PISPLITFLAG, P_PIECID, P_PIFEEFLAG, P_PIDESTUID,P_PILOGINUID,P_PIPKNUMBER,
	   P_PITPUDHI,P_PISENDLEVEL,P_PITASKID,P_PILONGMSGSEQ,P_PIMSGFMT,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
  END IF;
WHEN 1 THEN
  IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL1_QUEUE WHERE PTMSGID=@P_PIPTMSGID) THEN
	   INSERT INTO MT_LEVEL1_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT,
	   PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
	   VALUES(P_PIUID, P_PIUSERID, P_PISPGATE, P_PICPNO, P_PIPHONE, P_PIPTMSGID, P_PIMESSAGE, P_PIRETFLAG, P_PIPKTOTAL, P_PITOTALCOUNT,
	   P_PIPHONECOUNT,P_PIRECVMTTIME, P_PISENDSTATUS, P_PISPLITFLAG, P_PIECID, P_PIFEEFLAG, P_PIDESTUID,P_PILOGINUID,P_PIPKNUMBER,
	   P_PITPUDHI,P_PISENDLEVEL,P_PITASKID,P_PILONGMSGSEQ,P_PIMSGFMT,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
  END IF;
WHEN 2 THEN
  IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL2_QUEUE WHERE PTMSGID=@P_PIPTMSGID) THEN
	   INSERT INTO MT_LEVEL2_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT,
	   PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
	   VALUES(P_PIUID, P_PIUSERID, P_PISPGATE, P_PICPNO, P_PIPHONE, P_PIPTMSGID, P_PIMESSAGE, P_PIRETFLAG, P_PIPKTOTAL, P_PITOTALCOUNT,
	   P_PIPHONECOUNT,P_PIRECVMTTIME, P_PISENDSTATUS, P_PISPLITFLAG, P_PIECID, P_PIFEEFLAG, P_PIDESTUID,P_PILOGINUID,P_PIPKNUMBER,
	   P_PITPUDHI,P_PISENDLEVEL,P_PITASKID,P_PILONGMSGSEQ,P_PIMSGFMT,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
  END IF;
WHEN 3 THEN
  IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL3_QUEUE WHERE PTMSGID=@P_PIPTMSGID) THEN
	   INSERT INTO MT_LEVEL3_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT,
	   PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
	   VALUES(P_PIUID, P_PIUSERID, P_PISPGATE, P_PICPNO, P_PIPHONE, P_PIPTMSGID, P_PIMESSAGE, P_PIRETFLAG, P_PIPKTOTAL, P_PITOTALCOUNT,
	   P_PIPHONECOUNT,P_PIRECVMTTIME, P_PISENDSTATUS, P_PISPLITFLAG, P_PIECID, P_PIFEEFLAG, P_PIDESTUID,P_PILOGINUID,P_PIPKNUMBER,
	   P_PITPUDHI,P_PISENDLEVEL,P_PITASKID,P_PILONGMSGSEQ,P_PIMSGFMT,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
  END IF;
WHEN 4 THEN
  IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL4_QUEUE WHERE PTMSGID=@P_PIPTMSGID) THEN
	   INSERT INTO MT_LEVEL4_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT,
	   PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
	   VALUES(P_PIUID, P_PIUSERID, P_PISPGATE, P_PICPNO, P_PIPHONE, P_PIPTMSGID, P_PIMESSAGE, P_PIRETFLAG, P_PIPKTOTAL, P_PITOTALCOUNT,
	   P_PIPHONECOUNT,P_PIRECVMTTIME, P_PISENDSTATUS, P_PISPLITFLAG, P_PIECID, P_PIFEEFLAG, P_PIDESTUID,P_PILOGINUID,P_PIPKNUMBER,
	   P_PITPUDHI,P_PISENDLEVEL,P_PITASKID,P_PILONGMSGSEQ,P_PIMSGFMT,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
  END IF;
WHEN 5 THEN
  IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL5_QUEUE WHERE PTMSGID=@P_PIPTMSGID) THEN
	   INSERT INTO MT_LEVEL5_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT,
	   PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
	   VALUES(P_PIUID, P_PIUSERID, P_PISPGATE, P_PICPNO, P_PIPHONE, P_PIPTMSGID, P_PIMESSAGE, P_PIRETFLAG, P_PIPKTOTAL, P_PITOTALCOUNT,
	   P_PIPHONECOUNT,P_PIRECVMTTIME, P_PISENDSTATUS, P_PISPLITFLAG, P_PIECID, P_PIFEEFLAG, P_PIDESTUID,P_PILOGINUID,P_PIPKNUMBER,
	   P_PITPUDHI,P_PISENDLEVEL,P_PITASKID,P_PILONGMSGSEQ,P_PIMSGFMT,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
  END IF;
WHEN 6 THEN
  IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL6_QUEUE WHERE PTMSGID=@P_PIPTMSGID) THEN
	   INSERT INTO MT_LEVEL6_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT,
	   PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
	   VALUES(P_PIUID, P_PIUSERID, P_PISPGATE, P_PICPNO, P_PIPHONE, P_PIPTMSGID, P_PIMESSAGE, P_PIRETFLAG, P_PIPKTOTAL, P_PITOTALCOUNT,
	   P_PIPHONECOUNT,P_PIRECVMTTIME, P_PISENDSTATUS, P_PISPLITFLAG, P_PIECID, P_PIFEEFLAG, P_PIDESTUID,P_PILOGINUID,P_PIPKNUMBER,
	   P_PITPUDHI,P_PISENDLEVEL,P_PITASKID,P_PILONGMSGSEQ,P_PIMSGFMT,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
  END IF;
WHEN 7 THEN
  IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL7_QUEUE WHERE PTMSGID=@P_PIPTMSGID) THEN
	   INSERT INTO MT_LEVEL7_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT,
	   PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
	   VALUES(P_PIUID, P_PIUSERID, P_PISPGATE, P_PICPNO, P_PIPHONE, P_PIPTMSGID, P_PIMESSAGE, P_PIRETFLAG, P_PIPKTOTAL, P_PITOTALCOUNT,
	   P_PIPHONECOUNT,P_PIRECVMTTIME, P_PISENDSTATUS, P_PISPLITFLAG, P_PIECID, P_PIFEEFLAG, P_PIDESTUID,P_PILOGINUID,P_PIPKNUMBER,
	   P_PITPUDHI,P_PISENDLEVEL,P_PITASKID,P_PILONGMSGSEQ,P_PIMSGFMT,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
  END IF;
WHEN 8 THEN
  IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL8_QUEUE WHERE PTMSGID=@P_PIPTMSGID) THEN
	   INSERT INTO MT_LEVEL8_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT,
	   PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
	   VALUES(P_PIUID, P_PIUSERID, P_PISPGATE, P_PICPNO, P_PIPHONE, P_PIPTMSGID, P_PIMESSAGE, P_PIRETFLAG, P_PIPKTOTAL, P_PITOTALCOUNT,
	   P_PIPHONECOUNT,P_PIRECVMTTIME, P_PISENDSTATUS, P_PISPLITFLAG, P_PIECID, P_PIFEEFLAG, P_PIDESTUID,P_PILOGINUID,P_PIPKNUMBER,
	   P_PITPUDHI,P_PISENDLEVEL,P_PITASKID,P_PILONGMSGSEQ,P_PIMSGFMT,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
  END IF;
WHEN 9 THEN
  IF NOT EXISTS (SELECT PTMSGID FROM MT_LEVEL9_QUEUE WHERE PTMSGID=@P_PIPTMSGID) THEN
	   INSERT INTO MT_LEVEL9_QUEUE(UID, USERID, SPGATE, CPNO, PHONE, PTMSGID, MESSAGE, RETFLAG, PKTOTAL, TOTALCOUNT,
	   PHONECOUNT, SENDTIME, SENDSTATUS, SPLITFLAG, ECID, FEEFLAG,DESTUID,LOGINUID,PKNUMBER,TPUDHI,SENDLEVEL,TASKID,LONGMSGSEQ,MSGFMT,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA,LONGMSG,TMPLID,CHGRADE,MSGTYPE,RMSVALIDTM,PROTOCOLVER,TMPLTYPE,TITLE,SHOWAY,DLDWAY,DLDNEY,ISFREE,SHOWTIME,SUID1,LUID1)
	   VALUES(P_PIUID, P_PIUSERID, P_PISPGATE, P_PICPNO, P_PIPHONE, P_PIPTMSGID, P_PIMESSAGE, P_PIRETFLAG, P_PIPKTOTAL, P_PITOTALCOUNT,
	   P_PIPHONECOUNT,P_PIRECVMTTIME, P_PISENDSTATUS, P_PISPLITFLAG, P_PIECID, P_PIFEEFLAG, P_PIDESTUID,P_PILOGINUID,P_PIPKNUMBER,
	   P_PITPUDHI,P_PISENDLEVEL,P_PITASKID,P_PILONGMSGSEQ,P_PIMSGFMT,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA,P_LONGMSG,P_TMPLID,P_CHGRADE,P_MSGTYPE,P_RMSVALIDTM,P_PROTOCOLVER,P_TMPLTYPE,P_TITLE,P_SHOWAY,P_DLDWAY,P_DLDNEY,P_ISFREE,P_SHOWTIME,P_SUID1,P_LUID1);
  END IF;
END CASE;

END$
/*DELIMITER ;*/

/*DELIMITER ;*/
DROP PROCEDURE IF EXISTS `GW_WR_MTTASKV1`$
CREATE DEFINER=`root`@`%` PROCEDURE `GW_WR_MTTASKV1`(P_UID INT,	P_PTMSGID BIGINT,
	P_SENDSTATUS TINYINT UNSIGNED,
	P_RETFLAG TINYINT UNSIGNED,
	P_PKTOTAL TINYINT UNSIGNED,
	P_PHONECOUNT INT,
	P_SPLITLEN TINYINT UNSIGNED,
	P_MULTILEN1 TINYINT UNSIGNED,
	P_MULTILEN2 TINYINT UNSIGNED,
	P_SIGNLEN TINYINT UNSIGNED,
	P_ECID INT,
	P_USERID VARCHAR(11), P_SPGATE VARCHAR(21),
	P_CPNO VARCHAR(21),
	P_RECVMTTIME DATETIME,
	P_MESSAGE VARCHAR(3000)  CHARSET 'GBK',
	P_SHOUJI VARCHAR(3500),
	P_FEEFLAG TINYINT UNSIGNED,
	P_SENDLEVEL TINYINT UNSIGNED,
	P_TASKID INT,
	P_ERRORCODE CHAR(7),
	P_TPUDHI TINYINT UNSIGNED,
	P_LONGMSGSEQ TINYINT UNSIGNED,
	P_MSGFMT TINYINT UNSIGNED,
	P_UNICOM TINYINT UNSIGNED,
  P_MOBILEAREA INT UNSIGNED,
  P_PKNUMBER TINYINT UNSIGNED,
  P_SVRTYPE VARCHAR(64),
  P_P1 VARCHAR(64),
  P_P2 VARCHAR(64),
  P_P3 VARCHAR(64),
  P_P4 VARCHAR(64),
  P_USERMSGID BIGINT,
  P_MODULEID INT,
  P_ATTIME BIGINT,
  P_VALIDTIME BIGINT,
  P_SENDTYPE TINYINT UNSIGNED,
  P_BATCHID BIGINT,
  P_AREACODE INT,
  P_CUSTID VARCHAR(64),
  P_EXDATA VARCHAR(64))
  TOP:BEGIN
    DECLARE P_TMPMSGID BIGINT;
	DECLARE P_LOCATION INT;
	DECLARE P_START INT;
	DECLARE P_RESULTPHONE VARCHAR(21); #存储拆分后的字符
	DECLARE P_STRSPLIT VARCHAR(2);
	DECLARE P_LEN INT;
	DECLARE P_RESULTMSG VARCHAR(3000); #存储拆分后的字符
	DECLARE P_PKNUM INT;
	DECLARE P_TMPNUM INT;

    CREATE TEMPORARY TABLE IF NOT EXISTS P_TMP_WRMTTASK(UID INT,USERID VARCHAR(11),SPGATE VARCHAR(21),CPNO VARCHAR(21),
						PHONE VARCHAR(21),PTMSGID BIGINT,MESSAGE VARCHAR(3000),
						SENDSTATUS TINYINT,RETFLAG TINYINT,PKNUMBER TINYINT,
						PKTOTAL TINYINT,RECVMTTIME DATETIME,ECID INT,FEEFLAG TINYINT,
						SENDLEVEL TINYINT,TASKID INT,ERRORCODE CHAR(7),TPUDHI TINYINT,
						LONGMSGSEQ TINYINT,MSGFMT TINYINT,UNICOM TINYINT,MOBILEAREA INT,
						SVRTYPE VARCHAR(64),P1 VARCHAR(64),P2 VARCHAR(64),P3 VARCHAR(64),
						P4 VARCHAR(64),USERMSGID BIGINT,MODULEID INT,ATTIME BIGINT,VALIDTIME BIGINT,SENDTYPE INT,AREACODE INT,CUSTID VARCHAR(64),EXDATA VARCHAR(64));

	TRUNCATE TABLE P_TMP_WRMTTASK;

    SET P_LEN = CHAR_LENGTH(P_MESSAGE)-P_SIGNLEN;
	SET P_TMPNUM = 0;
	SET P_PKNUM = 1;
	SET P_STRSPLIT = ',';

    IF @P_PHONECOUNT < 1 THEN #手机个数为0
		LEAVE TOP;
    END IF;

	IF @P_MSGFMT=4 OR @P_MSGFMT=248 OR @P_MSGFMT=246 THEN
		SET P_SPLITLEN=140;
		SET P_MULTILEN1=134;
		SET P_MULTILEN2=134;
		SET P_SIGNLEN=0;
	END IF;

	IF @P_MSGFMT=25 THEN
		IF NOT EXISTS (SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID=@P_PTMSGID) THEN
		   INSERT INTO GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
		   RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA)
		   VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_PTMSGID,P_MESSAGE,P_SENDSTATUS,P_RETFLAG, P_PKNUMBER,P_PKTOTAL,
		   P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM, P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA);
        END IF;
	END IF;

	IF P_PHONECOUNT = 1 THEN #单发
        IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = @P_PTMSGID) THEN
            IF @P_PKTOTAL = 1 THEN
        		INSERT GW_MT_TASK_BAK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
        		RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,
        		P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA)
        		VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_PTMSGID,P_MESSAGE,P_SENDSTATUS,
        		P_RETFLAG,P_PKTOTAL,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,
        		P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA);
            ELSE
        		SET P_PKNUM = 1;
        		SET P_TMPMSGID = P_PTMSGID;
                IF @P_PKTOTAL = 2 AND P_LEN <= @P_MULTILEN1 THEN
    				SET P_RESULTMSG = SUBSTRING(P_MESSAGE,1,P_SPLITLEN);#拆分后的字符
    				SET P_TMPMSGID = P_TMPMSGID;
    				IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = @P_PTMSGID) THEN
        				INSERT P_TMP_WRMTTASK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,
        				RETFLAG,PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
        				VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,
        				P_RETFLAG,P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA);
    				END IF;

    				SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_SPLITLEN+1,P_LEN-P_SPLITLEN+P_SIGNLEN);#拆分后的字符
    				SET P_TMPMSGID = P_TMPMSGID+17179869184;
    				SET P_PKNUM = P_PKNUM+1;
    				IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = @P_PTMSGID) THEN
        				INSERT P_TMP_WRMTTASK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
        				PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
        				VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
        				P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA);
                    END IF;
                ELSE
                    WHILE P_PKNUM <= @P_PKTOTAL DO
						IF P_PKNUM = @P_PKTOTAL THEN
							SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_TMPNUM+1,P_MULTILEN2+P_SIGNLEN);#拆分后的字符
							SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
							#PRINT P_RESULTMSG
						ELSEIF P_PKNUM = P_PKTOTAL-1 THEN
							IF P_LEN-(P_PKNUM-1)*@P_MULTILEN1 > @P_MULTILEN2 AND P_LEN-(P_PKNUM-1)*@P_MULTILEN1 <= @P_MULTILEN1 THEN
								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_LEN-(P_PKNUM-1)*P_MULTILEN1-1);
								SET P_TMPNUM = P_LEN-1;
							ELSE
								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);
								SET P_TMPNUM = (P_PKNUM-1)*P_MULTILEN1+P_MULTILEN1;
						    END IF;

							SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
						ELSE
							SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);#拆分后的字符
							#PRINT P_RESULTMSG
							SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
						END IF;

						IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    						INSERT P_TMP_WRMTTASK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    						PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
    						VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_SHOUJI,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    						P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA);
                        END IF;

						SET P_PKNUM = P_PKNUM+1;

                    END WHILE;
                END IF;
            		INSERT INTO GW_MT_TASK_BAK (UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
            		PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA)
            		SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,
            		A.PKNUMBER,A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME,A.SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA FROM P_TMP_WRMTTASK A;
                END IF;

		END IF;
	ELSE #群发
		SET P_SHOUJI = CONCAT(P_STRSPLIT , P_SHOUJI , P_STRSPLIT);
		SET P_LOCATION = LOCATE(P_STRSPLIT,P_SHOUJI);

		IF @P_PKTOTAL < 1 THEN #没有短信内容
			LEAVE TOP;
        END IF;

		IF @P_PKTOTAL >= 1 THEN #需要拆分长短信
			WHILE P_LOCATION <> 0 DO #拆分手机号码
				SET P_START = P_LOCATION;
				SET P_LOCATION = LOCATE(P_STRSPLIT,P_SHOUJI,P_START+1);
				IF P_LOCATION > 0 THEN
					SET P_RESULTPHONE = SUBSTRING(P_SHOUJI,P_START+1,P_LOCATION-P_START-1);#拆分后的字符
					#PRINT P_RESULTPHONE
					#IF P_RESULTPHONE <> ''
					SET P_TMPMSGID = P_PTMSGID;
					IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
						IF @P_PKTOTAL = 1 THEN
							INSERT P_TMP_WRMTTASK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
							PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
							VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_MESSAGE,P_SENDSTATUS,P_RETFLAG,
							P_PKTOTAL,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA);
						ELSE
							SET P_PKNUM = 1;
							#SET P_TOTALSPLITNUM = P_PKTOTAL-1
							IF @P_PKTOTAL = 2 AND P_LEN <= @P_MULTILEN1 THEN
								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,1,P_SPLITLEN);#拆分后的字符
								SET P_TMPMSGID = P_TMPMSGID;
								IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    								INSERT P_TMP_WRMTTASK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    								PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
    								VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    								P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA);
                                END IF;

								SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_SPLITLEN+1,P_LEN-P_SPLITLEN+P_SIGNLEN);#拆分后的字符
								SET P_TMPMSGID = P_TMPMSGID+17179869184;
								SET P_PKNUM = P_PKNUM+1;
								IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    								INSERT P_TMP_WRMTTASK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    								PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
    								VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    								P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA);
								END IF;
                             ELSE
								WHILE P_PKNUM <= @P_PKTOTAL DO
									IF P_PKNUM = @P_PKTOTAL THEN
										SET P_RESULTMSG = SUBSTRING(P_MESSAGE,P_TMPNUM+1,P_MULTILEN2+P_SIGNLEN);#拆分后的字符
										SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
									ELSEIF P_PKNUM = P_PKTOTAL-1 THEN
										IF P_LEN-(P_PKNUM-1)*@P_MULTILEN1 > @P_MULTILEN2 AND P_LEN-(P_PKNUM-1)*@P_MULTILEN1 <= @P_MULTILEN1 THEN
											SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_LEN-(P_PKNUM-1)*P_MULTILEN1-1);
											SET P_TMPNUM = P_LEN-1;
										ELSE
											SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);
											SET P_TMPNUM = (P_PKNUM-1)*P_MULTILEN1+P_MULTILEN1;
										END IF;
										SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
									ELSE
										SET P_RESULTMSG = SUBSTRING(P_MESSAGE,(P_PKNUM-1)*P_MULTILEN1+1,P_MULTILEN1);#拆分后的字符
										#PRINT P_RESULTMSG
										SET P_TMPMSGID = P_PTMSGID+(P_PKNUM-1)*17179869184;
									END IF;
									IF NOT EXISTS(SELECT PTMSGID FROM GW_MT_TASK_BAK WHERE PTMSGID = P_TMPMSGID) THEN
    									INSERT P_TMP_WRMTTASK(UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
    									PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,AREACODE,CUSTID,EXDATA)
    									VALUES(P_UID,P_USERID,P_SPGATE,P_CPNO,P_RESULTPHONE,P_TMPMSGID,P_RESULTMSG,P_SENDSTATUS,P_RETFLAG,
    									P_PKNUM,P_PKTOTAL,P_RECVMTTIME,P_ECID,P_FEEFLAG,P_SENDLEVEL,P_TASKID,P_ERRORCODE,P_TPUDHI,P_LONGMSGSEQ,P_MSGFMT,P_UNICOM,P_MOBILEAREA,P_SVRTYPE,P_P1,P_P2,P_P3,P_P4,P_USERMSGID,P_MODULEID,P_ATTIME,P_VALIDTIME,P_SENDTYPE,P_AREACODE,P_CUSTID,P_EXDATA);
									END IF;
                                    SET P_PKNUM = P_PKNUM+1;
								END WHILE;
                             END IF; #END OF @P_PKTOTAL = 2
						  END IF; # END OF @P_PKTOTAL = 1
					   END	IF;	#NOT EXISTS(SELECT
					   SET P_PTMSGID = P_PTMSGID+1;
                   END IF;
				END WHILE;
			END IF;

			INSERT INTO GW_MT_TASK_BAK (UID,USERID,SPGATE,CPNO,PHONE,PTMSGID,MESSAGE,SENDSTATUS,RETFLAG,
			PKNUMBER,PKTOTAL,RECVMTTIME,ECID,FEEFLAG,SENDLEVEL,TASKID,ERRORCODE,TPUDHI,LONGMSGSEQ,MSGFMT,UNICOM,MOBILEAREA,SVRTYPE,P1,P2,P3,P4,USERMSGID,MODULEID,ATTIME,VALIDTIME,SENDTYPE,BATCHID,AREACODE,CUSTID,EXDATA)
			SELECT A.UID,A.USERID,A.SPGATE,A.CPNO,A.PHONE,A.PTMSGID,A.MESSAGE,A.SENDSTATUS,A.RETFLAG,
			A.PKNUMBER,A.PKTOTAL,A.RECVMTTIME,A.ECID,A.FEEFLAG,A.SENDLEVEL,A.TASKID,A.ERRORCODE,A.TPUDHI,A.LONGMSGSEQ,A.MSGFMT,A.UNICOM,A.MOBILEAREA,A.SVRTYPE,A.P1,A.P2,A.P3,A.P4,A.USERMSGID,A.MODULEID,A.ATTIME,A.VALIDTIME,A.SENDTYPE,P_BATCHID,P_AREACODE,P_CUSTID,P_EXDATA FROM P_TMP_WRMTTASK A;
	  END IF;
END$
/*DELIMITER ;*/

/*DELIMITER ;*/
DROP PROCEDURE  IF EXISTS GW_LOAD_ECERRCODEBIND$
CREATE DEFINER=`root`@`%` PROCEDURE GW_LOAD_ECERRCODEBIND()
BEGIN
    SELECT CORP_CODE,STATE_CODE,MAPPING_CODE,STATE_DES FROM LF_STATECODE;
END$
/*DELIMITER ;*/

CALL S_WR_VERINFO('4.06.07')$


/** 升级脚本(V4.06.06-V4.06.07) END*/
/* 网关升级脚本END */


/*EMP升级脚本    START*/
/* V6.21-V6.22 START */
-- 创建短链接发送任务表
CREATE TABLE IF NOT EXISTS LF_URLTASK(
	ID INT(11) NOT NULL PRIMARY KEY AUTO_INCREMENT,    -- 主键ID
	TASKID BIGINT DEFAULT 0 NOT NULL,    -- 任务批次号
	SPUSER VARCHAR(11) DEFAULT ' ' NOT NULL, -- SP账号
	CORP_CODE VARCHAR(64) DEFAULT ' ' NOT NULL,    -- 企业编码
	TITLE VARCHAR(64) DEFAULT ' ' NOT NULL,    -- 发送主题
	MSG VARCHAR(2048) NOT NULL,    -- 短信内容
	UTYPE TINYINT NOT NULL,    -- 1.相同内容短链接发送 2.不同内容短链接发送
	PLAN_TIME DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
	SUBMIT_TM DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00', -- 提交时间
	SEND_TM DATETIME NOT NULL,    -- 发送时间
	HANDLE_NODE VARCHAR(50) DEFAULT ' ' NOT NULL,
	HANDLE_LINE BIGINT DEFAULT 0 NOT NULL,
	SUB_COUNT BIGINT NOT NULL,    -- 提交个数
	SRC_FILE VARCHAR(1024) NOT NULL,    -- 源文件地址
	URL_FILE VARCHAR(1024) NOT NULL,    -- 包含短地址内容文件地址
	STATUS DECIMAL(5) NOT NULL,    -- 状态  无定时     10：未处理   11：处理中   12：处理完成   13 : 处理失败  定时发送   20 ：未处理  21：处理中   22：处理完成   23 : 处理失败
	CREATE_UID DECIMAL(20) NOT NULL,    -- 创建人员ID
	CREATE_TM DATETIME NOT NULL,    -- 创建时间
	UPDATE_UID DECIMAL(20) NOT NULL,    -- 修改人员ID
	UPDATE_TM DATETIME NOT NULL,    -- 修改时间
	NETURL VARCHAR(1024) DEFAULT '',    -- 企业长地址
	NETURL_ID BIGINT NOT NULL,    -- 企业长地址ID
	DOMAIN_ID BIGINT NOT NULL,
	DOMAIN_URL VARCHAR(256) NOT NULL,    -- 短地址ID
	DOMAIN_EXTEN INT,    -- 短地址扩展部分长度
	DOMAIN_LEN DECIMAL(20) NOT NULL,    -- 短地址总长度
	VALID_DAYS DECIMAL(5) NOT NULL,    -- 有效期
	REMARK VARCHAR(256) DEFAULT '' NOT NULL,    -- 扩展信息
	REMARK1 VARCHAR(256) NOT NULL,    -- 扩展信息2
	INDEX `IX_LF_URLTASK_TASK` (`TASKID`) -- 索引
)ENGINE=INNODB DEFAULT CHARSET=UTF8$

/*DELIMITER ;*/
DROP TRIGGER IF EXISTS `TIG_TIME_LF_URLTASK`$
/*DELIMITER ;*/
CREATE TRIGGER `TIG_TIME_LF_URLTASK` BEFORE INSERT ON `LF_URLTASK` FOR EACH ROW BEGIN
SET @P_CURTIME = NOW();
IF DATE_FORMAT(NEW.PLAN_TIME, '%Y-%m-%d') = '0000-00-00' THEN
    SET NEW.PLAN_TIME = @P_CURTIME;
END IF;
IF DATE_FORMAT(NEW.SUBMIT_TM, '%Y-%m-%d') = '0000-00-00' THEN
    SET NEW.SUBMIT_TM = @P_CURTIME;
END IF;
END$
/*DELIMITER ;*/



-- 创建连接地址维护表
CREATE TABLE IF NOT EXISTS LF_NETURL (
		ID INT(11) NOT NULL PRIMARY KEY AUTO_INCREMENT,    -- 主键ID
		SRC_URL VARCHAR(1024) DEFAULT '',    -- 源地址
		URL_NAME VARCHAR(200) DEFAULT '' NOT NULL,    -- 连接名称
		URL_MSG VARCHAR(1024) DEFAULT '' NOT NULL,    -- 源地址内容描述
		CORP_CODE VARCHAR(64) DEFAULT 0 NOT NULL,    -- 企业编码
		ISPASS INT DEFAULT 0 NOT NULL,    -- 审批状态   -3 禁用（未调接口）, -2 禁用  -1:删除   0：未审批, 1：无需审批 ,2：审批通过 （运营商侧）
		URLSTATE INT DEFAULT 0 NOT NULL,    -- 长地址状态企业内部维护使用   -2禁用（未调接口）， -1：禁用 0：启用 （用户侧）
		CREATE_UID BIGINT NOT NULL,    -- 创建人
		CREATE_TM DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',    -- 创建时间
		UPDATE_UID BIGINT NOT NULL,  -- 修改人员ID （用户侧）
		UPDATE_TM DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',    -- 修改时间 （用户侧）
		AUDIT_UID BIGINT ,-- 审核人
		AUDIT_TM DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',-- 审核时间
		STOP_UID BIGINT , -- 禁用人员ID （运营商测）
		STOP_TM DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',-- 禁用时间
		REMARKS VARCHAR(256) DEFAULT '' NOT NULL,    -- 审核意见
		REMARKS1 VARCHAR(256) DEFAULT '' NOT NULL,-- 预留字段1
		REMARKS2 VARCHAR(256) DEFAULT '' NOT NULL, -- 预留字段2
		INDEX `IX_LF_NETURL_URLNAME` (`URL_NAME`), -- 索引
		INDEX `IX_LF_NETURL_CORPCODE` (`CORP_CODE`) -- 索引
)ENGINE=INNODB DEFAULT CHARSET=UTF8$

/*DELIMITER ;*/
DROP TRIGGER IF EXISTS `TIG_TIME_LF_NETURL`$
/*DELIMITER ;*/
CREATE TRIGGER `TIG_TIME_LF_NETURL` BEFORE INSERT ON `LF_NETURL` FOR EACH ROW BEGIN
SET @P_CURTIME = NOW();
IF DATE_FORMAT(NEW.CREATE_TM, '%Y-%m-%d') = '0000-00-00' THEN
    SET NEW.CREATE_TM = @P_CURTIME;
END IF;
IF DATE_FORMAT(NEW.UPDATE_TM, '%Y-%m-%d') = '0000-00-00' THEN
    SET NEW.UPDATE_TM = @P_CURTIME;
END IF;
IF DATE_FORMAT(NEW.AUDIT_TM, '%Y-%m-%d') = '0000-00-00' THEN
    SET NEW.AUDIT_TM = @P_CURTIME;
END IF;
IF DATE_FORMAT(NEW.STOP_TM, '%Y-%m-%d') = '0000-00-00' THEN
    SET NEW.STOP_TM = @P_CURTIME;
END IF;
END$
/*DELIMITER ;*/


-- 创建短域名信息表
CREATE TABLE IF NOT EXISTS LF_DOMAIN (
		ID BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,    -- 短域名id
		DOMAIN VARCHAR(256) DEFAULT '' NOT NULL,    -- 短域名
		LEN_ALL INT NOT NULL,    -- 总长度
		LEN_EXTEN BIGINT DEFAULT 0 NOT NULL,    -- 全局扩展位数
		DTYPE INT DEFAULT 0,    -- 域名类别  0 公用  1专用
		FLAG INT DEFAULT 0 NOT NULL,    -- 域名状态  0  有效    -1 无效
		VALID_DAYS BIGINT DEFAULT 30 NOT NULL,    -- 有效时间，单位天 , 30  ,值不能为0
		CREATE_UID BIGINT NOT NULL,    -- 创建人员
		CREATE_TM DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',    -- 创建时间
		UPDATE_UID BIGINT NOT NULL,    -- 最后修改人员ID
		UPDATE_TM DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',    -- 最后修改时间
		REMARK VARCHAR(256) NOT NULL,
		CREATE_USER VARCHAR(64) NOT NULL DEFAULT ''	-- 创建用户
)ENGINE=INNODB DEFAULT CHARSET=UTF8$


/*DELIMITER ;*/
DROP TRIGGER IF EXISTS `TIG_TIME_LF_DOMAIN`$
/*DELIMITER ;*/
CREATE TRIGGER `TIG_TIME_LF_DOMAIN` BEFORE INSERT ON `LF_DOMAIN` FOR EACH ROW BEGIN
SET @P_CURTIME = NOW();
IF DATE_FORMAT(NEW.CREATE_TM, '%Y-%m-%d') = '0000-00-00' THEN
    SET NEW.CREATE_TM = @P_CURTIME;
END IF;
IF DATE_FORMAT(NEW.UPDATE_TM, '%Y-%m-%d') = '0000-00-00' THEN
    SET NEW.UPDATE_TM = @P_CURTIME;
END IF;
END$
/*DELIMITER ;*/


-- 创建企业域名映射表
CREATE TABLE IF NOT EXISTS LF_DOMAIN_CORP (
		CORP_CODE VARCHAR(64) NOT NULL,   -- 企业编码
		DOMAIN_ID BIGINT NOT NULL,    -- 域名ID
		CREATE_UID BIGINT DEFAULT 0 NOT NULL,	-- 创建人
		CREATE_TM DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',    -- 创建时间
		UPDATE_UID BIGINT DEFAULT 0 NOT NULL,	-- 修改人
		UPDATE_TM DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',    -- 修改时间
		FLAG INT DEFAULT 0 NOT NULL,	-- 状态 0表示启用,1表示禁用
		CREATE_USER VARCHAR(64) DEFAULT '' NOT NULL -- 创建用户
)ENGINE=INNODB DEFAULT CHARSET=UTF8$


UPDATE LF_THIR_MENUCONTROL SET TID = 106 WHERE TID = 103 AND TITLE = '企业富信';
INSERT INTO LF_THIR_MENUCONTROL(TID, MENU_NUM, TITLE, PRI_MENU, PRI_ORDER, ZH_TW_TITLE, ZH_HK_TITLE)
SELECT 103, 26, '企业短链', 96, 395, '企業短鏈', 'Short URL' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_THIR_MENUCONTROL WHERE TID = 103)$


INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3500, 96, 1, '模板内容', '5500-1000-0', '相同内容发送', '短链应用', '5500-1000', '/url_urlSendBatchSMS.htm', '模板内容', 'View', '相同內容發送', 'Same SMS', '短鏈應用', 'Short URL' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3500)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3501, 96, null, '模板内容', '5500-1000-4', '相同内容发送', '短链应用', '5500-1000', null, '模板内容', 'View', '相同內容發送', 'Same SMS', '短鏈應用', 'Short URL' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3501)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3502, 96, null, '手动输入内容', '5500-1000-5', '相同内容发送', '短链应用', '5500-1000', null, '手动输入内容', 'View', '相同內容發送', 'Same SMS', '短鏈應用', 'Short URL' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3502)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3503, 96, null, '手动输入号码', '5500-1000-6', '相同内容发送', '短链应用', '5500-1000', null, '手动输入号码', 'View', '相同內容發送', 'Same SMS', '短鏈應用', 'Short URL' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3503)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3504, 96, null, '文件导入', '5500-1000-7', '相同内容发送', '短链应用', '5500-1000', null, '文件导入', 'View', '相同內容發送', 'Same SMS', '短鏈應用', 'Short URL' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3504)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3505, 96, null, '选择人员', '5500-1000-8', '相同内容发送', '短链应用', '5500-1000', null, '选择人员', 'View', '相同內容發送', 'Same SMS', '短鏈應用', 'Short URL' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3505)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3506, 96, 1, '查看', '5500-1100-0', '不同内容发送', '短链应用', '5500-1100', '/url_urlSendDiffSMS.htm', '查看', 'View', '不同內容發送', 'Different SMS', '短鏈應用', 'Short URL' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3506)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3507, 96, null, '模板内容', '5500-1100-4', '不同内容发送', '短链应用', '5500-1100', null, '模板内容', 'View', '不同內容發送', 'Different SMS', '短鏈應用', 'Short URL' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3507)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3508, 96, null, '手动输入内容', '5500-1100-5', '不同内容发送', '短链应用', '5500-1100', null, '手动输入内容', 'View', '不同內容發送', 'Different SMS', '短鏈應用', 'Short URL' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3508)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3509, 96, 1, '查看', '5500-1200-0', '长链接报备', '短链应用', '5500-1200', '/keep_record.htm', '查看', 'View', '長鏈接報備', 'Bei an', '短鏈應用', 'Short URL' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3509)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3510, 96, null, '新增', '5500-1200-1', '长链接报备', '短链应用', '5500-1200', null, '新增', 'Add', '長鏈接報備', 'Bei an', '短鏈應用', 'Short URL' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3510)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3511, 96, 1, '查看', '5600-1000-0', '群发任务查看', '数据查询', '5600-1000', '/surlTaskRecord.htm', '查看', 'View', '群發任務查看', 'Task Record', '数据查询', 'Data' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3511)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3512, 96, 1, '查看', '5600-1100-0', '批次发送统计', '数据查询', '5600-1100', '/surlBatchRecord.htm', '查看', 'View', '批次發送統計', 'Batch Record', '数据查询', 'Data' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3512)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3513, 96, 1, '查看', '5600-1200-0', '发送明细详情', '数据查询', '5600-1200', '/surlSendDetail.htm', '查看', 'View', '發送明細詳情', 'Batch Record', '数据查询', 'Data' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3513)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3514, 96, 1, '查看', '5600-1300-0', '批次访问统计', '数据查询', '5600-1300', '/surlBatchVisit.htm', '查看', 'View', '批次訪問統計', 'Batch Visit', '数据查询', 'Data' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3514)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3515, 96, 1, '查看', '5600-1400-0', '链接访问统计', '数据查询', '5600-1400', '/surlLinkVisit.htm', '查看', 'View', '鏈接訪問統計', 'Link Visit', '数据查询', 'Data' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3515)$
/*
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3516, 96, 1, '查看', '5600-1500-0', '区域访问统计', '数据查询', '5600-1500', '/surlZoneVisit.htm', '查看', 'View', '区域访问统计', 'Zone Visit', '数据查询', 'Data' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3516);

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3517, 96, 1, '查看', '5600-1600-0', '时段访问统计', '数据查询', '5600-1600', '/surlPeriodVisit.htm', '查看', 'View', '时段访问统计', 'Period Visit', '数据查询', 'Data' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3517);
*/
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3518, 96, 1, '查看', '5600-1700-0', '访问明细详情', '数据查询', '5600-1700', '/surlVisitDetail.htm', '查看', 'View', '訪問明細詳情', 'Visit Detail', '数据查询', 'Data' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3518)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3519, 96, 1, '查看', '5700-1000-0', '短域名管理', '短域名管理', '5700-1000', '/surl_manage.htm', '查看', 'View', '短域名管理', 'Visit Detail', '短域名管理', 'Data' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3519)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3520, 96, null, '新建', '5700-1000-1', '短域名管理', '短域名管理', '5700-1000', null, '新建', 'Add', '短域名管理', 'Same SMS', '短域名管理', 'Management' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3520)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3521, 96, null, '修改', '5700-1000-3', '短域名管理', '短域名管理', '5700-1000', null, '修改', 'Edit', '短域名管理', 'Same SMS', '短域名管理', 'Management' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3521)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3522, 96, 1, '查看', '5800-1000-0', '链接地址审核', '长链内容审核', '5800-1000', '/surl_audit.htm', '查看', 'View', '鏈接地址審核', 'Visit Detail', '长链内容审核', 'Data' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3522)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3523, 96, 1, '查看', '5700-1200-0', '短链域名绑定', '短域名管理', '5700-1200', '/surl_bind.htm', '查看', 'View', '短鏈域名綁定', 'Visit Detail', '短域名管理', 'Data' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3523)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3524, 96, null, '新建', '5700-1200-1', '短链域名绑定', '短域名管理', '5700-1200', null, '新建', 'Add', '短鏈域名綁定', 'Same SMS', '短域名管理', 'Management' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3524)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3525, 96, null, '修改', '5700-1200-3', '短链域名绑定', '短域名管理', '5700-1200', null, '修改', 'Edit', '短鏈域名綁定', 'Same SMS', '短域名管理', 'Management' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3525)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3526, 96, 1, '查看', '5600-1050-0', '群发任务查看', '数据查询', '5600-1050', '/surl_surlSendedBox.htm', '查看', 'View', '群發任務查看', 'Task Record', '数据查询', 'Data' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3526)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3500 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3500)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3500 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3500)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3500 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3500)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3501 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3501)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3501 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3501)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3501 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3501)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3502 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3502)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3502 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3502)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3502 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3502)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3503 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3503)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3503 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3503)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3503 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3503)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3504 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3504)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3504 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3504)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3504 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3504)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3505 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3505)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3505 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3505)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3505 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3505)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3506 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3506)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3506 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3506)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3506 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3506)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3507 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3507)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3507 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3507)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3507 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3507)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3508 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3508)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3508 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3508)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3508 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3508)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3509 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3509)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3509 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3509)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3509 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3509)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3510 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3510)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3510 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3510)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3510 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3510)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3511 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3511)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3511 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3511)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3511 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3511)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3512 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3512)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3512 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3512)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3512 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3512)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3513 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3513)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3513 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3513)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3513 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3513)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3514 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3514)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3514 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3514)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3514 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3514)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3515 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3515)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3515 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3515)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3515 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3515)$

/*
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3516 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3516);
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3516 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3516);
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3516 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3516);

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3517 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3517);
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3517 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3517);
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3517 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3517);
*/

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3518 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3518)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3518 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3518)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3518 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3518)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3519 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3519)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3519 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3519)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3519 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3519)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3520 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3520)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3520 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3520)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3520 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3520)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3521 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3521)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3521 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3521)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3521 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3521)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3522 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3522)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3522 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3522)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3522 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3522)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3523 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3523)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3523 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3523)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3523 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3523)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3524 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3524)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3524 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3524)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3524 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3524)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3525 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3525)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3525 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3525)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3525 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3525)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1, 3526 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3526)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2, 3526 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3526)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3, 3526 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 3 AND PRIVILEGE_ID = 3526)$

/**
根据年月创建访问详单历史年月表
*/
/*DELIMITER ;*/
DROP PROCEDURE IF EXISTS `CREATEVST_DETAIL`$
CREATE DEFINER=`root`@`%` PROCEDURE `CREATEVST_DETAIL`(PIYM INT)
BEGIN
DECLARE STR VARCHAR(4000);
DECLARE TABLENAME VARCHAR(16);

SET TABLENAME=CONCAT('VST_DETAIL',PIYM);
SET STR=CONCAT('CREATE TABLE `',TABLENAME,
'` (
  `ID` BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  `PTMSGID` BIGINT NOT NULL DEFAULT ''0'',
  `VSTMSGID` BIGINT NOT NULL DEFAULT ''0'',
  `USERID` VARCHAR(11) NOT NULL DEFAULT '''',
  `ECID` INT NOT NULL DEFAULT ''0'',
  `PHONE` VARCHAR(22) NOT NULL DEFAULT ''ERRPHONE'',
  `MOBILEAREA` INT NOT NULL DEFAULT ''0'',
  `CTTM` DATETIME NOT NULL DEFAULT ''0000-00-00 00:00:00'',
  `VSTTM` DATETIME NOT NULL DEFAULT ''0000-00-00 00:00:00'',
  `PTCODE` VARCHAR(11) NOT NULL DEFAULT '''',
  `WGNO` INT NOT NULL DEFAULT ''0'',
  `SRCADDRESS` VARCHAR(64) NOT NULL DEFAULT '''',
  `XWAPPROF` VARCHAR(512) NOT NULL DEFAULT '''',
  `XBROTYPE` VARCHAR(512) NOT NULL DEFAULT '''',
  `DRS` VARCHAR(64) NOT NULL DEFAULT '''',
  `TIMES` INT NOT NULL DEFAULT ''0'',
  `CUSTID` VARCHAR(64) NOT NULL DEFAULT '''',
  `SURL` VARCHAR(64) NOT NULL DEFAULT '''',
  `LURL` VARCHAR(2048) NOT NULL DEFAULT '''',
  `HTTPHEADER` VARCHAR(4096) NOT NULL DEFAULT '''',
  `EXDATA` VARCHAR(2048) NOT NULL DEFAULT '''',
  `SRCPT` VARCHAR(10) NOT NULL DEFAULT '''',
  `SID` BIGINT NOT NULL DEFAULT ''0'',
  INDEX `IX_',TABLENAME,'_CUSTID` (`CUSTID`),
  INDEX `IX_',TABLENAME,'_PHONE` (`PHONE`)
) ENGINE=INNODB DEFAULT CHARSET=GBK;');

SET @SQL=STR;
PREPARE SL FROM @SQL;
EXECUTE SL;
DEALLOCATE PREPARE SL;

END$
/*DELIMITER ;*/

/**
创建三年访问详单历史年月表
*/
/*DELIMITER ;*/
DROP PROCEDURE IF EXISTS `VST_DETAIL_HISTAB`$
CREATE DEFINER=`root`@`%` PROCEDURE `VST_DETAIL_HISTAB`()
BEGIN
    DECLARE PINUM  INT;
    DECLARE PICURNUM INT;
    DECLARE PIYM INT;
    DECLARE PITABLENAME VARCHAR(20);

    SET PINUM=36;
    SET PICURNUM=0;

  WHILE PICURNUM<PINUM DO
    SET PIYM= PERIOD_ADD(DATE_FORMAT(NOW(),'%Y%m'),PICURNUM);
	SET PITABLENAME=CONCAT('VST_DETAIL',PIYM);
	IF NOT EXISTS (SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME=PITABLENAME) THEN
	  CALL   CREATEVST_DETAIL(PIYM);
	END IF;
	SET PICURNUM=PICURNUM+1;
  END WHILE;

END$
/*DELIMITER ;*/


/**
创建三年访问详单历史年月表
*/
CALL `VST_DETAIL_HISTAB`()$


UPDATE LF_PRIVILEGE SET MODNAME = '短域名管理' ,ZH_TW_MODNAME = '短域名管理' WHERE PRIVILEGE_ID IN (3519,3520,3521,3523,3524,3525)$
UPDATE LF_PRIVILEGE SET MODNAME = '长链内容审核' ,ZH_TW_MODNAME = '长链内容审核',PRIV_CODE = '5800-1000-0', MENUCODE = '5800-1000' WHERE PRIVILEGE_ID = 3522$
UPDATE LF_PRIVILEGE SET MENUNAME = '短链生成状态',ZH_TW_MENUNAME='短链生成状态' WHERE PRIVILEGE_ID = 3511$

/* V6.21-V6.22 END */
/* V7.00-V71.02 END */
-- 71.00 - 71.01
-- LF_TEMP_PARAM表增加字段HASLENGTH
DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'LF_TEMP_PARAM' AND COLUMN_NAME ='HASLENGTH' AND DATA_TYPE = 'int' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = 0) THEN
  CALL COLUMNADD('LF_TEMP_PARAM','HASLENGTH','INT DEFAULT 0 NOT NULL');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

-- 更新菜单多语言
UPDATE LF_PRIVILEGE SET ZH_HK_COMMENTS='Template content' WHERE PRIVILEGE_ID IN (3300, 3302)$
UPDATE LF_PRIVILEGE SET ZH_TW_COMMENTS='手動輸入內容',ZH_HK_COMMENTS='Manual input content' WHERE PRIVILEGE_ID IN (3301, 3303)$
UPDATE LF_PRIVILEGE SET ZH_TW_COMMENTS='手動輸入號碼',ZH_HK_COMMENTS='Manual input phone' WHERE PRIVILEGE_ID = 3304$
UPDATE LF_PRIVILEGE SET ZH_TW_COMMENTS='文件導入',ZH_HK_COMMENTS='Import file' WHERE PRIVILEGE_ID = 3305$
UPDATE LF_PRIVILEGE SET ZH_TW_COMMENTS='選擇人員',ZH_HK_COMMENTS='Choose staff' WHERE PRIVILEGE_ID = 3306$
UPDATE LF_PRIVILEGE SET MENUNAME ='我的场景' ,ZH_TW_COMMENTS = '新建' WHERE PRIVILEGE_ID = '633'$
UPDATE LF_PRIVILEGE SET MENUNAME ='我的场景' ,ZH_TW_COMMENTS = '查看' WHERE PRIVILEGE_ID = '634'$
UPDATE LF_PRIVILEGE SET MENUNAME ='我的场景' ,ZH_TW_COMMENTS = '删除' WHERE PRIVILEGE_ID = '635'$
UPDATE LF_PRIVILEGE SET ZH_HK_MENUNAME = 'Same RMS' WHERE ZH_HK_MENUNAME = 'Same SMS'$
UPDATE LF_PRIVILEGE SET ZH_TW_MENUNAME = '我的場景' WHERE MENUNAME = '我的场景'$

-- 71.01 - 71.02
/*企业富信-批量导入模板发送*/
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT '3553', '95', '1', '查看', '5100-1850-0', '批量导入模板发送', '数据查询', '5100-1850', '/importTemplateDetails.htm', '查看', 'View', '批量導入模板發送', 'Import Temp And Send', '數據查詢', 'Data query' FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=3553)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2,3553 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=3553 AND ROLE_ID=2)$

-- 创建模板导入批次表
CREATE TABLE IF NOT EXISTS `LF_TEMP_IMPORT_BATCH`  (
  `ID` BIGINT(20) NOT NULL AUTO_INCREMENT,
	`BATCH` INT(11) NOT NULL DEFAULT 0,
  `CORP_CODE` VARCHAR(64) CHARACTER SET GBK COLLATE GBK_CHINESE_CI NULL DEFAULT '',
	`CORP_NAME` VARCHAR(64) CHARACTER SET GBK COLLATE GBK_CHINESE_CI NULL DEFAULT '',
	`AMOUNT` BIGINT(20) NOT NULL DEFAULT 0,
	`SUCCESS_AMOUNT` BIGINT(20) NOT NULL DEFAULT 0,
	`FAIL_AMOUNT` BIGINT(20) NOT NULL DEFAULT 0,
	`PROCESS_STATUS` INT(11) NOT NULL DEFAULT 0,
	`TM_NAME` VARCHAR(64) CHARACTER SET GBK COLLATE GBK_CHINESE_CI NULL DEFAULT '',
	`ADDTIME` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`ID`)
) ENGINE=INNODB DEFAULT CHARSET=GBK$

-- 创建导入详情表
CREATE TABLE IF NOT EXISTS `LF_TEMP_IMPORT_DETAILS`  (
  `ID` BIGINT(20) NOT NULL AUTO_INCREMENT,
	`BATCH` INT(11) NOT NULL DEFAULT 0,
  `TM_NAME` VARCHAR(64) CHARACTER SET GBK COLLATE GBK_CHINESE_CI NULL DEFAULT '',
	`NAME` VARCHAR(64) CHARACTER SET GBK COLLATE GBK_CHINESE_CI NULL DEFAULT '',
	`PHONE_NUM` VARCHAR(64) CHARACTER SET GBK COLLATE GBK_CHINESE_CI NULL DEFAULT '',
	`SCORE` VARCHAR(64) CHARACTER SET GBK COLLATE GBK_CHINESE_CI NULL DEFAULT '',
	`SPTEMPLID` BIGINT(20),
	`SEND_STATUS` INT(11) NOT NULL DEFAULT 0,
	`IMPORT_STATUS` INT(11) NOT NULL DEFAULT 0,
	`CAUSE` VARCHAR(64) CHARACTER SET GBK COLLATE GBK_CHINESE_CI NULL DEFAULT '',
	`IMAGE_SRC` VARCHAR(64) CHARACTER SET GBK COLLATE GBK_CHINESE_CI NULL DEFAULT '',
	`VIDEO_SRC` VARCHAR(64) CHARACTER SET GBK COLLATE GBK_CHINESE_CI NULL DEFAULT '',
	`CORP_CODE` VARCHAR(64) CHARACTER SET GBK COLLATE GBK_CHINESE_CI NULL DEFAULT '',
	`ADDTIME` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`ID`)
) ENGINE=INNODB DEFAULT CHARSET=GBK$

-- LF_TEMPLATE 添加SOURCE 字段[富信模板来源]
DROP PROCEDURE IF EXISTS ADDCOL;
CREATE PROCEDURE ADDCOL()
BEGIN
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND COLUMN_NAME='SOURCE' AND TABLE_NAME='LF_TEMPLATE') THEN
	ALTER TABLE LF_TEMPLATE ADD COLUMN `SOURCE` INT NOT NULL DEFAULT 2 ;
END IF;
END$
CALL ADDCOL()$
DROP PROCEDURE ADDCOL$

/*DELIMITER;*/
DROP PROCEDURE IF EXISTS SCHEMA_CHANGE$
CREATE PROCEDURE SCHEMA_CHANGE()
BEGIN
/**
   *（LF_SUB_TEMPLATE）
   *修改 ENDJSON 长度
**/
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = DATABASE()  AND TABLE_NAME = 'LF_SUB_TEMPLATE' AND COLUMN_NAME = 'ENDJSON') THEN
        ALTER TABLE LF_SUB_TEMPLATE MODIFY COLUMN ENDJSON BLOB  NOT NULL;
	END IF;
END$
/*DELIMITER ;*/
CALL SCHEMA_CHANGE()$
DROP PROCEDURE IF EXISTS SCHEMA_CHANGE$

-- LF_SUB_TEMPLATE 添加H5TYPE 字段[H5长页短页]
DROP PROCEDURE IF EXISTS ADDCOL$
CREATE PROCEDURE ADDCOL()
BEGIN
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND COLUMN_NAME='H5TYPE' AND TABLE_NAME='LF_SUB_TEMPLATE') THEN
	ALTER TABLE LF_SUB_TEMPLATE ADD COLUMN `H5TYPE` INT NOT NULL DEFAULT 0 ;
END IF;
END$
CALL ADDCOL()$
DROP PROCEDURE IF EXISTS ADDCOL$

-- LF_SUB_TEMPLATE 添加APP字段[H5封面JSON]
DROP PROCEDURE IF EXISTS ADDCOL$
CREATE PROCEDURE ADDCOL()
BEGIN
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND COLUMN_NAME='APP' AND TABLE_NAME='LF_SUB_TEMPLATE') THEN
	ALTER TABLE LF_SUB_TEMPLATE ADD COLUMN `APP` BLOB NOT NULL;
END IF;
END$
CALL ADDCOL()$
DROP PROCEDURE IF EXISTS ADDCOL$

-- LF_SUB_TEMPLATE 添加H5URL字段[H5生成的HTML服务器地址]
DROP PROCEDURE IF EXISTS ADDCOL$
CREATE PROCEDURE ADDCOL()
BEGIN
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND COLUMN_NAME='H5URL' AND TABLE_NAME='LF_SUB_TEMPLATE') THEN
	ALTER TABLE LF_SUB_TEMPLATE ADD COLUMN `H5URL` VARCHAR(255) NOT NULL DEFAULT ' ';
END IF;
END$
CALL ADDCOL()$
DROP PROCEDURE IF EXISTS ADDCOL$

-- 创建素材表
CREATE TABLE IF NOT EXISTS LF_FODDER(
    ID BIGINT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    USER_ID BIGINT DEFAULT 0 NOT NULL,
    URL VARCHAR(200) DEFAULT ' ' NOT NULL,
    FO_TYPE INT DEFAULT 0 NOT NULL,
    FO_SIZE INT DEFAULT 0 NOT NULL,
    WIDTH INT DEFAULT 0 NOT NULL,
    HEIGHT INT DEFAULT 0 NOT NULL,
    DURATION INT DEFAULT 0 NOT NULL,
    FO_STATUS INT DEFAULT 0 NOT NULL,
    RADIO VARCHAR(50) DEFAULT ' ' NOT NULL,
    ORIGINAL VARCHAR(200) DEFAULT ' ' NOT NULL
)$

-- LF_FODDER 添加FIRSTFRAMEPATH字段
DROP PROCEDURE IF EXISTS  ADDCOL$
CREATE PROCEDURE ADDCOL()
BEGIN
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND COLUMN_NAME='FIRSTFRAMEPATH' AND TABLE_NAME='LF_FODDER') THEN
	ALTER TABLE LF_FODDER ADD COLUMN `FIRSTFRAMEPATH` VARCHAR(64) NOT NULL DEFAULT '';
END IF;
END$
CALL ADDCOL()$
DROP PROCEDURE ADDCOL$

/*DELIMITER;*/
DROP PROCEDURE IF EXISTS SCHEMA_CHANGE$
CREATE PROCEDURE SCHEMA_CHANGE()
BEGIN
/**
   *模板参数表（LF_TEMP_PARAM)
   *修改 REGCONTENT 长度
**/
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = DATABASE()  AND TABLE_NAME = 'LF_TEMP_PARAM' AND COLUMN_NAME = 'REGCONTENT') THEN
        ALTER TABLE LF_TEMP_PARAM MODIFY COLUMN REGCONTENT VARCHAR(50) ;
	END IF;
END$
/*DELIMITER ;*/
CALL SCHEMA_CHANGE()$
DROP PROCEDURE IF EXISTS SCHEMA_CHANGE$


-- 为 MT_DATAREPORT 表添加 RECFAIL字段
/*DELIMITER ;*/
DROP PROCEDURE IF EXISTS `ADDCOL`$
CREATE DEFINER=`root`@`%` PROCEDURE ADDCOL()
BEGIN
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND COLUMN_NAME='RECFAIL' AND TABLE_NAME='MT_DATAREPORT') THEN
	ALTER TABLE MT_DATAREPORT ADD RECFAIL INT(11) DEFAULT 0 NOT NULL;
END IF;
END$
 /*DELIMITER ;*/
CALL ADDCOL()$
DROP PROCEDURE IF EXISTS `ADDCOL`$

-- 档位统计报表转移存储过程（是拿标准版7.1之前改好的直接来用）
/*DELIMITER ;*/
DROP PROCEDURE IF EXISTS `GW_H_STATISTIV3`$
CREATE DEFINER=`root`@`%` PROCEDURE `GW_H_STATISTIV3`(P_PROCESSFLAG INT,ISP1 INT,ISP2 INT,ISP3 INT,ISP4 INT)
BEGIN
	DECLARE P_STR NVARCHAR(4000);
	DECLARE P_USERID VARCHAR(11);
	DECLARE P_TASKID INT;
	DECLARE P_IYMD INT;
	DECLARE P_SPGATE VARCHAR(21);
	DECLARE P_SPISUNCM INT;
	DECLARE P_SVRTYPE VARCHAR(64);
	DECLARE P_SPID VARCHAR(21);
	DECLARE P_P1 VARCHAR(64);
	DECLARE P_P2 VARCHAR(64);
	DECLARE P_P3 VARCHAR(64);
	DECLARE P_P4 VARCHAR(64);
	DECLARE P_IHOUR INT;
	DECLARE P_IYEAR INT ;
	DECLARE P_IMONTH INT;
	DECLARE P_ICOUNT INT;
	DECLARE P_SUCC INT;
	DECLARE P_FAIL INT;
	DECLARE P_NRET INT;
  DECLARE MAXCNT INT ;
  DECLARE I INT;
  DECLARE P_SENDTYPE INT;
  DECLARE P_MOBILEAREA INT;
  DECLARE MINIYMD BIGINT;
  DECLARE MAXIYMD BIGINT;
        DROP TEMPORARY TABLE IF  EXISTS P_TMP_STICV2;
	CREATE TEMPORARY TABLE IF NOT EXISTS P_TMP_STICV2( TMP_ID INT UNSIGNED NOT NULL AUTO_INCREMENT, USERID VARCHAR(11),TASKID INT,SPGATE VARCHAR(21),SPISUNCM INT,
	SPID VARCHAR(32),SVRTYPE VARCHAR(64),P1 VARCHAR(64),P2 VARCHAR(64),P3 VARCHAR(64),P4 VARCHAR(64),
  IYMD INT,IYEAR INT,IMONTH INT,IHOUR INT,ICOUNT INT,SUCC INT,FAIL INT,RECFAIL INT,NRET INT,SENDTYPE INT,MOBILEAREA INT,BATCHID BIGINT,AREACODE INT,TMPLID BIGINT,
  CHGRADE TINYINT,MSGTYPE TINYINT, PRIMARY KEY (TMP_ID)  );
  ALTER TABLE P_TMP_STICV2 AUTO_INCREMENT=1;



	SET P_STR = 'SELECT USERID,TASKID,SPGATE,UNICOM,SPID,SVRTYPE';
        IF  @ISP1 =1 THEN
           SET P_STR =CONCAT(P_STR,',P1');
        ELSE
            SET P_STR =CONCAT(P_STR,', '' '' AS P1');
         END IF;
           IF  @ISP2 =1 THEN
           SET P_STR =CONCAT(P_STR,',P2');
        ELSE
            SET P_STR =CONCAT(P_STR,', '' '' AS P2');
         END IF;
    IF  @ISP3 =1 THEN
           SET P_STR =CONCAT(P_STR,',P3');
        ELSE
            SET P_STR =CONCAT(P_STR,', '' '' AS P3');
         END IF;
    IF  @ISP4 =1 THEN
           SET P_STR =CONCAT(P_STR,',P4');
        ELSE
            SET P_STR =CONCAT(P_STR,', '' '' AS P4');
         END IF;
           SET P_STR =CONCAT(P_STR, ',CAST(DATE_FORMAT(SENDTIME,''%Y%m%d'') AS SIGNED) AS IYMD,
           CAST(DATE_FORMAT(SENDTIME,''%Y'') AS SIGNED) AS IYEAR,
           CAST(DATE_FORMAT(SENDTIME,''%m'') AS SIGNED) AS MON,
           CAST(DATE_FORMAT(SENDTIME,''%H'') AS SIGNED) AS HOUR,
           COUNT(ID),
           SUM(CASE RTRIM(ERRORCODE) WHEN ''DELIVRD'' THEN 1 WHEN ''0'' THEN 1 ELSE 0 END),
           SUM(CASE SUBSTRING(RTRIM(ERRORCODE),1,3) WHEN ''E1:'' THEN 1 WHEN ''E2:'' THEN 1 ELSE 0 END),
					 SUM(CASE SUBSTRING(RTRIM(ERRORCODE),1,3) WHEN ''E2:'' THEN 1 ELSE 0 END),
           SUM(CASE RTRIM(ERRORCODE) WHEN '''' THEN 1 ELSE 0 END),
           SENDTYPE,
           MOBILEAREA,
           BATCHID,AREACODE,TMPLID,CHGRADE,MSGTYPE
           FROM GW_MT_TASK_BAK WHERE  SENDTIME >=  ''') ;
           SET P_STR=CONCAT(P_STR, DATE_SUB(CURDATE(),INTERVAL P_PROCESSFLAG DAY));
           SET P_STR=CONCAT(P_STR,'''  AND SENDTIME < ''');
           SET P_STR=CONCAT(P_STR, CURDATE());
           SET P_STR=CONCAT(P_STR, ''' GROUP BY USERID,TASKID,SPGATE,UNICOM,SPID,SVRTYPE');
            IF  @ISP1 =1 THEN
               SET P_STR =CONCAT(P_STR,',P1');
             END IF;
           IF  @ISP2 =1 THEN
               SET P_STR =CONCAT(P_STR,',P2');
             END IF;
           IF  @ISP3 =1 THEN
               SET P_STR =CONCAT(P_STR,',P3');
           END IF;
           IF  @ISP4 =1 THEN
               SET P_STR =CONCAT(P_STR,',P4');
           END IF;
           SET P_STR=CONCAT(P_STR,',SENDTYPE,MOBILEAREA,BATCHID,AREACODE,TMPLID,CHGRADE,MSGTYPE,
           CAST(DATE_FORMAT(SENDTIME,''%Y%m%d'') AS SIGNED),
           CAST(DATE_FORMAT(SENDTIME,''%Y'') AS SIGNED),
           CAST(DATE_FORMAT(SENDTIME,''%m'') AS SIGNED),
           CAST(DATE_FORMAT(SENDTIME,''%H'') AS SIGNED)');

# SELECT P_STR;

  SET @SQL =CONCAT('INSERT INTO P_TMP_STICV2(USERID ,TASKID,SPGATE,SPISUNCM,SPID ,SVRTYPE,P1,P2,P3,P4,IYMD,IYEAR,IMONTH,IHOUR,ICOUNT,SUCC,FAIL,RECFAIL,NRET,SENDTYPE,MOBILEAREA,BATCHID,AREACODE,TMPLID,CHGRADE,MSGTYPE)', P_STR);#
       PREPARE SL FROM @SQL;
       EXECUTE SL;
       DEALLOCATE PREPARE SL;
   SELECT MIN(IYMD),MAX(IYMD) INTO  MINIYMD,MAXIYMD FROM P_TMP_STICV2 ;
  # DELETE FROM MT_DATAREPORT WHERE IYMD BETWEEN   CAST(DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL P_PROCESSFLAG DAY),'%Y%m%d') AS SIGNED ) AND  CAST(DATE_FORMAT(CURDATE(),'%Y%m%d') AS SIGNED );

  DELETE FROM MT_DATAREPORT WHERE IYMD BETWEEN   MINIYMD AND  MAXIYMD;
	INSERT INTO MT_DATAREPORT (USERID,TASKID,SPGATE,SPISUNCM,SPID,SVRTYPE,P1,P2,P3,P4,IYMD,IHOUR,IMONTH,Y,ICOUNT,RSUCC,RFAIL1,RFAIL2,RECFAIL,RNRET,SENDTYPE,MOBILEAREA,BATCHID,AREACODE,TMPLID,CHGRADE,MSGTYPE)
	SELECT T.USERID,T.TASKID,T.SPGATE,T.SPISUNCM,T.SPID,T.SVRTYPE,T.P1,T.P2,T.P3,T.P4,T.IYMD,T.IHOUR,T.IMONTH,T.IYEAR,T.ICOUNT,T.SUCC,T.FAIL,(T.ICOUNT-T.SUCC-T.FAIL-T.NRET),T.RECFAIL,T.NRET,T.SENDTYPE,T.MOBILEAREA,T.BATCHID,T.AREACODE,T.TMPLID,T.CHGRADE,T.MSGTYPE FROM P_TMP_STICV2 T;

  TRUNCATE TABLE P_TMP_STICV2;
END$
/*DELIMITER ;*/
/* V71.00-V71.02 END*/

/* V71.02-V72.00 END*/
--  我的场景增加权限菜单

-- 新建权限
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3551 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3551);
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3551 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3551);
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3551 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3551);

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3554, 94, '审核状态', '5100-1300-4', '我的场景', '富信应用', '5100-1300', ' ', '审核状态', 'auth', '我的場景', 'My scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3554)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3554 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3554)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3554 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3554)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3554 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3554)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3555, 94, '立即发送', '5100-1300-5', '我的场景', '富信应用', '5100-1300', ' ', '立即发送', 'send', '我的場景', 'My scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3555)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3555 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3555)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3555 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3555)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3555 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3555)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3556, 94, '预览', '5100-1300-6', '我的场景', '富信应用', '5100-1300', ' ', '预览', 'preview', '我的場景', 'My scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3556)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3556 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3556)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3556 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3556)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3556 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3556)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3557, 94, '复制', '5100-1300-7', '我的场景', '富信应用', '5100-1300', ' ', '复制', 'copy', '我的場景', 'My scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3557)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3557 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3557)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3557 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3557)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3557 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3557)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3558, 94, '导出', '5100-1300-8', '我的场景', '富信应用', '5100-1300', ' ', '导出', 'export', '我的場景', 'My scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3558)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3558 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3558)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3558 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3558)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3558 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3558)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3559, 94, '详情', '5100-1300-9', '我的场景', '富信应用', '5100-1300', ' ', '详情', 'detail', '我的場景', 'My scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3559)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3559 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3559)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3559 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3559)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3559 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3559)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3560, 94, '复制链接', '5100-1300-10', '我的场景', '富信应用', '5100-1300', ' ', '复制链接', 'link', '我的場景', 'My scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3560)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3560 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3560)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3560 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3560)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3560 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3560)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3561, 94, '启用禁用', '5100-1300-11', '我的场景', '富信应用', '5100-1300', ' ', '启用禁用', 'state', '我的場景', 'My scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3561)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3561 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3561)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3561 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3561)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3561 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3561)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3562, 94, '快捷场景', '5100-1300-12', '我的场景', '富信应用', '5100-1300', ' ', '快捷场景', 'shortSence', '我的場景', 'My scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3562)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3562 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3562)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3562 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3562)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3562 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3562)$

-- INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
-- SELECT 3563, 94, '行业用途', '5100-1300-13', '我的场景', '富信应用', '5100-1300', ' ', '行业用途', 'industryAnduse', '我的場景', 'My scene', '富信應用', 'Rich Media' FROM DUAL
-- WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3563);
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3563 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3563);
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3563 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3563);
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 3, 3563 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3563);

--  模板库增加权限菜单
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3564, 94, '审核状态', '5100-1350-4', '模板库', '富信应用', '5100-1350', ' ', '审核状态', 'auth', '模板庫', 'Common scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3564)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3564 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3564)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3564 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3564)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3564 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3564)$

-- INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
-- SELECT 3565, 94, '立即发送', '5100-1350-5', '模板库', '富信应用', '5100-1350', ' ', '立即发送', 'send', '模板庫', 'Common scene', '富信應用', 'Rich Media' FROM DUAL
-- WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3565);
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3565 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3565);
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3565 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3565);
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3565 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3565);

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3566, 94, '预览', '5100-1350-6', '模板库', '富信应用', '5100-1350', ' ', '预览', 'preview', '模板庫', 'Common scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3566)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3566 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3566)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3566 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3566)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3566 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3566)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3567, 94, '复制', '5100-1350-7', '模板库', '富信应用', '5100-1350', ' ', '复制', 'copy', '模板庫', 'Common scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3567)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3567 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3567)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3567 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3567)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3567 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3567)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3568, 94, '导出', '5100-1350-8', '模板库', '富信应用', '5100-1350', ' ', '导出', 'export', '模板庫', 'Common scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3568)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3568 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3568)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3568 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3568)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3568 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3568)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3569, 94, '详情', '5100-1350-9', '模板库', '富信应用', '5100-1350', ' ', '详情', 'detail', '模板庫', 'Common scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3569)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3569 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3569)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3569 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3569)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3569 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3569)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3570, 94, '复制链接', '5100-1350-10', '模板库', '富信应用', '5100-1350', ' ', '复制链接', 'link', '模板庫', 'Common scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3570)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3570 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3570)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3570 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3570)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3570 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3570)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3571, 94, '启用禁用', '5100-1350-11', '模板库', '富信应用', '5100-1350', ' ', '启用禁用', 'state', '模板庫', 'Common scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3571)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3571 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3571)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3571 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3571)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3571 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3571)$

-- INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
-- SELECT 3572, 94, '快捷场景', '5100-1350-12', '模板库', '富信应用', '5100-1350', ' ', '快捷场景', 'shortSence', '模板庫', 'Common scene', '富信應用', 'Rich Media' FROM DUAL
-- WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3572);
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3572 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3572);
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3572 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3572);
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3572 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3572);

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3573, 94, '行业用途', '5100-1350-13', '模板库', '富信应用', '5100-1350', ' ', '行业用途', 'industryAnduse', '模板庫', 'Common scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3573)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3573 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3573)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3573 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3573)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3573 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3573)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3574, 94, '编辑', '5100-1350-3', '模板库', '富信应用', '5100-1350', ' ', '编辑', 'edit', '模板庫', 'update', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3574)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3574 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3574)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3574 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3574)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3574 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3574)$


INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3575, 94, '编辑', '5100-1300-3', '我的场景', '富信应用', '5100-1300', ' ', '编辑', 'edit', '我的場景', 'update', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3575)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3575 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3575)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3575 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3575)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3575 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3575)$

--  模板表 (LF_TEMPLATE)添加是否RCOS同步来的公共素材字段 ISMATERIAL 0—否 ，1-是
DROP PROCEDURE IF EXISTS SCHEMA_CHANGE$
/*DELIMITER $$*/
CREATE PROCEDURE SCHEMA_CHANGE()
BEGIN
	IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = DATABASE()  AND TABLE_NAME = 'LF_TEMPLATE' AND COLUMN_NAME = 'ISMATERIAL')
	THEN
		ALTER TABLE LF_TEMPLATE ADD COLUMN ISMATERIAL INT NOT NULL DEFAULT 0;
	END IF;
END$
/*DELIMITER ;*/
CALL SCHEMA_CHANGE()$
DROP PROCEDURE IF EXISTS SCHEMA_CHANGE$

--  模板表 (LF_TEMPLATE)添加是否RCOS同步来的公共素材字段 RCOS_TMPSTATE 0—禁用 ，1-启用
DROP PROCEDURE IF EXISTS SCHEMA_CHANGE$
/*DELIMITER $$*/
CREATE PROCEDURE SCHEMA_CHANGE()
BEGIN
	IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = DATABASE()  AND TABLE_NAME = 'LF_TEMPLATE' AND COLUMN_NAME = 'RCOS_TMPSTATE')
	THEN
		ALTER TABLE LF_TEMPLATE ADD COLUMN RCOS_TMPSTATE INT NOT NULL DEFAULT 1;
	END IF;
END$
/*DELIMITER ;*/
CALL SCHEMA_CHANGE()$
DROP PROCEDURE IF EXISTS SCHEMA_CHANGE$


-- 创建LF_THIR_CROP表
CREATE TABLE IF NOT EXISTS `LF_THIR_CORP`(
  `ID` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `MENU_NUM` INT(11) NOT NULL DEFAULT 0,
  `CORP_CODE` VARCHAR(64) CHARACTER SET GBK COLLATE GBK_CHINESE_CI NULL DEFAULT '',
  PRIMARY KEY (`ID`) USING BTREE
) ENGINE = INNODB AUTO_INCREMENT = 49 CHARACTER SET = GBK COLLATE = GBK_CHINESE_CI ROW_FORMAT = COMPACT$

--  创建LF_WEBCONFIG表
CREATE TABLE IF NOT EXISTS `LF_WEBCONFIG`(
  `ID` INT(11) NOT NULL AUTO_INCREMENT,
  `CONFIG_NAME` VARCHAR(255) CHARACTER SET GBK COLLATE GBK_CHINESE_CI NOT NULL DEFAULT '',
  `JSON_CONFIG` VARCHAR(2000) CHARACTER SET GBK COLLATE GBK_CHINESE_CI NOT NULL DEFAULT '',
  `CORP_CODE` VARCHAR(64) CHARACTER SET GBK COLLATE GBK_CHINESE_CI NULL DEFAULT NULL,
  PRIMARY KEY (`ID`) USING BTREE
) ENGINE = INNODB AUTO_INCREMENT = 37 CHARACTER SET = GBK COLLATE = GBK_CHINESE_CI ROW_FORMAT = COMPACT$

INSERT INTO LF_WEBCONFIG (ID, CONFIG_NAME, JSON_CONFIG, CORP_CODE) SELECT '1', 'modulePer', '[{"type":11,"suppStyle":[]}]', '100001' FROM DUAL WHERE NOT EXISTS ( SELECT 1 FROM LF_WEBCONFIG WHERE CONFIG_NAME = 'modulePer' AND CORP_CODE = '100001' )$

-- 创建企业同步状态表
CREATE TABLE IF NOT  EXISTS `LF_TEMP_SYNCH` (
  `ID` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `SP_TEMPLID` BIGINT(20) DEFAULT NULL UNIQUE,
  `COUNT` INT(5) NOT NULL DEFAULT 0,
  `SYNSTATUS` TINYINT(4) NOT NULL DEFAULT 0,
  `CAUSE` VARCHAR(64) NOT NULL DEFAULT "",
	`UPDATE_TIME` DATETIME NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=INNODB DEFAULT CHARSET=GBK$
/* V71.02-V72.00 END*/

/* V72.00-V73.00 END*/
/*DELIMITER ;*/
DROP PROCEDURE IF EXISTS `ADDCOL`$
CREATE DEFINER=`root`@`%` PROCEDURE ADDCOL()
BEGIN
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND COLUMN_NAME='SHOWNUM' AND TABLE_NAME='LF_SYSUSER') THEN
	ALTER TABLE LF_SYSUSER ADD SHOWNUM INT DEFAULT 0 NOT NULL;
END IF;
END$
/*;; DELIMITER ;*/
CALL ADDCOL()$
DROP PROCEDURE ADDCOL$


--  我的场景增加权限菜单 

-- 新建权限
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3551 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3551);
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3551 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3551);
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3551 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3551);

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3554, 94, '审核状态', '5100-1300-4', '我的场景', '富信应用', '5100-1300', ' ', '审核状态', 'auth', '我的場景', 'My scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3554)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3554 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3554)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3554 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3554)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3554 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3554)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3555, 94, '立即发送', '5100-1300-5', '我的场景', '富信应用', '5100-1300', ' ', '立即发送', 'send', '我的場景', 'My scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3555)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3555 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3555)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3555 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3555)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3555 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3555)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3556, 94, '预览', '5100-1300-6', '我的场景', '富信应用', '5100-1300', ' ', '预览', 'preview', '我的場景', 'My scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3556)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3556 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3556)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3556 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3556)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3556 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3556)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3557, 94, '复制', '5100-1300-7', '我的场景', '富信应用', '5100-1300', ' ', '复制', 'copy', '我的場景', 'My scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3557)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3557 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3557)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3557 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3557)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3557 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3557)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3558, 94, '导出', '5100-1300-8', '我的场景', '富信应用', '5100-1300', ' ', '导出', 'export', '我的場景', 'My scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3558)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3558 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3558)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3558 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3558)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3558 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3558)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3559, 94, '详情', '5100-1300-9', '我的场景', '富信应用', '5100-1300', ' ', '详情', 'detail', '我的場景', 'My scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3559)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3559 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3559)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3559 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3559)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3559 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3559)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3560, 94, '复制链接', '5100-1300-10', '我的场景', '富信应用', '5100-1300', ' ', '复制链接', 'link', '我的場景', 'My scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3560)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3560 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3560)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3560 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3560)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3560 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3560)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3561, 94, '启用禁用', '5100-1300-11', '我的场景', '富信应用', '5100-1300', ' ', '启用禁用', 'state', '我的場景', 'My scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3561)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3561 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3561)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3561 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3561)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3561 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3561)$
 
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3562, 94, '快捷场景', '5100-1300-12', '我的场景', '富信应用', '5100-1300', ' ', '快捷场景', 'shortSence', '我的場景', 'My scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3562)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3562 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3562)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3562 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3562)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3562 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3562)$ 

-- INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
-- SELECT 3563, 94, '行业用途', '5100-1300-13', '我的场景', '富信应用', '5100-1300', ' ', '行业用途', 'industryAnduse', '我的場景', 'My scene', '富信應用', 'Rich Media' FROM DUAL
-- WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3563);
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3563 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3563);
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3563 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3563);
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 3, 3563 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3563);
 
--  模板库增加权限菜单 
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3564, 94, '审核状态', '5100-1350-4', '模板库', '富信应用', '5100-1350', ' ', '审核状态', 'auth', '模板庫', 'Common scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3564)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3564 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3564)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3564 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3564)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3564 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3564)$

-- INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
-- SELECT 3565, 94, '立即发送', '5100-1350-5', '模板库', '富信应用', '5100-1350', ' ', '立即发送', 'send', '模板庫', 'Common scene', '富信應用', 'Rich Media' FROM DUAL
-- WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3565);
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3565 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3565);
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3565 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3565);
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3565 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3565);

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3566, 94, '预览', '5100-1350-6', '模板库', '富信应用', '5100-1350', ' ', '预览', 'preview', '模板庫', 'Common scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3566)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3566 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3566)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3566 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3566)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3566 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3566)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3567, 94, '复制', '5100-1350-7', '模板库', '富信应用', '5100-1350', ' ', '复制', 'copy', '模板庫', 'Common scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3567)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3567 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3567)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3567 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3567)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3567 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3567)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3568, 94, '导出', '5100-1350-8', '模板库', '富信应用', '5100-1350', ' ', '导出', 'export', '模板庫', 'Common scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3568)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3568 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3568)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3568 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3568)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3568 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3568)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3569, 94, '详情', '5100-1350-9', '模板库', '富信应用', '5100-1350', ' ', '详情', 'detail', '模板庫', 'Common scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3569)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3569 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3569)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3569 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3569)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3569 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3569)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3570, 94, '复制链接', '5100-1350-10', '模板库', '富信应用', '5100-1350', ' ', '复制链接', 'link', '模板庫', 'Common scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3570)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3570 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3570)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3570 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3570)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3570 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3570)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3571, 94, '启用禁用', '5100-1350-11', '模板库', '富信应用', '5100-1350', ' ', '启用禁用', 'state', '模板庫', 'Common scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3571)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3571 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3571)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3571 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3571)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3571 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3571)$

-- INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
-- SELECT 3572, 94, '快捷场景', '5100-1350-12', '模板库', '富信应用', '5100-1350', ' ', '快捷场景', 'shortSence', '模板庫', 'Common scene', '富信應用', 'Rich Media' FROM DUAL
-- WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3572);
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3572 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3572);
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3572 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3572);
-- INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3572 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3572); 

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3573, 94, '行业用途', '5100-1350-13', '模板库', '富信应用', '5100-1350', ' ', '行业用途', 'industryAnduse', '模板庫', 'Common scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3573)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3573 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3573)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3573 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3573)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3573 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3573)$
 
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3574, 94, '编辑', '5100-1350-3', '模板库', '富信应用', '5100-1350', ' ', '编辑', 'edit', '模板庫', 'Common scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3574)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3574 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3574)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3574 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3574)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3574 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3574)$


INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3575, 94, '编辑', '5100-1300-3', '我的场景', '富信应用', '5100-1300', ' ', '编辑', 'edit', '我的場景', 'My scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3575)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3575 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3575)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3575 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3575)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3575 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3575)$

-- 整理老企业企业富信 新加权限菜单不全

/*DELIMITER $$*/
DROP PROCEDURE IF EXISTS `NEWPROC`$
CREATE  PROCEDURE `NEWPROC`()
BEGIN
-- 企业编码
DECLARE CORPCODE VARCHAR(64);
DECLARE CORPCODE_id VARCHAR(10000);
-- 权限ID
DECLARE PRIVILEGEID INT;
-- 角色ID
DECLARE ROLEID INT;
-- 权限ID、角色ID 组合存在标识
DECLARE NUM INT;
-- 设置终止标记
DECLARE STOPFLAG INT DEFAULT 0;
-- 声明外层游标
DECLARE CUR_CORP CURSOR FOR SELECT CORP_CODE FROM `LF_CORP`;
-- 申明内层游标
DECLARE CUR_PRIVILEGE CURSOR FOR SELECT DISTINCT PRIVILEGE_ID FROM `LF_PRIVILEGE` WHERE PRIVILEGE_ID  in(3554,3555,3556,3557,3558,3559,3560,3561,3562,3563,3565,3566,3568,3569,3570,3571,3572,3573,3575);
-- 未有值时停止标志为1
DECLARE CONTINUE HANDLER FOR  SQLSTATE '02000' SET STOPFLAG = 1;
-- 打开外层游标
OPEN CUR_CORP;
-- 提取外层游标行

out_loop:LOOP
FETCH  CUR_CORP INTO CORPCODE;

		IF STOPFLAG = 1 THEN
		    LEAVE out_loop;
		END IF;
   IF CORPCODE <> '100000' THEN
			IF (STOPFLAG=0) THEN
        -- 获取对应企业的超级管理员的ROLE_ID
        SELECT MIN(ROLE_ID) INTO ROLEID FROM LF_USER2ROLE WHERE USER_ID = (SELECT USER_ID FROM `LF_SYSUSER` WHERE CORP_CODE = CORPCODE AND USER_NAME = 'admin') AND ROLE_ID NOT IN (1,2,4);
       
				-- 打开内层游标
        OPEN CUR_PRIVILEGE;
        -- 提取内层游标行获取富新相关菜单的权限并且遍历
       inner_loop:LOOP
			  FETCH  CUR_PRIVILEGE INTO PRIVILEGEID;
						IF STOPFLAG = 1 THEN
							LEAVE inner_loop;
						END IF;
					 
           IF(PRIVILEGEID > 0 AND ROLEID > 0) THEN
            SELECT COUNT(*) INTO  NUM FROM `LF_IMPOWER` WHERE ROLE_ID =ROLEID AND PRIVILEGE_ID =PRIVILEGEID;
            IF (NUM = 0) THEN
                   INSERT INTO `LF_IMPOWER`(ROLE_ID,PRIVILEGE_ID) VALUES(ROLEID,PRIVILEGEID);
						END IF;
					 END IF;
				END LOOP inner_loop;
        CLOSE CUR_PRIVILEGE;
		END IF;
  END IF;    
 -- 注意这里，这里是重点
 SET STOPFLAG=0;
END LOOP out_loop;
CLOSE CUR_CORP;

END $
/*DELIMITER ;*/

CALL NEWPROC()$
DROP PROCEDURE IF EXISTS `NEWPROC`$


-- 定制场景菜单
INSERT INTO LF_PRIVILEGE ( `PRIVILEGE_ID`, `RESOURCE_ID`, `OPERATE_ID`, `COMMENTS`, `PRIV_CODE`, `MENUNAME`, `MODNAME`, `MENUCODE`, `MENUSITE`, `ZH_TW_COMMENTS`, `ZH_HK_COMMENTS`, `ZH_TW_MENUNAME`, `ZH_HK_MENUNAME`, `ZH_TW_MODNAME`, `ZH_HK_MODNAME` )
SELECT  '3576', '94', '1', '查看', '5100-1351-0', '定制场景', '富信应用', '5100-1351', '/toCorpCustomTpIndex.meditorPage', '查看', 'View', '定制場景', ' Custom Template', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3576)$
 
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3576 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3576)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3576 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3576)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3576 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3576)$


-- 定制场景 按钮权限

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3577, 94, '编辑', '5100-1351-3', '定制场景', '富信应用', '5100-1351', ' ', '编辑', 'edit', '定制場景', 'Custom Template', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3577)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3577 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3577)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3577 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3577)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3577 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3577)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3578, 94, '审核状态', '5100-1351-4', '定制场景', '富信应用', '5100-1351', ' ', '审核状态', 'auth', '定制場景', ' Custom Template', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3578)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3578 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3578)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3578 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3578)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3578 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3578)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3579, 94, '立即发送', '5100-1351-5', '定制场景', '富信应用', '5100-1351', ' ', '立即发送', 'send', '定制場景', ' Custom Template', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3579)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3579 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3579)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3579 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3579)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3579 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3579)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3580, 94, '预览', '5100-1351-6', '定制场景', '富信应用', '5100-1351', ' ', '预览', 'preview', '定制場景', ' Custom Template', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3580)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3580 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3580)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3580 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3580)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3580 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3580)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3581, 94, '复制', '5100-1351-7', '定制场景', '富信应用', '5100-1351', ' ', '复制', 'copy', '定制場景', ' Custom Template', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3581)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3581 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3581)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3581 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3581)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3581 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3581)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3582, 94, '导出', '5100-1351-8', '定制场景', '富信应用', '5100-1351', ' ', '导出', 'export', '定制場景', ' Custom Template', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3582)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3582 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3582)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3582 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3582)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3582 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3582)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3583, 94, '详情', '5100-1351-9', '定制场景', '富信应用', '5100-1351', ' ', '详情', 'detail', '定制場景', ' Custom Template', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3583)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3583 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3583)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3583 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3583)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3583 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3583)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3584, 94, '复制链接', '5100-1351-10', '定制场景', '富信应用', '5100-1351', ' ', '复制链接', 'link', '定制場景', ' Custom Template', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3584)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3584 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3584)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3584 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3584)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3584 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3584)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3586, 94, '启用禁用', '5100-1351-11', '定制场景', '富信应用', '5100-1351', ' ', '启用禁用', 'state', '定制場景', ' Custom Template', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3586)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3586 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3586)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3586 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3586)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3586 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3586)$
 
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3587, 94, '快捷场景', '5100-1351-12', '定制场景', '富信应用', '5100-1351', ' ', '快捷场景', 'shortSence', '定制場景', ' Custom Template', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3587)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3587 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3587)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3587 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3587)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3587 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3587)$ 


-- 整理老企业企业富信 新加权限菜单不全

/*DELIMITER $$*/
DROP PROCEDURE IF EXISTS `NEWPROC`$
CREATE  PROCEDURE `NEWPROC`()
BEGIN
-- 企业编码
DECLARE CORPCODE VARCHAR(64);
DECLARE CORPCODE_id VARCHAR(10000);
-- 权限ID
DECLARE PRIVILEGEID INT;
-- 角色ID
DECLARE ROLEID INT;
-- 权限ID、角色ID 组合存在标识
DECLARE NUM INT;
-- 设置终止标记
DECLARE STOPFLAG INT DEFAULT 0;
-- 声明外层游标
DECLARE CUR_CORP CURSOR FOR SELECT CORP_CODE FROM `LF_CORP`;
-- 申明内层游标
DECLARE CUR_PRIVILEGE CURSOR FOR SELECT DISTINCT PRIVILEGE_ID FROM `LF_PRIVILEGE` WHERE PRIVILEGE_ID  in(3576,3577,3578,3579,3580,3581,3582,3583,3584,3585,3586,3587);
-- 未有值时停止标志为1
DECLARE CONTINUE HANDLER FOR  SQLSTATE '02000' SET STOPFLAG = 1;
-- 打开外层游标
OPEN CUR_CORP;
-- 提取外层游标行

out_loop:LOOP
FETCH  CUR_CORP INTO CORPCODE;

		IF STOPFLAG = 1 THEN
		    LEAVE out_loop;
		END IF;
   IF CORPCODE <> '100000' THEN
			IF (STOPFLAG=0) THEN
        -- 获取对应企业的超级管理员的ROLE_ID
        SELECT MIN(ROLE_ID) INTO ROLEID FROM LF_USER2ROLE WHERE USER_ID = (SELECT USER_ID FROM `LF_SYSUSER` WHERE CORP_CODE = CORPCODE AND USER_NAME = 'admin') AND ROLE_ID NOT IN (1,2,4);
       
				-- 打开内层游标
        OPEN CUR_PRIVILEGE;
        -- 提取内层游标行获取富新相关菜单的权限并且遍历
       inner_loop:LOOP
			  FETCH  CUR_PRIVILEGE INTO PRIVILEGEID;
						IF STOPFLAG = 1 THEN
							LEAVE inner_loop;
						END IF;
					 
           IF(PRIVILEGEID > 0 AND ROLEID > 0) THEN
            SELECT COUNT(*) INTO  NUM FROM `LF_IMPOWER` WHERE ROLE_ID =ROLEID AND PRIVILEGE_ID =PRIVILEGEID;
            IF (NUM = 0) THEN
                   INSERT INTO `LF_IMPOWER`(ROLE_ID,PRIVILEGE_ID) VALUES(ROLEID,PRIVILEGEID);
						END IF;
						END IF;
				END LOOP inner_loop;
        CLOSE CUR_PRIVILEGE;
		END IF;
  END IF;    
 -- 注意这里，这里是重点
 SET STOPFLAG=0;
END LOOP out_loop;
CLOSE CUR_CORP;

END $
/*DELIMITER ;*/

CALL NEWPROC()$
DROP PROCEDURE IF EXISTS `NEWPROC`$


--  模板表 (LF_TEMPLATE)添加是否RCOS同步来的公共素材字段 ISMATERIAL 0—否 ，1-是
DROP PROCEDURE IF EXISTS SCHEMA_CHANGE$
/*DELIMITER $$*/
CREATE PROCEDURE SCHEMA_CHANGE()
BEGIN
	IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = DATABASE()  AND TABLE_NAME = 'LF_TEMPLATE' AND COLUMN_NAME = 'ISMATERIAL') 
	THEN
		ALTER TABLE LF_TEMPLATE ADD COLUMN ISMATERIAL INT NOT NULL DEFAULT 0;
	END IF; 
END$ 
/*DELIMITER ;*/  
CALL SCHEMA_CHANGE()$
DROP PROCEDURE IF EXISTS SCHEMA_CHANGE$

-- 去掉 模板库 中的新建、复制 按钮权限
delete from LF_IMPOWER where privilege_id in(3551,3567)$
delete from LF_PRIVILEGE where privilege_id in(3551,3567)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 3588, 94, '模板共享', '5100-1300-13', '我的场景', '富信应用', '5100-1300', ' ', '模板共享', 'templateShare', '我的場景', 'My scene', '富信應用', 'Rich Media' FROM DUAL
WHERE NOT EXISTS (SELECT 1 FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 3588)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 3588 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 3588)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 3588 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 3588)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 3588 FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 3588)$

-- lf_temp_synch[模板同步状态记录表]添加 ISMATERIAL 字段[是否素材：0-否，1-是]
DROP PROCEDURE IF EXISTS ADDCOL_ISMATERIAL$
CREATE PROCEDURE ADDCOL_ISMATERIAL()
BEGIN
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND COLUMN_NAME='ISMATERIAL' AND TABLE_NAME='LF_TEMP_SYNCH') THEN
	ALTER TABLE LF_TEMP_SYNCH ADD COLUMN `ISMATERIAL` INT NOT NULL DEFAULT 0 ;
END IF;
END$
CALL ADDCOL_ISMATERIAL()$
DROP PROCEDURE ADDCOL_ISMATERIAL$

/**创建存储过程，用于判断索引是否存在，存在则删除该索引**/
DROP PROCEDURE IF EXISTS DEL_INX$
CREATE PROCEDURE DEL_INX(IN P_TABLENAE varchar(200), IN P_IDXNAME VARCHAR(200))
BEGIN 
	DECLARE STR VARCHAR(250);
	DECLARE TB_SCHEMA VARCHAR(36);
	SET @STR = CONCAT(' DROP INDEX  ', P_IDXNAME, ' ON ', P_TABLENAE);
	SELECT DATABASE() INTO @TB_SCHEMA;
  SELECT COUNT(1) INTO @CNT FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = @TB_SCHEMA and TABLE_NAME =  P_TABLENAE AND INDEX_NAME = P_IDXNAME;
  IF @CNT > 0 THEN
		PREPARE STMT FROM @STR;
		EXECUTE STMT;
	END IF;
END$   

CALL DEL_INX('LF_TEMPCONTENT','INDEX_TMID_TEMPCONTENT')$
ALTER TABLE LF_TEMPCONTENT ADD INDEX INDEX_TMID_TEMPCONTENT(TMID)$

CREATE PROCEDURE ADDCOL()
BEGIN
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND COLUMN_NAME='STR_TASKID' AND TABLE_NAME='LF_URLTASK') THEN
	ALTER TABLE LF_URLTASK ADD COLUMN `STR_TASKID` VARCHAR(20) CHARACTER SET gbk COLLATE gbk_chinese_ci NOT NULL DEFAULT '' ;
	ALTER TABLE LF_URLTASK add index IX_URLTASK_STRTASKID (STR_TASKID);
	UPDATE LF_URLTASK SET STR_TASKID=TASKID;
END IF;
END$
CALL ADDCOL()$
DROP PROCEDURE ADDCOL$	


/*MYSQL*/
/*EMP7.3升级脚本    短信黑名单删除记录表*/
CREATE TABLE IF NOT EXISTS `PB_BLACK_DEL` (
  `ID` INT(11) NOT NULL AUTO_INCREMENT,
  `OPERATEID` VARCHAR(21) NOT NULL DEFAULT '',
  `PHONE` BIGINT(20) NOT NULL DEFAULT '0',
  `OPTTIME` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `TASKID` VARCHAR(40) NOT NULL DEFAULT '',
  PRIMARY KEY  (`ID`)
) ENGINE=INNODB DEFAULT CHARSET=GBK$

/*DELIMITER ;*/
DROP TRIGGER IF EXISTS `TIG_TIME_PB_BLACK_DEL`$
/*DELIMITER ;*/
CREATE TRIGGER `TIG_TIME_PB_BLACK_DEL` BEFORE INSERT ON `PB_BLACK_DEL` FOR EACH ROW BEGIN
SET @P_CURTIME = NOW();
IF DATE_FORMAT(NEW.OPTTIME, '%Y-%m-%d') = '0000-00-00' THEN
    SET NEW.OPTTIME = @P_CURTIME;
END IF;
END$
/*DELIMITER ;*/

INSERT INTO `LF_PRIVILEGE` (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
 SELECT '3593', '6', NULL, '删除记录', '1900-1260-5', '短信黑名单', '信息安全', '1900-1260', null,'刪除記錄', 'Delete Record', '短信黑名單', 'SMS blacklist', '信息安全', 'Information security' FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=3593)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1,3593 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=3593 AND ROLE_ID=1)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2,3593 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=3593 AND ROLE_ID=2)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3,3593 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=3593 AND ROLE_ID=3)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 4,3593 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=3593 AND ROLE_ID=4)$




/*EMP升级脚本   新增状态码管理权限*/
INSERT INTO `LF_PRIVILEGE` (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
 SELECT '3589', '8', NULL, '新建', '1400-1350-1', '状态码管理', '参数维护', '1400-1350', NULL, '新建', 'Add', '狀態碼管理', 'Status code', '參數維護', 'Parameter' FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=3589)$



INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1,3589 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=3589 AND ROLE_ID=1)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2,3589 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=3589 AND ROLE_ID=2)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3,3589 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=3589 AND ROLE_ID=3)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 4,3589 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=3589 AND ROLE_ID=4)$


INSERT INTO `LF_PRIVILEGE` (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
 SELECT '3590', '8', NULL, '导入', '1400-1350-2', '状态码管理', '参数维护', '1400-1350', NULL, '導入', 'Import', '狀態碼管理', 'Status code', '參數維護', 'Parameter' FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=3590)$



INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1,3590 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=3590 AND ROLE_ID=1)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2,3590 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=3590 AND ROLE_ID=2)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3,3590 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=3590 AND ROLE_ID=3)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 4,3590 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=3590 AND ROLE_ID=4)$




INSERT INTO `LF_PRIVILEGE` (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
 SELECT '3591', '8', NULL, '下载导入模板', '1400-1350-3', '状态码管理', '参数维护', '1400-1350', NULL, '下載導入模板', 'Download import template', '狀態碼管理', 'Status code', '參數維護', 'Parameter' FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=3591)$



INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1,3591 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=3591 AND ROLE_ID=1)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2,3591 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=3591 AND ROLE_ID=2)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3,3591 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=3591 AND ROLE_ID=3)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 4,3591 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=3591 AND ROLE_ID=4)$


INSERT INTO `LF_PRIVILEGE` (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
 SELECT '3592', '8', NULL, '导出', '1400-1350-4', '状态码管理', '参数维护', '1400-1350', NULL, '導出', 'Export', '狀態碼管理', 'Status code', '參數維護', 'Parameter' FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=3592)$



INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1,3592 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=3592 AND ROLE_ID=1)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2,3592 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=3592 AND ROLE_ID=2)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 3,3592 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=3592 AND ROLE_ID=3)$
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 4,3592 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=3592 AND ROLE_ID=4)$



-- LF_UDGROUP表增加字段SHARE_STATUS,CREATETIME
DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'LF_UDGROUP' AND COLUMN_NAME ='SHARE_STATUS' AND COLUMN_TYPE = 'smallint(6)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = 0) THEN
  CALL COLUMNADD('LF_UDGROUP','SHARE_STATUS','SMALLINT(6) NOT NULL DEFAULT 0');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'LF_UDGROUP' AND COLUMN_NAME ='CREATETIME' AND DATA_TYPE = 'DATETIME' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '0000-00-00 00:00:00') THEN
  CALL COLUMNADD('LF_UDGROUP','CREATETIME','DATETIME NOT NULL DEFAULT  "0000-00-00 00:00:00"');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$


UPDATE LF_UDGROUP SET CREATETIME=NOW() WHERE CREATETIME="0000-00-00 00:00:00" $

/*DELIMITER ;*/
DROP TRIGGER IF EXISTS `TIG_TIME_LF_UDGROUP`$
/*DELIMITER ;*/
CREATE TRIGGER `TIG_TIME_LF_UDGROUP` BEFORE INSERT ON `LF_UDGROUP` FOR EACH ROW BEGIN
SET @P_CURTIME = NOW();
IF DATE_FORMAT(NEW.CREATETIME, '%Y-%m-%d') = '0000-00-00' THEN
    SET NEW.CREATETIME = @P_CURTIME;
END IF;
END$
/*DELIMITER ;*/

/*查询统计-数据查询－系统下行导出记录：/sta_stateCode.htm*/
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE)
SELECT 128, 27, 1, '查看', '1520-1300-0', '系统下行导出记录', '数据查询', '1520-1300', '/que_mtRptRecord.htm' FROM DUAL  
WHERE NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=128)$ 

/*查询统计-数据查询－系统下行导出记录  加权限*/
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 1,128 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=128 AND ROLE_ID=1)$ 

/*查询统计-数据查询－系统下行导出记录  加权限*/
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 2,128 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=128 AND ROLE_ID=2)$ 

/*查询统计-数据查询－系统下行导出记录  加权限*/
INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID) SELECT 4,128 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=128 AND ROLE_ID=4)$ 


/** 操作员导入脚本 **/
INSERT INTO LF_PRIVILEGE(PRIVILEGE_ID,RESOURCE_ID,COMMENTS,PRIV_CODE,MENUNAME,MODNAME,MENUCODE,ZH_TW_COMMENTS,ZH_HK_COMMENTS,ZH_TW_MENUNAME,ZH_HK_MENUNAME,ZH_TW_MODNAME,ZH_HK_MODNAME)
SELECT 777,10,'文件导入','1600-1200-8','操作员管理','操作员管理','1600-1200','文件導入','Import file','操作員管理','Operator','操作員管理','Operator' FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=777)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID)
SELECT 1,777 FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE ROLE_ID=1 AND PRIVILEGE_ID=777)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID)
SELECT 2,777 FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE ROLE_ID=2 AND PRIVILEGE_ID=777)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID)
SELECT 4,777 FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE ROLE_ID=4 AND PRIVILEGE_ID=777)$



/** 业务类型导入脚本 **/
INSERT INTO LF_PRIVILEGE(PRIVILEGE_ID,RESOURCE_ID,COMMENTS,PRIV_CODE,MENUNAME,MODNAME,MENUCODE,ZH_TW_COMMENTS,ZH_HK_COMMENTS,ZH_TW_MENUNAME,ZH_HK_MENUNAME,ZH_TW_MODNAME,ZH_HK_MODNAME)
SELECT 108,8,'文件导入','1400-1400-4','业务类型管理','参数维护','1400-1400','文件導入','Import file','業務類型管理','Business type','參數維護','Parameter' FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=108)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID)
SELECT 1,108 FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE ROLE_ID=1 AND PRIVILEGE_ID=108)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID)
SELECT 2,108 FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE ROLE_ID=2 AND PRIVILEGE_ID=108)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID)
SELECT 4,108 FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE ROLE_ID=4 AND PRIVILEGE_ID=108)$


/** 机构管理导入脚本 **/
INSERT INTO LF_PRIVILEGE(PRIVILEGE_ID,RESOURCE_ID,COMMENTS,PRIV_CODE,MENUNAME,MODNAME,MENUCODE,ZH_TW_COMMENTS,ZH_HK_COMMENTS,ZH_TW_MENUNAME,ZH_HK_MENUNAME,ZH_TW_MODNAME,ZH_HK_MODNAME)
SELECT 205,10,'文件导入','1600-1000-4','机构管理','操作员管理','1600-1000','文件導出','Import file','機構管理','Organization','操作員管理','Operator' FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=205)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID)
SELECT 1,205 FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE ROLE_ID=1 AND PRIVILEGE_ID=205)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID)
SELECT 2,205 FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE ROLE_ID=2 AND PRIVILEGE_ID=205)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID)
SELECT 4,205 FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE ROLE_ID=4 AND PRIVILEGE_ID=205)$


/** 机构管理导出脚本 **/
INSERT INTO LF_PRIVILEGE(PRIVILEGE_ID,RESOURCE_ID,COMMENTS,PRIV_CODE,MENUNAME,MODNAME,MENUCODE,ZH_TW_COMMENTS,ZH_HK_COMMENTS,ZH_TW_MENUNAME,ZH_HK_MENUNAME,ZH_TW_MODNAME,ZH_HK_MODNAME)
SELECT 206,10,'导出','1600-1000-5','机构管理','操作员管理','1600-1000','導出','Export','機構管理','Organization','操作員管理','Operator' FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=206)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID)
SELECT 1,206 FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE ROLE_ID=1 AND PRIVILEGE_ID=206)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID)
SELECT 2,206 FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE ROLE_ID=2 AND PRIVILEGE_ID=206)$

INSERT INTO LF_IMPOWER(ROLE_ID,PRIVILEGE_ID)
SELECT 4,206 FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE ROLE_ID=4 AND PRIVILEGE_ID=206)$




/*创建导出记录表*/
CREATE TABLE IF NOT EXISTS `A_RPTRECORD` (
  `ID` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `FILENAME` VARCHAR(256) CHARACTER SET utf8 NOT NULL DEFAULT '' COMMENT '文件名称',
  `USERID` VARCHAR(256) CHARACTER SET utf8 NOT NULL DEFAULT '' COMMENT '用户id',
  `STATUS` CHAR(1) CHARACTER SET utf8 NOT NULL DEFAULT '' COMMENT '0：已生成；1：生成中；2：生成失败',
  `CREATETIME` DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '创建时间',
  `GENERATETIME` DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL COMMENT '生成时间',
  `DOWNLOADTIME` DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL COMMENT '下载时间',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=58 DEFAULT CHARSET=gbk$

/*DELIMITER ;*/
DROP TRIGGER IF EXISTS `TIG_A_RPTRECORD`$
CREATE TRIGGER `TIG_A_RPTRECORD` BEFORE INSERT ON `A_RPTRECORD` FOR EACH ROW BEGIN
SET @P_CURTIME = NOW();
IF DATE_FORMAT(NEW.CREATETIME, '%Y-%m-%d') = '0000-00-00' THEN
    SET NEW.CREATETIME = @P_CURTIME;
END IF;
IF DATE_FORMAT(NEW.GENERATETIME, '%Y-%m-%d') = '0000-00-00' THEN
    SET NEW.GENERATETIME = @P_CURTIME;
END IF;
IF DATE_FORMAT(NEW.DOWNLOADTIME, '%Y-%m-%d') = '0000-00-00' THEN
    SET NEW.DOWNLOADTIME = @P_CURTIME;
END IF;
END$
/*DELIMITER ;*/

-- 为了短链创建子草稿箱存储domainid ,neturlid
CREATE TABLE IF NOT EXISTS `LF_SUB_DRAFTS` (
	`ID` INTEGER AUTO_INCREMENT PRIMARY KEY,
	`DRAFTID` INTEGER NOT NULL DEFAULT 0,
	`TYPE` INTEGER NOT NULL DEFAULT 0,
	`NETURLID` INTEGER NOT NULL DEFAULT 0,
	`DOMAINID` INTEGER NOT NULL DEFAULT 0,
	`CREATE_TIME` DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL,
	`UPDATE_TIME` DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL
) ENGINE = INNODB DEFAULT CHARSET = UTF8$

DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'LF_STATECODE' AND COLUMN_NAME ='MAPPING_CODE' AND COLUMN_TYPE = 'varchar(64)' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '') THEN
  CALL COLUMNADD('LF_STATECODE','MAPPING_CODE','VARCHAR(64) NOT NULL DEFAULT ""');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

/* 短信是否分批发送 */
INSERT INTO LF_CORP_CONF(CORP_CODE,PARAM_KEY,PARAM_VALUE) SELECT '100001','sms.split',0 FROM DUAL 
WHERE NOT EXISTS(SELECT * FROM LF_CORP_CONF WHERE PARAM_KEY='sms.split')$

update LF_SPEUICFG set DISPCONTENT='11111000' where CORPCODE in ('100001')$

/*查询统计-数据查询－系统下行导出记录：菜单国际化*/
UPDATE LF_PRIVILEGE SET ZH_TW_MENUNAME='系統下行匯出記錄',ZH_HK_MENUNAME='Export record of system MT',
	ZH_TW_MODNAME='數據查詢',ZH_HK_MODNAME='Data query', 
	ZH_TW_COMMENTS='查看',ZH_HK_COMMENTS='View'
	WHERE PRIVILEGE_ID=128$
	

-- 移动办公增加超大文件相关菜单
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID,OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
  SELECT 707, 1, 1, '查看', '1050-1250-0', '超大文件导入', '企业短信', '1050-1250', '/ssm_dxzsBigFileExport.htm', '查看', 'View', '超大文件導入', 'Big file import', '企業短信', 'Customer service SMS' FROM DUAL
  WHERE NOT EXISTS (SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 707)$

INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 707 FROM DUAL WHERE NOT EXISTS (SELECT * FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 707)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 707 FROM DUAL WHERE NOT EXISTS (SELECT * FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 707)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 707 FROM DUAL WHERE NOT EXISTS (SELECT * FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 707)$


INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID,OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
  SELECT 1074, 1, NULL, '批量输入', '1050-1000-2', '相同内容群发', '企业短信', '1050-1000', NULL, '批量輸入', 'Bulk input', '相同內容群發', 'Same content', '企業短信', 'Customer service SMS' FROM DUAL
  WHERE NOT EXISTS (SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 1074)$

INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 1074 FROM DUAL WHERE NOT EXISTS (SELECT * FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 1074)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 1074 FROM DUAL WHERE NOT EXISTS (SELECT * FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 1074)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 1074 FROM DUAL WHERE NOT EXISTS (SELECT * FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 1074)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID,OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
  SELECT 1075, 1, NULL, '超大文件', '1050-1000-3', '相同内容群发', '企业短信', '1050-1000', NULL, '超大文件', 'Big file', '相同內容群發', 'Same content', '企業短信', 'Customer service SMS' FROM DUAL
  WHERE NOT EXISTS (SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 1075)$

INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 1075 FROM DUAL WHERE NOT EXISTS (SELECT * FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 1075)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 1075 FROM DUAL WHERE NOT EXISTS (SELECT * FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 1075)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 1075 FROM DUAL WHERE NOT EXISTS (SELECT * FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 1075)$

-- 移动客服增加超大文件相关菜单
INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID,OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
  SELECT 706, 22, 1, '查看', '2300-1450-0', '超大文件导入', '客服短信', '2300-1450', '/ssm_dxkfBigFileExport.htm', '查看', 'View', '超大文件導入', 'Big file import', '客服短信', 'Customer service SMS' FROM DUAL
  WHERE NOT EXISTS (SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 706)$

INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 706 FROM DUAL WHERE NOT EXISTS (SELECT * FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 706)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 706 FROM DUAL WHERE NOT EXISTS (SELECT * FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 706)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 706 FROM DUAL WHERE NOT EXISTS (SELECT * FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 706)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID,OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
  SELECT 1076, 22, NULL, '批量输入', '2300-1100-2', '相同内容群发', '客服短信', '2300-1100', NULL, '批量輸入', 'Bulk input', '相同內容群發', 'Same content', '客服短信', 'Customer service SMS' FROM DUAL
  WHERE NOT EXISTS (SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 1076)$

INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID,OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
  SELECT 1077, 22, NULL, '超大文件', '2300-1100-3', '相同内容群发', '客服短信', '2300-1100', NULL, '超大文件', 'Big file', '相同內容群發', 'Same content', '客服短信', 'Customer service SMS' FROM DUAL
  WHERE NOT EXISTS (SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID = 1077)$

INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 1076 FROM DUAL WHERE NOT EXISTS (SELECT * FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 1076)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 1076 FROM DUAL WHERE NOT EXISTS (SELECT * FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 1076)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 1076 FROM DUAL WHERE NOT EXISTS (SELECT * FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 1076)$

INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 1077 FROM DUAL WHERE NOT EXISTS (SELECT * FROM LF_IMPOWER where ROLE_ID = 1 AND PRIVILEGE_ID = 1077)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 1077 FROM DUAL WHERE NOT EXISTS (SELECT * FROM LF_IMPOWER where ROLE_ID = 2 AND PRIVILEGE_ID = 1077)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 1077 FROM DUAL WHERE NOT EXISTS (SELECT * FROM LF_IMPOWER where ROLE_ID = 4 AND PRIVILEGE_ID = 1077)$



-- 解决老企业超级管理员新加菜单权限不全
/*DELIMITER $$*/
DROP PROCEDURE IF EXISTS `NEWPROC`$
CREATE  PROCEDURE `NEWPROC`()
BEGIN
-- 权限ID
DECLARE PRIVILEGEID INT;
-- 角色ID
DECLARE ROLEID INT;
-- 权限ID、角色ID 组合存在标识
DECLARE NUM INT;
-- 设置终止标记
DECLARE STOPFLAG INT DEFAULT 0;
-- 声明游标,查询所有企业需要添加到LF_IMPOWRE 表里面的角色ID和权限ID
DECLARE CUR CURSOR FOR SELECT ROLE_ID, PRIVILEGE_ID FROM ( SELECT MIN(ROLE_ID) ROLE_ID FROM LF_USER2ROLE LEFT JOIN LF_SYSUSER
ON LF_USER2ROLE.USER_ID = LF_SYSUSER.USER_ID WHERE LF_SYSUSER.USER_NAME = 'admin' AND LF_USER2ROLE.ROLE_ID NOT IN (1, 2, 4)
GROUP BY LF_SYSUSER.CORP_CODE ) A, ( SELECT PRIVILEGE_ID FROM LF_PRIVILEGE WHERE PRIVILEGE_ID IN (707,1074,1075,706,1076,1077,3554,3555,3556,3557,3558,3559,3560,3561,3562,3563,3565,3566,3568,3569,3570,3571,3572,3573,3575)) B ;
-- 未有值时停止标志为1
DECLARE CONTINUE HANDLER FOR  SQLSTATE '02000' SET STOPFLAG = 1;
-- 打开游标
OPEN CUR;
OUT_LOOP:LOOP
-- 提取游标行
FETCH  CUR INTO ROLEID,PRIVILEGEID;
		IF STOPFLAG = 1 THEN
		    LEAVE OUT_LOOP;
		END IF;
		-- 查询角色ID和 权限ID 在LF_IMPOWER 表中是否存在
		IF(PRIVILEGEID > 0 AND ROLEID > 0) THEN
			SELECT COUNT(*) INTO  NUM FROM `LF_IMPOWER` WHERE ROLE_ID =ROLEID AND PRIVILEGE_ID = PRIVILEGEID;
			-- 表里不存在才插入
		  	IF (NUM = 0) THEN
        		INSERT INTO `LF_IMPOWER`(ROLE_ID, PRIVILEGE_ID) VALUES(ROLEID, PRIVILEGEID);
		  	END IF;
		END IF;
 SET STOPFLAG=0;
END LOOP OUT_LOOP;
CLOSE CUR;
END $
/*DELIMITER ;*/

CALL NEWPROC()$
DROP PROCEDURE IF EXISTS `NEWPROC`$


-- 支持超大文件上传
CREATE TABLE IF NOT EXISTS LF_BIGFILE (
	ID BIGINT(20) AUTO_INCREMENT,    -- 主键ID(页面上显示“文件批次”)
	FILE_NAME VARCHAR(64) DEFAULT ' ' NOT NULL,    -- 文件批次名称
	SUB_COUNT BIGINT(20) DEFAULT 0 NOT NULL,    -- 提交总数
	EFF_COUNT BIGINT(20) DEFAULT 0 NOT NULL,    -- 有效号码数
	BLA_COUNT BIGINT(20) DEFAULT 0 NOT NULL,    -- 黑名单数量
	REP_COUNT BIGINT(20) DEFAULT 0 NOT NULL,    -- 重复号码数
	ERR_COUNT BIGINT(20) DEFAULT 0 NOT NULL,    -- 格式错误号码数
	OPR_NUM VARCHAR(50) DEFAULT ' ' NOT NULL,    -- 按照移动,联通,电信,国际的顺序用英文逗号分隔
	HANDLE_STATUS INT(5) DEFAULT 0 NOT NULL,    -- 1.上传中 2.上传成功(有效号码、黑名单、重复号码、格式错误号码已处理完成) 3.上传失败
	FILE_STATUS INT(5) DEFAULT 0 NOT NULL,    -- 1.启用 2.禁用
	TASKID VARCHAR(1024) DEFAULT ' ' NOT NULL,    -- 发送过该超大文件的任务号，用逗号分隔
	UPLOAD_NUM INT(11) DEFAULT 0 NOT NULL,    -- 原始上传文件个数
	EFF_NUM INT(11) DEFAULT 0 NOT NULL,    -- 拆分出来的有效号码文件个数
	HANDLE_NODE VARCHAR(50) DEFAULT ' ' NOT NULL,    -- 上传WEB节点
	USERID BIGINT(20) DEFAULT 0 NOT NULL,    -- 操作员ID
	USER_NAME VARCHAR(64) DEFAULT ' ' NOT NULL,    -- 操作员名称
	BUS_ID BIGINT(20) DEFAULT 0 NOT NULL,    -- 业务类型ID
	BUS_NAME VARCHAR(32) DEFAULT ' ' NOT NULL,    -- 业务名称
	BUS_CODE VARCHAR(64) DEFAULT ' ' NOT NULL,    -- 业务编码
	DEP_ID BIGINT(20) DEFAULT 0 NOT NULL,    -- 机构ID
	CREATE_TIME TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,    -- 上传时间
	UPDATE_TIME TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',    -- 修改时间
	FILE_URL VARCHAR(512) DEFAULT ' ' NOT NULL,    -- 有效拆分文件1
	FILE_URL2 VARCHAR(512) DEFAULT ' ' NOT NULL,    -- 有效拆分文件2
	FILE_URL3 VARCHAR(512) DEFAULT ' ' NOT NULL,    -- 有效拆分文件3
	FILE_URL4 VARCHAR(512) DEFAULT ' ' NOT NULL,    -- 有效拆分文件4
	FILE_URL5 VARCHAR(512) DEFAULT ' ' NOT NULL,    -- 有效拆分文件5
	FILE_URL6 VARCHAR(512) DEFAULT ' ' NOT NULL,    -- 有效拆分文件6
	FILE_URL7 VARCHAR(512) DEFAULT ' ' NOT NULL,    -- 有效拆分文件7
	FILE_URL8 VARCHAR(512) DEFAULT ' ' NOT NULL,    -- 有效拆分文件8
	FILE_URL9 VARCHAR(512) DEFAULT ' ' NOT NULL,    -- 有效拆分文件9
	VIEW_URL VARCHAR(512) DEFAULT ' ' NOT NULL,    -- 预览号码文件路径(只预览10个号码)
	BAD_URL VARCHAR(512) DEFAULT ' ' NOT NULL,    -- 错误号码文件路径（黑名单、重复号码、格式错误）
	CORP_CODE VARCHAR(64) DEFAULT ' ' NOT NULL,    -- 企业编码
	REMARK VARCHAR(512) DEFAULT ' ' NOT NULL,
	PRIMARY KEY (`ID`),
	INDEX `IX_LF_BIGFILE_USERID` (`USERID`), -- 索引
	INDEX `IX_LF_BIGFILE_DEP_ID` (`DEP_ID`), -- 索引
	INDEX `IX_LF_BIGFILE_CORPCODE` (`CORP_CODE`) -- 索引
)ENGINE=INNODB DEFAULT CHARSET=GBK$

/*修改下行记录导出菜单名称*/
UPDATE LF_PRIVILEGE SET MENUNAME='系统下行记录导出',ZH_TW_MENUNAME='系統下行記錄匯出',ZH_HK_MENUNAME='Record export of system MT' WHERE PRIVILEGE_ID=128$
-- 将企业流量暂时关闭
UPDATE LF_REVIEWSWITCH SET SWITCH_TYPE = 2 WHERE INFO_TYPE = 7$

-- 下发完成时间,由网关同步
DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'LF_MTTASK' AND COLUMN_NAME ='FINISHTIME' AND COLUMN_TYPE = 'DATETIME' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = '0000-00-00 00:00:00') THEN
  CALL COLUMNADD('LF_MTTASK','FINISHTIME','DATETIME NOT NULL DEFAULT ''0000-00-00 00:00:00''');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

/*DELIMITER ;*/
DROP TRIGGER IF EXISTS `TIG_TIME_LF_MTTASK`$
/*DELIMITER ;*/
CREATE TRIGGER `TIG_TIME_LF_MTTASK` BEFORE INSERT ON `LF_MTTASK` FOR EACH ROW BEGIN
SET @P_CURTIME = NOW();
IF DATE_FORMAT(NEW.FINISHTIME, '%Y-%m-%d') = '0000-00-00' THEN
    SET NEW.FINISHTIME = @P_CURTIME;
END IF;
END$
/*DELIMITER ;*/

-- 下发手机号码数,修改默认值,值为-1表示为执行此次升级之前已经下发完的数据 
DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'LF_MTTASK' AND COLUMN_NAME ='PHONENUM' AND DATA_TYPE = 'int' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = -1) THEN
  CALL COLUMNADD('LF_MTTASK','PHONENUM','INT NOT NULL DEFAULT -1');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$

-- 已下发信息数,修改默认值,值为-1表示为执行此次升级之前已经下发完的数据
DROP PROCEDURE IF EXISTS COL_ADD$
CREATE DEFINER=`root`@`%` PROCEDURE `COL_ADD`()
BEGIN
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME = 'LF_MTTASK' AND COLUMN_NAME ='SENDNUM' AND DATA_TYPE = 'int' AND IS_NULLABLE = 'NO' AND COLUMN_DEFAULT = -1) THEN
  CALL COLUMNADD('LF_MTTASK','SENDNUM','INT NOT NULL DEFAULT -1');
END IF;
END$
CALL COL_ADD()$
DROP PROCEDURE COL_ADD$


INSERT INTO LF_PRIVILEGE (PRIVILEGE_ID, RESOURCE_ID, OPERATE_ID, COMMENTS, PRIV_CODE, MENUNAME, MODNAME, MENUCODE, MENUSITE, ZH_TW_COMMENTS, ZH_HK_COMMENTS, ZH_TW_MENUNAME, ZH_HK_MENUNAME, ZH_TW_MODNAME, ZH_HK_MODNAME)
SELECT 129, 27, NULL, '批量补发', '1520-1200-1', '系统下行记录', '数据查询', '1520-1200', NULL, '批量補發', 'Batch Send', '系統下行記錄', 'MT record', '數據查詢', 'Data query' FROM DUAL
WHERE NOT EXISTS(SELECT * FROM LF_PRIVILEGE WHERE PRIVILEGE_ID=129)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 1, 129 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=129 AND ROLE_ID=1)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 2, 129 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=129 AND ROLE_ID=2)$
INSERT INTO LF_IMPOWER(ROLE_ID, PRIVILEGE_ID) SELECT 4, 129 FROM DUAL WHERE NOT EXISTS(SELECT * FROM LF_IMPOWER WHERE PRIVILEGE_ID=129 AND ROLE_ID=4)$

##对LF_MTTASK表的PHONENUM、SENDNUM进行更新。
/*DELIMITER ;*/
DROP PROCEDURE  IF EXISTS GW_UPLFMTTASK_P1$
CREATE DEFINER=`root`@`%` PROCEDURE `GW_UPLFMTTASK_P1`(
	PITASKID INT,
	PIPHONENUM INT,
	PISENDNUM INT
)
BEGIN
	##根据TASKID字段做为条件，如果PIPHONENUM不为0，则更新赋值PHONENUM，并对SENDNUM字段做增加操作
	IF @PIPHONENUM<>0 THEN
	UPDATE LF_MTTASK SET PHONENUM=PIPHONENUM,SENDNUM=SENDNUM+PISENDNUM,FINISHTIME=now() WHERE TASKID=PITASKID;
	ELSE 
	UPDATE LF_MTTASK SET SENDNUM=SENDNUM+PISENDNUM,FINISHTIME=now() WHERE TASKID=PITASKID;
	END IF;
END$
/*DELIMITER ;*/

/* V72.00-V73.00 END*/

/*EMP升级脚本    END*/

DROP PROCEDURE IF EXISTS `LF_PVERV0`$
/*DELIMITER ;*/
CREATE DEFINER=`root`@`%` PROCEDURE `LF_PVERV0`(
    VERSIONSTR VARCHAR(32),
    DBVERSIONSTR VARCHAR(32),
    WBSVERSION VARCHAR(32),
    SPGATEVERSION VARCHAR(32),
    NUM INT,
    TOTALSTR INT
)
BEGIN
	/*EMP产品版本记录*/
	/*EMP-WEB*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=1000) THEN
		INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
		VALUES(1000,1000,VERSIONSTR,NOW(),NOW(),'EMP-WEB');
	ELSE
		UPDATE LF_VERSION SET UPDATETIME=NOW(),VERSION=VERSIONSTR WHERE PRODUCT_ID=1000 AND PROCESS_ID=1000;
	END IF;
	/*EMP_GATEWAY*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=2000) THEN
		INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
		VALUES(1000,2000,WBSVERSION,NOW(),NOW(),'EMP_GATEWAY');
	ELSE
		UPDATE LF_VERSION SET UPDATETIME=NOW(),VERSION=WBSVERSION WHERE  PRODUCT_ID=1000 AND PROCESS_ID=2000;
	END IF;
	/*SMT_SPGATE*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION WHERE PRODUCT_ID=1000 AND PROCESS_ID=3000) THEN
		INSERT INTO LF_VERSION(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
		VALUES(1000,3000,SPGATEVERSION,NOW(),NOW(),'SMT_SPGATE');
	ELSE
		UPDATE LF_VERSION SET UPDATETIME=NOW(),VERSION=SPGATEVERSION WHERE  PRODUCT_ID=1000 AND PROCESS_ID=3000;
	END IF;
	/*EMP产品版本历史记录*/
	/*EMP-WEB*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION_HIS WHERE VERSION=@VERSIONSTR AND PRODUCT_ID=1000 AND PROCESS_ID=1000) THEN
			INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO,ISRELEASE,VERSIONINFO)
			VALUES(1000,1000,VERSIONSTR,NOW(),NOW(),'EMP-WEB',1,'1.新增企业流量');
	ELSE
			UPDATE LF_VERSION_HIS SET UPDATETIME=NOW(),ISRELEASE=1,VERSIONINFO='1.新增企业流量' WHERE PRODUCT_ID=1000 AND PROCESS_ID=1000;
	END IF;
	/*EMP_GATEWAY*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION_HIS WHERE VERSION=@WBSVERSION AND PRODUCT_ID=1000 AND PROCESS_ID=2000) THEN
		INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
		VALUES(1000,2000,WBSVERSION,NOW(),NOW(),'EMP_GATEWAY');
	ELSE
		UPDATE LF_VERSION_HIS SET UPDATETIME=NOW() WHERE  PRODUCT_ID=1000 AND PROCESS_ID=2000;
	END IF;
	/*SMT_SPGATE*/
	IF NOT EXISTS(SELECT * FROM LF_VERSION_HIS WHERE VERSION=@SPGATEVERSION AND PRODUCT_ID=1000 AND PROCESS_ID=3000) THEN
		INSERT INTO LF_VERSION_HIS(PRODUCT_ID,PROCESS_ID,VERSION,UPDATETIME,CREATETIME,MEMO)
		VALUES(1000,3000,SPGATEVERSION,NOW(),NOW(),'SMT_SPGATE');
	ELSE
		UPDATE LF_VERSION_HIS SET UPDATETIME=NOW() WHERE  PRODUCT_ID=1000 AND PROCESS_ID=3000;
	END IF;
	IF NOT EXISTS(SELECT * FROM LF_DB_SCRIPT WHERE VERSION=@DBVERSIONSTR AND CURRENT_NO=NUM AND TOTAL=TOTALSTR) THEN
		/*EMP产品数据库版本信息表*/
		INSERT INTO LF_DB_SCRIPT(VERSION,UPDATETIME,CREATETIME,CURRENT_NO,TOTAL,STATE,MEMO)
		VALUES(DBVERSIONSTR,NOW(),NOW(),NUM,TOTALSTR,2,'1号脚本');
	ELSE
		UPDATE LF_DB_SCRIPT SET STATE=2,UPDATETIME=NOW() WHERE  CURRENT_NO=NUM AND TOTAL=TOTALSTR;
	END IF;
END$     
/*;; DELIMITER ;*/
CALL LF_PVERV0('7.3.0.515','73.00','8.6.1.216','6.1.50.342',3,3)$
DROP PROCEDURE IF EXISTS `LF_PVERV0`$
/*****V71.00-V73.00 END*/